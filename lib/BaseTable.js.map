{"version":3,"sources":["../src/BaseTable.js"],"names":["getColumns","columns","children","getContainerStyle","width","maxWidth","height","overflow","DEFAULT_COMPONENTS","TableCell","TableHeaderCell","TableFooterCell","ExpandIcon","SortIndicator","RESIZE_THROTTLE_WAIT","EMPTY_ARRAY","BaseTable","props","defaultExpandedRowKeys","state","scrollbarSize","hoveredRowKey","clickedRowKey","resizingKey","resizingWidth","expandedRowKeys","columnManager","ColumnManager","fixed","_setContainerRef","bind","_setMainTableRef","_setLeftTableRef","_setRightTableRef","renderExpandIcon","renderRow","renderRowCell","renderHeader","renderFooter","renderHeaderCell","renderFooterCell","_handleScroll","_handleVerticalScroll","_handleRowsRendered","_handleRowHover","_handleRowClick","_handleRowExpand","_handleColumnResize","_handleColumnResizeStart","_handleColumnResizeStop","_handleColumnSort","_getLeftTableContainerStyle","_getRightTableContainerStyle","_flattenOnKeys","tree","keys","dataKey","_depthMap","_resetColumnManager","reset","isObjectEqual","_scroll","scrollLeft","scrollTop","_scrollHeight","_lastScannedRowIndex","_hasDataChangedSinceEndReached","_data","data","_horizontalScrollbarSize","_verticalScrollbarSize","_scrollbarPresenceChanged","tableNode","undefined","expandedData","getExpandedRowKeys","expandedDepthMap","length","rowHeight","getColumnsWidth","table","forceUpdateTable","leftTable","rightTable","offset","scrollToPosition","scrollToTop","rowIndex","align","scrollToRow","setState","rowData","depth","onExpand","rowKey","expandColumnKey","expandIconProps","expandable","expanded","indexOf","extraProps","_getComponent","isScrolling","style","rowClassName","rowRenderer","rowEventHandlers","rowClass","rowProps","className","_prefixClass","role","key","cellRenderer","expandIconRenderer","onRowExpand","onRowHover","hasFrozenColumns","onRowClick","column","columnIndex","expandIcon","PlaceholderKey","getColumnStyle","dataGetter","cellData","cellProps","container","cell","cellCls","cls","Alignment","CENTER","RIGHT","tagName","rest","Tag","headerIndex","headerClassName","headerRenderer","headerClass","headerProps","footerIndex","footerClassName","footerRenderer","footerClass","footerProps","sortBy","sortState","headerCellProps","sorting","sortOrder","order","SortOrder","ASC","DESC","sortable","resizable","footerCellProps","headerHeight","_getTableHeight","tableWidth","columnsWidth","Math","max","round","getMainColumns","hasLeftFrozenColumns","containerHeight","_getFrozenContainerHeight","getLeftFrozenColumnsWidth","getLeftFrozenColumns","noop","hasRightFrozenColumns","getRightFrozenColumnsWidth","scrollbarWidth","getRightFrozenColumns","idx","findIndex","columnWidth","frozen","leftWidth","recomputeColumnsWidth","slice","left","FrozenDirection","rightWidth","footerHeight","emptyRenderer","_getHeaderHeight","top","bottom","overlayRenderer","frozenData","disabled","classPrefix","_calcScrollbarSizes","containerStyle","position","renderMainTable","renderLeftTable","renderRightTable","renderResizingLine","renderEmptyLayer","renderOverlay","getScrollbarSize","prevProps","prevState","maxHeight","_maybeCallOnEndReached","_maybeScrollbarPresenceChange","ref","name","components","Array","isArray","reduce","sum","tableHeight","footer","frozenRowsHeight","_getFrozenRowsHeight","totalRowsHeight","getTotalRowsHeight","totalHeight","min","totalColumnsWidth","getTotalColumnsWidth","prevHorizontalScrollbarSize","prevVerticalScrollbarSize","_getBodyHeight","onScrollbarPresenceChange","size","horizontal","vertical","onEndReached","onEndReachedThreshold","scrollHeight","clientHeight","distanceFromEnd","args","lastScrollTop","onScroll","onRowsRendered","overscanStopIndex","hovered","clicked","push","index","splice","onExpandedRowsChange","setColumnWidth","getColumn","onColumnResize","onColumnResizeEnd","event","currentTarget","dataset","onColumnSort","React","PureComponent","Column","defaultProps","useIsScrolling","overscanRowCount","defaultGetScrollbarSize","propTypes","PropTypes","string","object","node","arrayOf","shape","isRequired","oneOfType","number","bool","func","element","oneOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAcA,IAAMA,UAAU,GAAG,4BAAQ,UAACC,OAAD,EAAUC,QAAV;AAAA,SAAuBD,OAAO,IAAI,6BAAiBC,QAAjB,CAAlC;AAAA,CAAR,CAAnB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB;AAAA,SAA8B;AACtDF,IAAAA,KAAK,EAALA,KADsD;AAEtDC,IAAAA,QAAQ,EAARA,QAFsD;AAGtDC,IAAAA,MAAM,EAANA,MAHsD;AAItDC,IAAAA,QAAQ,EAAE;AAJ4C,GAA9B;AAAA,CAA1B;;AAOA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAATA,qBADyB;AAEzBC,EAAAA,eAAe,EAAfA,2BAFyB;AAGzBC,EAAAA,eAAe,EAAfA,2BAHyB;AAIzBC,EAAAA,UAAU,EAAVA,sBAJyB;AAKzBC,EAAAA,aAAa,EAAbA;AALyB,CAA3B;AAQA,IAAMC,oBAAoB,GAAG,EAA7B,C,CAEA;;AACA,IAAMC,WAAW,GAAG,EAApB;AAEA;;;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,qHAAMA,KAAN;AADiB,QAGThB,OAHS,GAGqCgB,KAHrC,CAGThB,OAHS;AAAA,QAGAC,QAHA,GAGqCe,KAHrC,CAGAf,QAHA;AAAA,QAGUgB,sBAHV,GAGqCD,KAHrC,CAGUC,sBAHV;AAIjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CADJ;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,aAAa,EAAE,IAHJ;AAIXC,MAAAA,WAAW,EAAE,IAJF;AAKXC,MAAAA,aAAa,EAAE,CALJ;AAMXC,MAAAA,eAAe,EAAE,uBAAWP,sBAAX;AANN,KAAb;AAQA,UAAKQ,aAAL,GAAqB,IAAIC,yBAAJ,CAAkB3B,UAAU,CAACC,OAAD,EAAUC,QAAV,CAA5B,EAAiDe,KAAK,CAACW,KAAvD,CAArB;AAEA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,gDAAxB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,gDAAxB;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,gDAAxB;AACA,UAAKG,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBH,IAAvB,gDAAzB;AAEA,UAAKI,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBJ,IAAtB,gDAAxB;AACA,UAAKK,SAAL,GAAiB,MAAKA,SAAL,CAAeL,IAAf,gDAAjB;AACA,UAAKM,aAAL,GAAqB,MAAKA,aAAL,CAAmBN,IAAnB,gDAArB;AACA,UAAKO,YAAL,GAAoB,MAAKA,YAAL,CAAkBP,IAAlB,gDAApB;AACA,UAAKQ,YAAL,GAAoB,MAAKA,YAAL,CAAkBR,IAAlB,gDAApB;AACA,UAAKS,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBT,IAAtB,gDAAxB;AACA,UAAKU,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBV,IAAtB,gDAAxB;AAEA,UAAKW,aAAL,GAAqB,MAAKA,aAAL,CAAmBX,IAAnB,gDAArB;AACA,UAAKY,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BZ,IAA3B,gDAA7B;AACA,UAAKa,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBb,IAAzB,gDAA3B;AACA,UAAKc,eAAL,GAAuB,MAAKA,eAAL,CAAqBd,IAArB,gDAAvB;AACA,UAAKe,eAAL,GAAuB,MAAKA,eAAL,CAAqBf,IAArB,gDAAvB;AACA,UAAKgB,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBhB,IAAtB,gDAAxB;AACA,UAAKiB,mBAAL,GAA2B,qBAAS,MAAKA,mBAAL,CAAyBjB,IAAzB,gDAAT,EAA8ChB,oBAA9C,CAA3B;AACA,UAAKkC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BlB,IAA9B,gDAAhC;AACA,UAAKmB,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BnB,IAA7B,gDAA/B;AACA,UAAKoB,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBpB,IAAvB,gDAAzB;AAEA,UAAKqB,2BAAL,GAAmC,4BAAQhD,iBAAR,CAAnC;AACA,UAAKiD,4BAAL,GAAoC,4BAAQjD,iBAAR,CAApC;AACA,UAAKkD,cAAL,GAAsB,4BAAQ,UAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAyB;AACrD,YAAKC,SAAL,GAAiB,EAAjB;AACA,aAAO,0BAAcH,IAAd,EAAoBC,IAApB,EAA0B,MAAKE,SAA/B,EAA0CD,OAA1C,CAAP;AACD,KAHqB,CAAtB;AAIA,UAAKE,mBAAL,GAA2B,4BAAQ,UAACzD,OAAD,EAAU2B,KAAV,EAAoB;AACrD,YAAKF,aAAL,CAAmBiC,KAAnB,CAAyB1D,OAAzB,EAAkC2B,KAAlC;AACD,KAF0B,EAExBgC,oBAFwB,CAA3B;AAIA,UAAKC,OAAL,GAAe;AAAEC,MAAAA,UAAU,EAAE,CAAd;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAAf;AACA,UAAKC,aAAL,GAAqB,CAArB;AACA,UAAKC,oBAAL,GAA4B,CAAC,CAA7B;AACA,UAAKC,8BAAL,GAAsC,IAAtC;AAEA,UAAKC,KAAL,GAAalD,KAAK,CAACmD,IAAnB;AACA,UAAKX,SAAL,GAAiB,EAAjB;AAEA,UAAKY,wBAAL,GAAgC,CAAhC;AACA,UAAKC,sBAAL,GAA8B,CAA9B;AACA,UAAKC,yBAAL,GAAiC,KAAjC;AA1DiB;AA2DlB;AAED;;;;;;;iCAGa;AACX,aAAO,KAAKC,SAAZ;AACD;AAED;;;;;;uCAGmB;AACjB,aAAO,KAAK9C,aAAZ;AACD;AAED;;;;;;yCAGqB;AAAA,UACXD,eADW,GACS,KAAKR,KADd,CACXQ,eADW;AAEnB,aAAOA,eAAe,KAAKgD,SAApB,GAAgChD,eAAe,IAAIV,WAAnD,GAAiE,KAAKI,KAAL,CAAWM,eAAnF;AACD;AAED;;;;;;uCAGmB;AACjB,aAAO;AACLiD,QAAAA,YAAY,EAAE,KAAKP,KADd;AAEL1C,QAAAA,eAAe,EAAE,KAAKkD,kBAAL,EAFZ;AAGLC,QAAAA,gBAAgB,EAAE,KAAKnB;AAHlB,OAAP;AAKD;AAED;;;;;;yCAGqB;AACnB,aAAO,KAAKU,KAAL,CAAWU,MAAX,GAAoB,KAAK5D,KAAL,CAAW6D,SAAtC;AACD;AAED;;;;;;2CAGuB;AACrB,aAAO,KAAKpD,aAAL,CAAmBqD,eAAnB,EAAP;AACD;AAED;;;;;;;;;;uCAOmB;AACjB,WAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,gBAAX,EAAd;AACA,WAAKC,SAAL,IAAkB,KAAKA,SAAL,CAAeD,gBAAf,EAAlB;AACA,WAAKE,UAAL,IAAmB,KAAKA,UAAL,CAAgBF,gBAAhB,EAAnB;AACD;AAED;;;;;;;;;qCAMiBG,M,EAAQ;AACvB,WAAKvB,OAAL,GAAeuB,MAAf;AAEA,WAAKJ,KAAL,IAAc,KAAKA,KAAL,CAAWK,gBAAX,CAA4BD,MAA5B,CAAd;AACA,WAAKF,SAAL,IAAkB,KAAKA,SAAL,CAAeI,WAAf,CAA2BF,MAAM,CAACrB,SAAlC,CAAlB;AACA,WAAKoB,UAAL,IAAmB,KAAKA,UAAL,CAAgBG,WAAhB,CAA4BF,MAAM,CAACrB,SAAnC,CAAnB;AACD;AAED;;;;;;;;gCAKYA,S,EAAW;AACrB,WAAKF,OAAL,CAAaE,SAAb,GAAyBA,SAAzB;AAEA,WAAKiB,KAAL,IAAc,KAAKA,KAAL,CAAWK,gBAAX,CAA4B,KAAKxB,OAAjC,CAAd;AACA,WAAKqB,SAAL,IAAkB,KAAKA,SAAL,CAAeI,WAAf,CAA2BvB,SAA3B,CAAlB;AACA,WAAKoB,UAAL,IAAmB,KAAKA,UAAL,CAAgBG,WAAhB,CAA4BvB,SAA5B,CAAnB;AACD;AAED;;;;;;;;iCAKaD,U,EAAY;AACvB,WAAKD,OAAL,CAAaC,UAAb,GAA0BA,UAA1B;AAEA,WAAKkB,KAAL,IAAc,KAAKA,KAAL,CAAWK,gBAAX,CAA4B,KAAKxB,OAAjC,CAAd;AACD;AAED;;;;;;;;;;;;;;;;kCAc0C;AAAA,UAA9B0B,QAA8B,uEAAnB,CAAmB;AAAA,UAAhBC,KAAgB,uEAAR,MAAQ;AACxC,WAAKR,KAAL,IAAc,KAAKA,KAAL,CAAWS,WAAX,CAAuBF,QAAvB,EAAiCC,KAAjC,CAAd;AACA,WAAKN,SAAL,IAAkB,KAAKA,SAAL,CAAeO,WAAf,CAA2BF,QAA3B,EAAqCC,KAArC,CAAlB;AACA,WAAKL,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,WAAhB,CAA4BF,QAA5B,EAAsCC,KAAtC,CAAnB;AACD;AAED;;;;;;;;;uCAMmB/D,e,EAAiB;AAClC;AACA,UAAI,KAAKR,KAAL,CAAWQ,eAAX,KAA+BgD,SAAnC,EAA8C;AAE9C,WAAKiB,QAAL,CAAc;AACZjE,QAAAA,eAAe,EAAE,uBAAWA,eAAX;AADL,OAAd;AAGD;;;2CAEwD;AAAA,UAAtCkE,OAAsC,QAAtCA,OAAsC;AAAA,UAA7BJ,QAA6B,QAA7BA,QAA6B;AAAA,UAAnBK,KAAmB,QAAnBA,KAAmB;AAAA,UAAZC,QAAY,QAAZA,QAAY;AAAA,wBACF,KAAK5E,KADH;AAAA,UAC/C6E,MAD+C,eAC/CA,MAD+C;AAAA,UACvCC,eADuC,eACvCA,eADuC;AAAA,UACtBC,eADsB,eACtBA,eADsB;AAEvD,UAAI,CAACD,eAAL,EAAsB,OAAO,IAAP;AAEtB,UAAME,UAAU,GAAGV,QAAQ,IAAI,CAAZ,IAAiB,wBAAYI,OAAZ,CAApC;AACA,UAAMO,QAAQ,GAAGX,QAAQ,IAAI,CAAZ,IAAiB,KAAKZ,kBAAL,GAA0BwB,OAA1B,CAAkCR,OAAO,CAACG,MAAD,CAAzC,KAAsD,CAAxF;AACA,UAAMM,UAAU,GAAG,yBAAaJ,eAAb,EAA8B;AAAEL,QAAAA,OAAO,EAAPA,OAAF;AAAWJ,QAAAA,QAAQ,EAARA,QAAX;AAAqBK,QAAAA,KAAK,EAALA,KAArB;AAA4BK,QAAAA,UAAU,EAAVA,UAA5B;AAAwCC,QAAAA,QAAQ,EAARA;AAAxC,OAA9B,CAAnB;;AACA,UAAMtF,UAAU,GAAG,KAAKyF,aAAL,CAAmB,YAAnB,CAAnB;;AAEA,aAAO,gCAAC,UAAD;AAAY,QAAA,KAAK,EAAET,KAAnB;AAA0B,QAAA,UAAU,EAAEK,UAAtC;AAAkD,QAAA,QAAQ,EAAEC;AAA5D,SAA0EE,UAA1E;AAAsF,QAAA,QAAQ,EAAEP;AAAhG,SAAP;AACD;;;qCAE6D;AAAA;;AAAA,UAAlDS,WAAkD,SAAlDA,WAAkD;AAAA,UAArCrG,OAAqC,SAArCA,OAAqC;AAAA,UAA5B0F,OAA4B,SAA5BA,OAA4B;AAAA,UAAnBJ,QAAmB,SAAnBA,QAAmB;AAAA,UAATgB,KAAS,SAATA,KAAS;AAAA,yBACa,KAAKtF,KADlB;AAAA,UACpDuF,YADoD,gBACpDA,YADoD;AAAA,UACtCC,WADsC,gBACtCA,WADsC;AAAA,UACzBC,gBADyB,gBACzBA,gBADyB;AAAA,UACPX,eADO,gBACPA,eADO;AAG5D,UAAMY,QAAQ,GAAG,yBAAaH,YAAb,EAA2B;AAAEvG,QAAAA,OAAO,EAAPA,OAAF;AAAW0F,QAAAA,OAAO,EAAPA,OAAX;AAAoBJ,QAAAA,QAAQ,EAARA;AAApB,OAA3B,CAAjB;AACA,UAAMa,UAAU,GAAG,yBAAa,KAAKnF,KAAL,CAAW2F,QAAxB,EAAkC;AAAE3G,QAAAA,OAAO,EAAPA,OAAF;AAAW0F,QAAAA,OAAO,EAAPA,OAAX;AAAoBJ,QAAAA,QAAQ,EAARA;AAApB,OAAlC,CAAnB;AACA,UAAMO,MAAM,GAAGH,OAAO,CAAC,KAAK1E,KAAL,CAAW6E,MAAZ,CAAtB;AACA,UAAMF,KAAK,GAAG,KAAKnC,SAAL,CAAeqC,MAAf,KAA0B,CAAxC;AAEA,UAAMe,SAAS,GAAG,4BAAG,KAAKC,YAAL,CAAkB,KAAlB,CAAH,EAA6BH,QAA7B,mDACf,KAAKG,YAAL,sBAAgClB,KAAhC,EADe,EAC4B,CAAC,CAACG,eAAF,IAAqBR,QAAQ,IAAI,CAD7D,yCAEf,KAAKuB,YAAL,CAAkB,eAAlB,CAFe,EAEsB,CAAC,CAACf,eAAF,IAAqB,KAAKpB,kBAAL,GAA0BwB,OAA1B,CAAkCL,MAAlC,KAA6C,CAFxF,yCAGf,KAAKgB,YAAL,CAAkB,cAAlB,CAHe,EAGqB,CAACR,WAAD,IAAgBR,MAAM,KAAK,KAAK3E,KAAL,CAAWE,aAH3D,yCAIf,KAAKyF,YAAL,CAAkB,cAAlB,CAJe,EAIqBhB,MAAM,KAAK,KAAK3E,KAAL,CAAWG,aAJ3C,yCAKf,KAAKwF,YAAL,CAAkB,aAAlB,CALe,EAKoBlB,KAAK,KAAK,CAAV,IAAeL,QAAQ,GAAG,CAL9C,yCAMf,KAAKuB,YAAL,CAAkB,iBAAlB,CANe,EAMwBL,WANxB,QAAlB;;AASA,UAAMG,QAAQ,qBACTR,UADS;AAEZW,QAAAA,IAAI,EAAE,KAFM;AAGZC,QAAAA,GAAG,gBAASlB,MAAT,CAHS;AAIZQ,QAAAA,WAAW,EAAXA,WAJY;AAKZO,QAAAA,SAAS,EAATA,SALY;AAMZN,QAAAA,KAAK,EAALA,KANY;AAOZtG,QAAAA,OAAO,EAAPA,OAPY;AAQZsF,QAAAA,QAAQ,EAARA,QARY;AASZI,QAAAA,OAAO,EAAPA,OATY;AAUZG,QAAAA,MAAM,EAANA,MAVY;AAWZC,QAAAA,eAAe,EAAfA,eAXY;AAYZH,QAAAA,KAAK,EAALA,KAZY;AAaZc,QAAAA,gBAAgB,EAAhBA,gBAbY;AAcZD,QAAAA,WAAW,EAAXA,WAdY;AAeZQ,QAAAA,YAAY,EAAE,KAAK7E,aAfP;AAgBZ8E,QAAAA,kBAAkB,EAAE,KAAKhF,gBAhBb;AAiBZiF,QAAAA,WAAW,EAAE,KAAKrE,gBAjBN;AAkBZ;AACAsE,QAAAA,UAAU,EAAE,KAAK1F,aAAL,CAAmB2F,gBAAnB,KAAwC,KAAKzE,eAA7C,GAA+D,IAnB/D;AAoBZ0E,QAAAA,UAAU,EAAE,KAAK5F,aAAL,CAAmB2F,gBAAnB,KAAwC,KAAKxE,eAA7C,GAA+D;AApB/D,QAAd;;AAuBA,aAAO,gCAAC,oBAAD,EAAc+D,QAAd,CAAP;AACD;;;yCAE2F;AAAA;;AAAA,UAA5EN,WAA4E,SAA5EA,WAA4E;AAAA,UAA/DrG,OAA+D,SAA/DA,OAA+D;AAAA,UAAtDsH,MAAsD,SAAtDA,MAAsD;AAAA,UAA9CC,WAA8C,SAA9CA,WAA8C;AAAA,UAAjC7B,OAAiC,SAAjCA,OAAiC;AAAA,UAAxBJ,QAAwB,SAAxBA,QAAwB;AAAA,UAAdkC,UAAc,SAAdA,UAAc;;AAC1F,UAAIF,MAAM,CAAC5F,0BAAc+F,cAAf,CAAV,EAA0C;AACxC,eACE;AACE,UAAA,GAAG,gBAAS/B,OAAO,CAAC,KAAK1E,KAAL,CAAW6E,MAAZ,CAAhB,mBAA4CyB,MAAM,CAACP,GAAnD,iBADL;AAEE,UAAA,SAAS,EAAE,KAAKF,YAAL,CAAkB,sBAAlB,CAFb;AAGE,UAAA,KAAK,EAAE,KAAKpF,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC;AAHT,UADF;AAOD;;AATyF,UAWlFH,SAXkF,GAWjCU,MAXiC,CAWlFV,SAXkF;AAAA,UAWvErD,OAXuE,GAWjC+D,MAXiC,CAWvE/D,OAXuE;AAAA,UAW9DoE,UAX8D,GAWjCL,MAXiC,CAW9DK,UAX8D;AAAA,UAWlDX,YAXkD,GAWjCM,MAXiC,CAWlDN,YAXkD;;AAY1F,UAAMxG,SAAS,GAAG,KAAK4F,aAAL,CAAmB,WAAnB,CAAlB;;AAEA,UAAMwB,QAAQ,GAAGD,UAAU,GACvBA,UAAU,CAAC;AAAE3H,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgC7B,QAAAA,OAAO,EAAPA,OAAhC;AAAyCJ,QAAAA,QAAQ,EAARA;AAAzC,OAAD,CADa,GAEvB,qBAASI,OAAT,EAAkBnC,OAAlB,CAFJ;AAGA,UAAMsE,SAAS,GAAG;AAAExB,QAAAA,WAAW,EAAXA,WAAF;AAAeuB,QAAAA,QAAQ,EAARA,QAAf;AAAyB5H,QAAAA,OAAO,EAAPA,OAAzB;AAAkCsH,QAAAA,MAAM,EAANA,MAAlC;AAA0CC,QAAAA,WAAW,EAAXA,WAA1C;AAAuD7B,QAAAA,OAAO,EAAPA,OAAvD;AAAgEJ,QAAAA,QAAQ,EAARA,QAAhE;AAA0EwC,QAAAA,SAAS,EAAE;AAArF,OAAlB;AACA,UAAMC,IAAI,GAAG,0BAAcf,YAAY,IAAI,gCAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKH,YAAL,CAAkB,eAAlB;AAAtB,QAA9B,EAA4FgB,SAA5F,CAAb;AAEA,UAAMG,OAAO,GAAG,yBAAapB,SAAb,EAAwB;AAAEgB,QAAAA,QAAQ,EAARA,QAAF;AAAY5H,QAAAA,OAAO,EAAPA,OAAZ;AAAqBsH,QAAAA,MAAM,EAANA,MAArB;AAA6BC,QAAAA,WAAW,EAAXA,WAA7B;AAA0C7B,QAAAA,OAAO,EAAPA,OAA1C;AAAmDJ,QAAAA,QAAQ,EAARA;AAAnD,OAAxB,CAAhB;AACA,UAAM2C,GAAG,GAAG,4BAAG,KAAKpB,YAAL,CAAkB,UAAlB,CAAH,EAAkCmB,OAAlC,qDACT,KAAKnB,YAAL,CAAkB,wBAAlB,CADS,EACqCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUC,MADhE,0CAET,KAAKtB,YAAL,CAAkB,uBAAlB,CAFS,EAEoCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUE,KAF/D,SAAZ;AAKA,UAAMjC,UAAU,GAAG,yBAAa,KAAKnF,KAAL,CAAW6G,SAAxB,EAAmC;AAAE7H,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgC7B,QAAAA,OAAO,EAAPA,OAAhC;AAAyCJ,QAAAA,QAAQ,EAARA;AAAzC,OAAnC,CAAnB;;AA1B0F,kBA2B7Da,UAAU,IAAI,EA3B+C;AAAA,UA2BlFkC,OA3BkF,SA2BlFA,OA3BkF;AAAA,UA2BtEC,IA3BsE;;AA4B1F,UAAMC,GAAG,GAAGF,OAAO,IAAI,KAAvB;AACA,aACE,gCAAC,GAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,GAAG,gBAAS3C,OAAO,CAAC,KAAK1E,KAAL,CAAW6E,MAAZ,CAAhB,mBAA4CyB,MAAM,CAACP,GAAnD;AAFL,SAGMuB,IAHN;AAIE,QAAA,SAAS,EAAEL,GAJb;AAKE,QAAA,KAAK,EAAE,KAAKxG,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC;AALT,UAOGS,UAPH,EAQGO,IARH,CADF;AAYD;;;wCAE6C;AAAA;;AAAA,UAA/B/H,OAA+B,SAA/BA,OAA+B;AAAA,UAAtBwI,WAAsB,SAAtBA,WAAsB;AAAA,UAATlC,KAAS,SAATA,KAAS;AAAA,yBACA,KAAKtF,KADL;AAAA,UACpCyH,eADoC,gBACpCA,eADoC;AAAA,UACnBC,cADmB,gBACnBA,cADmB;AAG5C,UAAMC,WAAW,GAAG,yBAAaF,eAAb,EAA8B;AAAEzI,QAAAA,OAAO,EAAPA,OAAF;AAAWwI,QAAAA,WAAW,EAAXA;AAAX,OAA9B,CAApB;AACA,UAAMrC,UAAU,GAAG,yBAAa,KAAKnF,KAAL,CAAW4H,WAAxB,EAAqC;AAAE5I,QAAAA,OAAO,EAAPA,OAAF;AAAWwI,QAAAA,WAAW,EAAXA;AAAX,OAArC,CAAnB;AAEA,UAAM5B,SAAS,GAAG,4BAAG,KAAKC,YAAL,CAAkB,YAAlB,CAAH,EAAoC8B,WAApC,qDACf,KAAK9B,YAAL,CAAkB,sBAAlB,CADe,EAC6B,CAAC,CAAC,KAAK3F,KAAL,CAAWI,WAD1C,0CAEf,KAAKuF,YAAL,CAAkB,wBAAlB,CAFe,EAE+B6B,cAF/B,SAAlB;;AAKA,UAAME,WAAW,qBACZzC,UADY;AAEfW,QAAAA,IAAI,EAAE,KAFS;AAGfC,QAAAA,GAAG,mBAAYyB,WAAZ,CAHY;AAIf5B,QAAAA,SAAS,EAATA,SAJe;AAKfN,QAAAA,KAAK,EAALA,KALe;AAMftG,QAAAA,OAAO,EAAPA,OANe;AAOfwI,QAAAA,WAAW,EAAXA,WAPe;AAQfE,QAAAA,cAAc,EAAdA,cARe;AASf1B,QAAAA,YAAY,EAAE,KAAK1E,gBATJ;AAUfwD,QAAAA,eAAe,EAAE,KAAK9E,KAAL,CAAW8E,eAVb;AAWf0B,QAAAA,UAAU,EAAE,KAAKpB,aAAL,CAAmB,YAAnB;AAXG,QAAjB;;AAcA,aAAO,gCAAC,0BAAD,EAAoBwC,WAApB,CAAP;AACD;;;wCAE6C;AAAA;;AAAA,UAA/B5I,OAA+B,SAA/BA,OAA+B;AAAA,UAAtB6I,WAAsB,SAAtBA,WAAsB;AAAA,UAATvC,KAAS,SAATA,KAAS;AAAA,yBACA,KAAKtF,KADL;AAAA,UACpC8H,eADoC,gBACpCA,eADoC;AAAA,UACnBC,cADmB,gBACnBA,cADmB;AAG5C,UAAMC,WAAW,GAAG,yBAAaF,eAAb,EAA8B;AAAE9I,QAAAA,OAAO,EAAPA,OAAF;AAAW6I,QAAAA,WAAW,EAAXA;AAAX,OAA9B,CAApB;AACA,UAAM1C,UAAU,GAAG,yBAAa,KAAKnF,KAAL,CAAWiI,WAAxB,EAAqC;AAAEjJ,QAAAA,OAAO,EAAPA,OAAF;AAAW6I,QAAAA,WAAW,EAAXA;AAAX,OAArC,CAAnB;AAEA,UAAMjC,SAAS,GAAG,4BAAG,KAAKC,YAAL,CAAkB,YAAlB,CAAH,EAAoCmC,WAApC,qDACf,KAAKnC,YAAL,CAAkB,sBAAlB,CADe,EAC6B,CAAC,CAAC,KAAK3F,KAAL,CAAWI,WAD1C,0CAEf,KAAKuF,YAAL,CAAkB,wBAAlB,CAFe,EAE+BkC,cAF/B,SAAlB;;AAKA,UAAME,WAAW,qBACZ9C,UADY;AAEfW,QAAAA,IAAI,EAAE,KAFS;AAGfC,QAAAA,GAAG,mBAAY8B,WAAZ,CAHY;AAIfjC,QAAAA,SAAS,EAATA,SAJe;AAKfN,QAAAA,KAAK,EAALA,KALe;AAMftG,QAAAA,OAAO,EAAPA,OANe;AAOf6I,QAAAA,WAAW,EAAXA,WAPe;AAQfE,QAAAA,cAAc,EAAdA,cARe;AASf/B,QAAAA,YAAY,EAAE,KAAKzE,gBATJ;AAUfuD,QAAAA,eAAe,EAAE,KAAK9E,KAAL,CAAW8E;AAVb,QAAjB;;AAaA,aAAO,gCAAC,0BAAD,EAAoBmD,WAApB,CAAP;AACD;;;4CAE2E;AAAA;;AAAA,UAAzDjJ,OAAyD,SAAzDA,OAAyD;AAAA,UAAhDsH,MAAgD,SAAhDA,MAAgD;AAAA,UAAxCC,WAAwC,SAAxCA,WAAwC;AAAA,UAA3BiB,WAA2B,SAA3BA,WAA2B;AAAA,UAAdhB,UAAc,SAAdA,UAAc;;AAC1E,UAAIF,MAAM,CAAC5F,0BAAc+F,cAAf,CAAV,EAA0C;AACxC,eACE;AACE,UAAA,GAAG,mBAAYe,WAAZ,mBAAgClB,MAAM,CAACP,GAAvC,iBADL;AAEE,UAAA,SAAS,EAAE,KAAKF,YAAL,CAAkB,yBAAlB,CAFb;AAGE,UAAA,KAAK,EAAE,KAAKpF,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC;AAHT,UADF;AAOD;;AATyE,UAWlE0B,eAXkE,GAW9BnB,MAX8B,CAWlEmB,eAXkE;AAAA,UAWjDC,cAXiD,GAW9BpB,MAX8B,CAWjDoB,cAXiD;AAAA,yBAY3B,KAAK1H,KAZsB;AAAA,UAYlEkI,MAZkE,gBAYlEA,MAZkE;AAAA,UAY1DC,SAZ0D,gBAY1DA,SAZ0D;AAAA,UAY/CC,eAZ+C,gBAY/CA,eAZ+C;;AAa1E,UAAM3I,eAAe,GAAG,KAAK2F,aAAL,CAAmB,iBAAnB,CAAxB;;AACA,UAAMxF,aAAa,GAAG,KAAKwF,aAAL,CAAmB,eAAnB,CAAtB;;AAEA,UAAMyB,SAAS,GAAG;AAAE7H,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCiB,QAAAA,WAAW,EAAXA,WAAhC;AAA6CV,QAAAA,SAAS,EAAE;AAAxD,OAAlB;AACA,UAAMC,IAAI,GAAG,0BACXW,cAAc,IAAI,gCAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAK7B,YAAL,CAAkB,kBAAlB;AAA5B,QADP,EAEXgB,SAFW,CAAb;AAKA,UAAIwB,OAAJ,EAAaC,SAAb;;AAEA,UAAIH,SAAJ,EAAe;AACb,YAAMI,KAAK,GAAGJ,SAAS,CAAC7B,MAAM,CAACP,GAAR,CAAvB;AACAsC,QAAAA,OAAO,GAAGE,KAAK,KAAKC,sBAAUC,GAApB,IAA2BF,KAAK,KAAKC,sBAAUE,IAAzD;AACAJ,QAAAA,SAAS,GAAGD,OAAO,GAAGE,KAAH,GAAWC,sBAAUC,GAAxC;AACD,OAJD,MAIO;AACLJ,QAAAA,OAAO,GAAG/B,MAAM,CAACP,GAAP,KAAemC,MAAM,CAACnC,GAAhC;AACAuC,QAAAA,SAAS,GAAGD,OAAO,GAAGH,MAAM,CAACK,KAAV,GAAkBC,sBAAUC,GAA/C;AACD;;AAED,UAAMzB,OAAO,GAAG,yBAAaS,eAAb,EAA8B;AAAEzI,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCiB,QAAAA,WAAW,EAAXA;AAAhC,OAA9B,CAAhB;AACA,UAAMP,GAAG,GAAG,4BAAG,KAAKpB,YAAL,CAAkB,aAAlB,CAAH,EAAqCmB,OAArC,qDACT,KAAKnB,YAAL,CAAkB,2BAAlB,CADS,EACwCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUC,MADnE,0CAET,KAAKtB,YAAL,CAAkB,0BAAlB,CAFS,EAEuCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUE,KAFlE,0CAGT,KAAKvB,YAAL,CAAkB,uBAAlB,CAHS,EAGoCS,MAAM,CAACqC,QAH3C,0CAIT,KAAK9C,YAAL,CAAkB,sBAAlB,CAJS,EAImCwC,OAJnC,0CAKT,KAAKxC,YAAL,CAAkB,uBAAlB,CALS,EAKoCS,MAAM,CAACP,GAAP,KAAe,KAAK7F,KAAL,CAAWI,WAL9D,SAAZ;AAOA,UAAM6E,UAAU,GAAG,yBAAaiD,eAAb,EAA8B;AAAEpJ,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCiB,QAAAA,WAAW,EAAXA;AAAhC,OAA9B,CAAnB;;AAzC0E,kBA0C7CrC,UAAU,IAAI,EA1C+B;AAAA,UA0ClEkC,OA1CkE,SA0ClEA,OA1CkE;AAAA,UA0CtDC,IA1CsD;;AA2C1E,UAAMC,GAAG,GAAGF,OAAO,IAAI,KAAvB;AACA,aACE,gCAAC,GAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,GAAG,mBAAYG,WAAZ,mBAAgClB,MAAM,CAACP,GAAvC,CAFL;AAGE,QAAA,OAAO,EAAEO,MAAM,CAACqC,QAAP,GAAkB,KAAK1G,iBAAvB,GAA2C;AAHtD,SAIMqF,IAJN;AAKE,QAAA,SAAS,EAAEL,GALb;AAME,QAAA,KAAK,EAAE,KAAKxG,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC,CANT;AAOE,oBAAUO,MAAM,CAACP;AAPnB,UASGS,UATH,EAUGO,IAVH,EAWGT,MAAM,CAACqC,QAAP,IACC,gCAAC,aAAD;AACE,QAAA,SAAS,EAAEL,SADb;AAEE,QAAA,SAAS,EAAE,4BAAG,KAAKzC,YAAL,CAAkB,gBAAlB,CAAH,uCACR,KAAKA,YAAL,CAAkB,4BAAlB,CADQ,EAC0CyC,SAAS,KAAKE,sBAAUE,IADlE;AAFb,QAZJ,EAmBGpC,MAAM,CAACsC,SAAP,IACC,gCAAC,yBAAD;AACE,QAAA,SAAS,EAAE,KAAK/C,YAAL,CAAkB,gBAAlB,CADb;AAEE,QAAA,MAAM,EAAES,MAFV;AAGE,QAAA,aAAa,EAAE,KAAKvE,wBAHtB;AAIE,QAAA,YAAY,EAAE,KAAKC,uBAJrB;AAKE,QAAA,QAAQ,EAAE,KAAKF;AALjB,QApBJ,CADF;AA+BD;;;4CAE+D;AAAA;;AAAA,UAA7C9C,OAA6C,SAA7CA,OAA6C;AAAA,UAApCsH,MAAoC,SAApCA,MAAoC;AAAA,UAA5BC,WAA4B,SAA5BA,WAA4B;AAAA,UAAfsB,WAAe,SAAfA,WAAe;;AAC9D,UAAIvB,MAAM,CAAC5F,0BAAc+F,cAAf,CAAV,EAA0C;AACxC,eACE;AACE,UAAA,GAAG,mBAAYoB,WAAZ,mBAAgCvB,MAAM,CAACP,GAAvC,iBADL;AAEE,UAAA,SAAS,EAAE,KAAKF,YAAL,CAAkB,yBAAlB,CAFb;AAGE,UAAA,KAAK,EAAE,KAAKpF,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC;AAHT,UADF;AAOD;;AAT6D,UAWtD+B,eAXsD,GAWlBxB,MAXkB,CAWtDwB,eAXsD;AAAA,UAWrCC,cAXqC,GAWlBzB,MAXkB,CAWrCyB,cAXqC;AAAA,UAYtDc,eAZsD,GAYlC,KAAK7I,KAZ6B,CAYtD6I,eAZsD;;AAa9D,UAAMnJ,eAAe,GAAG,KAAK0F,aAAL,CAAmB,iBAAnB,CAAxB;;AAEA,UAAMyB,SAAS,GAAG;AAAE7H,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCsB,QAAAA,WAAW,EAAXA,WAAhC;AAA6Cf,QAAAA,SAAS,EAAE;AAAxD,OAAlB;AACA,UAAMC,IAAI,GAAG,0BACXgB,cAAc,IAAI,gCAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKlC,YAAL,CAAkB,kBAAlB;AAA5B,QADP,EAEXgB,SAFW,CAAb;AAKA,UAAMG,OAAO,GAAG,yBAAac,eAAb,EAA8B;AAAE9I,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCsB,QAAAA,WAAW,EAAXA;AAAhC,OAA9B,CAAhB;AACA,UAAMZ,GAAG,GAAG,4BAAG,KAAKpB,YAAL,CAAkB,aAAlB,CAAH,EAAqCmB,OAArC,qDACT,KAAKnB,YAAL,CAAkB,2BAAlB,CADS,EACwCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUC,MADnE,0CAET,KAAKtB,YAAL,CAAkB,0BAAlB,CAFS,EAEuCS,MAAM,CAAC/B,KAAP,KAAiB2C,kBAAUE,KAFlE,0CAGT,KAAKvB,YAAL,CAAkB,uBAAlB,CAHS,EAGoCS,MAAM,CAACqC,QAH3C,0CAIT,KAAK9C,YAAL,CAAkB,uBAAlB,CAJS,EAIoCS,MAAM,CAACP,GAAP,KAAe,KAAK7F,KAAL,CAAWI,WAJ9D,SAAZ;AAMA,UAAM6E,UAAU,GAAG,yBAAa0D,eAAb,EAA8B;AAAE7J,QAAAA,OAAO,EAAPA,OAAF;AAAWsH,QAAAA,MAAM,EAANA,MAAX;AAAmBC,QAAAA,WAAW,EAAXA,WAAnB;AAAgCsB,QAAAA,WAAW,EAAXA;AAAhC,OAA9B,CAAnB;;AA5B8D,mBA6BjC1C,UAAU,IAAI,EA7BmB;AAAA,UA6BtDkC,OA7BsD,UA6BtDA,OA7BsD;AAAA,UA6B1CC,IA7B0C;;AA8B9D,UAAMC,GAAG,GAAGF,OAAO,IAAI,KAAvB;AACA,aACE,gCAAC,GAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,GAAG,mBAAYQ,WAAZ,mBAAgCvB,MAAM,CAACP,GAAvC;AAFL,SAGMuB,IAHN;AAIE,QAAA,SAAS,EAAEL,GAJb;AAKE,QAAA,KAAK,EAAE,KAAKxG,aAAL,CAAmBiG,cAAnB,CAAkCJ,MAAM,CAACP,GAAzC,CALT;AAME,oBAAUO,MAAM,CAACP;AANnB,UAQGgB,IARH,CADF;AAYD;;;sCAEiB;AAAA,yBAC2C,KAAK/G,KADhD;AAAA,UACRb,KADQ,gBACRA,KADQ;AAAA,UACD2J,YADC,gBACDA,YADC;AAAA,UACajF,SADb,gBACaA,SADb;AAAA,UACwBlD,KADxB,gBACwBA,KADxB;AAAA,UACkC2G,IADlC;;AAEhB,UAAMjI,MAAM,GAAG,KAAK0J,eAAL,EAAf;;AAEA,UAAIC,UAAU,GAAG7J,KAAK,GAAG,KAAKkE,sBAA9B;;AACA,UAAI1C,KAAJ,EAAW;AACT,YAAMsI,YAAY,GAAG,KAAKxI,aAAL,CAAmBqD,eAAnB,EAArB,CADS,CAET;;AACAkF,QAAAA,UAAU,GAAGE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWH,YAAX,CAAT,EAAmCD,UAAnC,CAAb;AACD;;AACD,aACE,gCAAC,qBAAD,gCACM1B,IADN,EAEM,KAAKpH,KAFX;AAGE,QAAA,SAAS,EAAE,KAAK2F,YAAL,CAAkB,YAAlB,CAHb;AAIE,QAAA,GAAG,EAAE,KAAK/E,gBAJZ;AAKE,QAAA,IAAI,EAAE,KAAKoC,KALb;AAME,QAAA,OAAO,EAAE,KAAKzC,aAAL,CAAmB4I,cAAnB,EANX;AAOE,QAAA,KAAK,EAAElK,KAPT;AAQE,QAAA,MAAM,EAAEE,MARV;AASE,QAAA,YAAY,EAAEyJ,YAThB;AAUE,QAAA,SAAS,EAAEjF,SAVb;AAWE,QAAA,WAAW,EAAEmF,UAAU,IAAIrI,KAAK,GAAG,KAAK0C,sBAAR,GAAiC,CAA1C,CAXzB;AAYE,QAAA,SAAS,EAAE2F,UAZb;AAaE,QAAA,cAAc,EAAE,KAAK5H,YAbvB;AAcE,QAAA,cAAc,EAAE,KAAKC,YAdvB;AAeE,QAAA,WAAW,EAAE,KAAKH,SAfpB;AAgBE,QAAA,QAAQ,EAAE,KAAKM,aAhBjB;AAiBE,QAAA,cAAc,EAAE,KAAKE;AAjBvB,SADF;AAqBD;;;sCAEiB;AAChB,UAAI,CAAC,KAAKjB,aAAL,CAAmB6I,oBAAnB,EAAL,EAAgD,OAAO,IAAP;AADhC,yBAGoC,KAAKtJ,KAHzC;AAAA,UAGRb,KAHQ,gBAGRA,KAHQ;AAAA,UAGD2J,YAHC,gBAGDA,YAHC;AAAA,UAGajF,SAHb,gBAGaA,SAHb;AAAA,UAG2ByD,IAH3B;;AAKhB,UAAMiC,eAAe,GAAG,KAAKC,yBAAL,EAAxB;;AACA,UAAMrF,MAAM,GAAG,KAAKd,sBAAL,IAA+B,EAA9C;AACA,UAAM4F,YAAY,GAAG,KAAKxI,aAAL,CAAmBgJ,yBAAnB,EAArB;AACA,aACE,gCAAC,qBAAD,gCACMnC,IADN,EAEM,KAAKpH,KAFX;AAGE,QAAA,cAAc,EAAE,KAAKgC,2BAAL,CAAiC+G,YAAjC,EAA+C9J,KAA/C,EAAsDoK,eAAtD,CAHlB;AAIE,QAAA,SAAS,EAAE,KAAK1D,YAAL,CAAkB,mBAAlB,CAJb;AAKE,QAAA,GAAG,EAAE,KAAK9E,gBALZ;AAME,QAAA,IAAI,EAAE,KAAKmC,KANb;AAOE,QAAA,OAAO,EAAE,KAAKzC,aAAL,CAAmBiJ,oBAAnB,EAPX;AAQE,QAAA,KAAK,EAAET,YAAY,GAAG9E,MARxB;AASE,QAAA,MAAM,EAAEoF,eATV;AAUE,QAAA,YAAY,EAAET,YAVhB;AAWE,QAAA,SAAS,EAAEjF,SAXb;AAYE,QAAA,WAAW,EAAEoF,YAAY,GAAG9E,MAZ9B;AAaE,QAAA,SAAS,EAAE8E,YAAY,GAAG9E,MAb5B;AAcE,QAAA,cAAc,EAAE,KAAK/C,YAdvB;AAeE,QAAA,cAAc,EAAE,KAAKC,YAfvB;AAgBE,QAAA,WAAW,EAAE,KAAKH,SAhBpB;AAiBE,QAAA,QAAQ,EAAE,KAAKO,qBAjBjB;AAkBE,QAAA,cAAc,EAAEkI;AAlBlB,SADF;AAsBD;;;uCAEkB;AACjB,UAAI,CAAC,KAAKlJ,aAAL,CAAmBmJ,qBAAnB,EAAL,EAAiD,OAAO,IAAP;AADhC,yBAGmC,KAAK5J,KAHxC;AAAA,UAGTb,KAHS,gBAGTA,KAHS;AAAA,UAGF2J,YAHE,gBAGFA,YAHE;AAAA,UAGYjF,SAHZ,gBAGYA,SAHZ;AAAA,UAG0ByD,IAH1B;;AAKjB,UAAMiC,eAAe,GAAG,KAAKC,yBAAL,EAAxB;;AACA,UAAMP,YAAY,GAAG,KAAKxI,aAAL,CAAmBoJ,0BAAnB,EAArB;AACA,UAAMC,cAAc,GAAG,KAAKzG,sBAA5B;AACA,aACE,gCAAC,qBAAD,gCACMiE,IADN,EAEM,KAAKpH,KAFX;AAGE,QAAA,cAAc,EAAE,KAAKgC,2BAAL,CAAiC+G,YAAY,GAAGa,cAAhD,EAAgE3K,KAAhE,EAAuEoK,eAAvE,CAHlB;AAIE,QAAA,SAAS,EAAE,KAAK1D,YAAL,CAAkB,oBAAlB,CAJb;AAKE,QAAA,GAAG,EAAE,KAAK7E,iBALZ;AAME,QAAA,IAAI,EAAE,KAAKkC,KANb;AAOE,QAAA,OAAO,EAAE,KAAKzC,aAAL,CAAmBsJ,qBAAnB,EAPX;AAQE,QAAA,KAAK,EAAEd,YAAY,GAAGa,cARxB;AASE,QAAA,MAAM,EAAEP,eATV;AAUE,QAAA,YAAY,EAAET,YAVhB;AAWE,QAAA,SAAS,EAAEjF,SAXb;AAYE,QAAA,WAAW,EAAEoF,YAAY,GAAGa,cAZ9B;AAaE,QAAA,SAAS,EAAEb,YAbb;AAcE,QAAA,cAAc,EAAE,KAAK7H,YAdvB;AAeE,QAAA,cAAc,EAAE,KAAKC,YAfvB;AAgBE,QAAA,WAAW,EAAE,KAAKH,SAhBpB;AAiBE,QAAA,QAAQ,EAAE,KAAKO,qBAjBjB;AAkBE,QAAA,cAAc,EAAEkI;AAlBlB,SADF;AAsBD;;;yCAEoB;AAAA,yBACM,KAAK3J,KADX;AAAA,UACXb,KADW,gBACXA,KADW;AAAA,UACJwB,KADI,gBACJA,KADI;AAAA,UAEXL,WAFW,GAEK,KAAKJ,KAFV,CAEXI,WAFW;AAGnB,UAAI,CAACK,KAAD,IAAU,CAACL,WAAf,EAA4B,OAAO,IAAP;AAE5B,UAAMtB,OAAO,GAAG,KAAKyB,aAAL,CAAmB4I,cAAnB,EAAhB;AACA,UAAMW,GAAG,GAAGhL,OAAO,CAACiL,SAAR,CAAkB,UAAA3D,MAAM;AAAA,eAAIA,MAAM,CAACP,GAAP,KAAezF,WAAnB;AAAA,OAAxB,CAAZ;AACA,UAAMgG,MAAM,GAAGtH,OAAO,CAACgL,GAAD,CAAtB;AAPmB,UAQJE,WARI,GAQoB5D,MARpB,CAQXnH,KARW;AAAA,UAQSgL,MART,GAQoB7D,MARpB,CAQS6D,MART;AASnB,UAAMC,SAAS,GAAG,KAAK3J,aAAL,CAAmB4J,qBAAnB,CAAyCrL,OAAO,CAACsL,KAAR,CAAc,CAAd,EAAiBN,GAAjB,CAAzC,CAAlB;AAEA,UAAIO,IAAI,GAAGH,SAAS,GAAGF,WAAvB;;AACA,UAAI,CAACC,MAAL,EAAa;AACXI,QAAAA,IAAI,IAAI,KAAK3H,OAAL,CAAaC,UAArB;AACD,OAFD,MAEO,IAAIsH,MAAM,KAAKK,wBAAgBpD,KAA/B,EAAsC;AAC3C,YAAMqD,UAAU,GAAG,KAAKhK,aAAL,CAAmB4J,qBAAnB,CAAyCrL,OAAO,CAACsL,KAAR,CAAcN,GAAG,GAAG,CAApB,CAAzC,CAAnB;;AACA,YAAIS,UAAU,GAAGP,WAAb,GAA2B/K,KAAK,GAAG,KAAKkE,sBAA5C,EAAoE;AAClEkH,UAAAA,IAAI,GAAGL,WAAP;AACD,SAFD,MAEO;AACLK,UAAAA,IAAI,GAAGpL,KAAK,GAAG,KAAKkE,sBAAb,GAAsCoH,UAA7C;AACD;AACF;;AACD,UAAMnF,KAAK,GAAG;AACZiF,QAAAA,IAAI,EAAJA,IADY;AAEZlL,QAAAA,MAAM,EAAE,KAAK0J,eAAL,KAAyB,KAAK3F;AAF1B,OAAd;AAIA,aAAO;AAAK,QAAA,SAAS,EAAE,KAAKyC,YAAL,CAAkB,eAAlB,CAAhB;AAAoD,QAAA,KAAK,EAAEP;AAA3D,QAAP;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;uCAEmB;AAAA,0BAC6B,KAAKtF,KADlC;AAAA,UACTmD,IADS,iBACTA,IADS;AAAA,UACHuH,YADG,iBACHA,YADG;AAAA,UACWC,aADX,iBACWA,aADX;AAGjB,UAAIxH,IAAI,IAAIA,IAAI,CAACS,MAAjB,EAAyB,OAAO,IAAP;;AACzB,UAAMkF,YAAY,GAAG,KAAK8B,gBAAL,EAArB;;AACA,aACE;AAAK,QAAA,SAAS,EAAE,KAAK/E,YAAL,CAAkB,aAAlB,CAAhB;AAAkD,QAAA,KAAK,EAAE;AAAEgF,UAAAA,GAAG,EAAE/B,YAAP;AAAqBgC,UAAAA,MAAM,EAAEJ;AAA7B;AAAzD,SACG,0BAAcC,aAAd,CADH,CADF;AAKD;;;oCAEe;AAAA,UACNI,eADM,GACc,KAAK/K,KADnB,CACN+K,eADM;AAGd,aAAO;AAAK,QAAA,SAAS,EAAE,KAAKlF,YAAL,CAAkB,SAAlB;AAAhB,SAA+C,CAAC,CAACkF,eAAF,IAAqB,0BAAcA,eAAd,CAApE,CAAP;AACD;;;6BAEQ;AAAA;;AAAA,0BAcH,KAAK/K,KAdF;AAAA,UAELhB,OAFK,iBAELA,OAFK;AAAA,UAGLC,QAHK,iBAGLA,QAHK;AAAA,UAILE,KAJK,iBAILA,KAJK;AAAA,UAKLwB,KALK,iBAKLA,KALK;AAAA,UAMLwC,IANK,iBAMLA,IANK;AAAA,UAOL6H,UAPK,iBAOLA,UAPK;AAAA,UAQLlG,eARK,iBAQLA,eARK;AAAA,UASLmG,QATK,iBASLA,QATK;AAAA,UAULrF,SAVK,iBAULA,SAVK;AAAA,UAWLN,KAXK,iBAWLA,KAXK;AAAA,UAYLoF,YAZK,iBAYLA,YAZK;AAAA,UAaLQ,WAbK,iBAaLA,WAbK;;AAgBP,WAAKzI,mBAAL,CAAyB1D,UAAU,CAACC,OAAD,EAAUC,QAAV,CAAnC,EAAwD0B,KAAxD;;AAEA,UAAImE,eAAJ,EAAqB;AACnB,aAAK5B,KAAL,GAAa,KAAKd,cAAL,CAAoBe,IAApB,EAA0B,KAAKO,kBAAL,EAA1B,EAAqD,KAAK1D,KAAL,CAAW6E,MAAhE,CAAb;AACD,OAFD,MAEO;AACL,aAAK3B,KAAL,GAAaC,IAAb;AACD,OAtBM,CAuBP;;;AACA,WAAKgI,mBAAL;;AAEA,UAAMC,cAAc,qBACf9F,KADe;AAElBnG,QAAAA,KAAK,EAALA,KAFkB;AAGlBE,QAAAA,MAAM,EAAE,KAAK0J,eAAL,EAHU;AAIlBsC,QAAAA,QAAQ,EAAE;AAJQ,QAApB;;AAMA,UAAMpE,GAAG,GAAG,4BAAGiE,WAAH,EAAgBtF,SAAhB,+DACNsF,WADM,cACiBvK,KADjB,oDAENuK,WAFM,mBAEsB,CAAC,CAACpG,eAFxB,oDAGNoG,WAHM,cAGiB/H,IAAI,CAACS,MAAL,KAAgB,CAHjC,oDAINsH,WAJM,wBAI2BF,UAAU,CAACpH,MAAX,GAAoB,CAJ/C,oDAKNsH,WALM,2BAK8B,KAAKzK,aAAL,CAAmB2F,gBAAnB,EAL9B,oDAMN8E,WANM,iBAMoBD,QANpB,SAAZ;AAQA,aACE;AAAK,QAAA,GAAG,EAAE,KAAKrK,gBAAf;AAAiC,QAAA,SAAS,EAAEqG,GAA5C;AAAiD,QAAA,KAAK,EAAEmE;AAAxD,SAEG,KAAKE,eAAL,EAFH,EAGG,KAAKC,eAAL,EAHH,EAIG,KAAKC,gBAAL,EAJH,EAKG,KAAKC,kBAAL,EALH,EAMG,KAAKC,gBAAL,EANH,EAOG,KAAKC,aAAL,EAPH,CADF;AAWD;;;wCAEmB;AAClB,UAAMxL,aAAa,GAAG,KAAKH,KAAL,CAAW4L,gBAAX,EAAtB;;AACA,UAAIzL,aAAa,GAAG,CAApB,EAAuB;AACrB,aAAKsE,QAAL,CAAc;AAAEtE,UAAAA,aAAa,EAAbA;AAAF,SAAd;AACD;AACF;;;uCAEkB0L,S,EAAWC,S,EAAW;AAAA,0BACH,KAAK9L,KADF;AAAA,UAC/BmD,IAD+B,iBAC/BA,IAD+B;AAAA,UACzB9D,MADyB,iBACzBA,MADyB;AAAA,UACjB0M,SADiB,iBACjBA,SADiB;;AAEvC,UAAI5I,IAAI,KAAK0I,SAAS,CAAC1I,IAAvB,EAA6B;AAC3B,aAAKH,oBAAL,GAA4B,CAAC,CAA7B;AACA,aAAKC,8BAAL,GAAsC,IAAtC;AACD;;AAED,UAAI8I,SAAS,KAAKF,SAAS,CAACE,SAAxB,IAAqC1M,MAAM,KAAKwM,SAAS,CAACxM,MAA9D,EAAsE;AACpE,aAAK2M,sBAAL;AACD;;AACD,WAAKC,6BAAL;AACD;;;iCAEYrG,S,EAAW;AACtB,uBAAU,KAAK5F,KAAL,CAAWkL,WAArB,eAAqCtF,SAArC;AACD;;;qCAEgBsG,G,EAAK;AACpB,WAAK3I,SAAL,GAAiB2I,GAAjB;AACD;;;qCAEgBA,G,EAAK;AACpB,WAAKnI,KAAL,GAAamI,GAAb;AACD;;;qCAEgBA,G,EAAK;AACpB,WAAKjI,SAAL,GAAiBiI,GAAjB;AACD;;;sCAEiBA,G,EAAK;AACrB,WAAKhI,UAAL,GAAkBgI,GAAlB;AACD;;;kCAEaC,I,EAAM;AAClB,UAAI,KAAKnM,KAAL,CAAWoM,UAAX,IAAyB,KAAKpM,KAAL,CAAWoM,UAAX,CAAsBD,IAAtB,CAA7B,EAA0D,OAAO,KAAKnM,KAAL,CAAWoM,UAAX,CAAsBD,IAAtB,CAAP;AAC1D,aAAO5M,kBAAkB,CAAC4M,IAAD,CAAzB;AACD;;;uCAEkB;AAAA,UACTrD,YADS,GACQ,KAAK9I,KADb,CACT8I,YADS;;AAEjB,UAAIuD,KAAK,CAACC,OAAN,CAAcxD,YAAd,CAAJ,EAAiC;AAC/B,eAAOA,YAAY,CAACyD,MAAb,CAAoB,UAACC,GAAD,EAAMnN,MAAN;AAAA,iBAAiBmN,GAAG,GAAGnN,MAAvB;AAAA,SAApB,EAAmD,CAAnD,CAAP;AACD;;AACD,aAAOyJ,YAAP;AACD;;;2CAEsB;AAAA,0BACa,KAAK9I,KADlB;AAAA,UACbgL,UADa,iBACbA,UADa;AAAA,UACDnH,SADC,iBACDA,SADC;AAErB,aAAOmH,UAAU,CAACpH,MAAX,GAAoBC,SAA3B;AACD;;;sCAEiB;AAAA,0BAC4B,KAAK7D,KADjC;AAAA,UACRX,MADQ,iBACRA,MADQ;AAAA,UACA0M,SADA,iBACAA,SADA;AAAA,UACWrB,YADX,iBACWA,YADX;AAEhB,UAAI+B,WAAW,GAAGpN,MAAlB;AACA,UAAMqN,MAAM,GAAGhC,YAAY,IAAI,CAA/B;;AACA,UAAIqB,SAAS,GAAG,CAAhB,EAAmB;AACjB,YAAMY,gBAAgB,GAAG,KAAKC,oBAAL,EAAzB;;AACA,YAAMC,eAAe,GAAG,KAAKC,kBAAL,EAAxB;;AACA,YAAMhE,YAAY,GAAG,KAAK8B,gBAAL,EAArB;;AACA,YAAMmC,WAAW,GAAGjE,YAAY,GAAG6D,gBAAf,GAAkCE,eAAlC,GAAoDH,MAApD,GAA6D,KAAKtJ,wBAAtF;AACAqJ,QAAAA,WAAW,GAAGvD,IAAI,CAAC8D,GAAL,CAASD,WAAT,EAAsBhB,SAAtB,CAAd;AACD,OAND,MAMK;AACH,YAAMY,iBAAgB,GAAG,KAAKC,oBAAL,EAAzB;;AACA,YAAMC,gBAAe,GAAG,KAAKC,kBAAL,EAAxB;;AACA,YAAMhE,aAAY,GAAG,KAAK8B,gBAAL,EAArB;;AACA,YAAMmC,YAAW,GAAGjE,aAAY,GAAG6D,iBAAf,GAAkCE,gBAAlC,GAAoDH,MAApD,GAA6D,KAAKtJ,wBAAtF;;AACAqJ,QAAAA,WAAW,GAAGvD,IAAI,CAAC8D,GAAL,CAASD,YAAT,EAAsB1N,MAAtB,CAAd;AACD;;AACD,aAAOoN,WAAP;AACD;;;qCAEgB;AACf,aAAO,KAAK1D,eAAL,KAAyB,KAAK6B,gBAAL,EAAzB,GAAmD,KAAKgC,oBAAL,EAA1D;AACD;;;gDAE2B;AAAA,0BACU,KAAK5M,KADf;AAAA,UAClB+L,SADkB,iBAClBA,SADkB;AAAA,UACPrB,YADO,iBACPA,YADO;AAE1B,UAAMgC,MAAM,GAAGhC,YAAY,IAAI,CAA/B;AAEA,UAAM+B,WAAW,GAAG,KAAK1D,eAAL,MAA0B,KAAK7F,KAAL,CAAWU,MAAX,GAAoB,CAApB,GAAwB,KAAKR,wBAA7B,GAAwD,CAAlF,CAApB,CAJ0B,CAK1B;;AACA,UAAI2I,SAAS,GAAG,CAAhB,EAAmB,OAAOU,WAAP;AAEnB,UAAMM,WAAW,GAAG,KAAKD,kBAAL,KAA4B,KAAKlC,gBAAL,EAA5B,GAAsD,KAAKgC,oBAAL,EAAtD,GAAoFF,MAAxG;AACA,aAAOxD,IAAI,CAAC8D,GAAL,CAASP,WAAT,EAAsBM,WAAtB,CAAP;AACD;;;0CAEqB;AAAA,0BACK,KAAK/M,KADV;AAAA,UACZW,KADY,iBACZA,KADY;AAAA,UACLxB,KADK,iBACLA,KADK;AAAA,UAEZgB,aAFY,GAEM,KAAKD,KAFX,CAEZC,aAFY;AAIpB,UAAM0M,eAAe,GAAG,KAAKC,kBAAL,EAAxB;AACA,UAAMG,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;AAEA,UAAMC,2BAA2B,GAAG,KAAK/J,wBAAzC;AACA,UAAMgK,yBAAyB,GAAG,KAAK/J,sBAAvC;;AAEA,UAAIlD,aAAa,KAAK,CAAtB,EAAyB;AACvB,aAAKiD,wBAAL,GAAgC,CAAhC;AACA,aAAKC,sBAAL,GAA8B,CAA9B;AACD,OAHD,MAGO;AACL;AACA,YAAI,CAAC1C,KAAD,IAAUsM,iBAAiB,IAAI9N,KAAK,GAAGgB,aAA3C,EAA0D;AACxD,eAAKiD,wBAAL,GAAgC,CAAhC;AACA,eAAKC,sBAAL,GAA8BwJ,eAAe,GAAG,KAAKQ,cAAL,EAAlB,GAA0ClN,aAA1C,GAA0D,CAAxF;AACD,SAHD,MAGO;AACL,cAAI8M,iBAAiB,GAAG9N,KAAxB,EAA+B;AAC7B,iBAAKiE,wBAAL,GAAgCjD,aAAhC;AACA,iBAAKkD,sBAAL,GACEwJ,eAAe,GAAG,KAAKQ,cAAL,KAAwB,KAAKjK,wBAA/C,GAA0EjD,aAA1E,GAA0F,CAD5F;AAED,WAJD,MAIO;AACL,iBAAKiD,wBAAL,GAAgC,CAAhC;AACA,iBAAKC,sBAAL,GAA8B,CAA9B;;AACA,gBAAIwJ,eAAe,GAAG,KAAKQ,cAAL,EAAtB,EAA6C;AAC3C,mBAAKjK,wBAAL,GAAgCjD,aAAhC;AACA,mBAAKkD,sBAAL,GAA8BlD,aAA9B;AACD;AACF;AACF;AACF;;AAED,UACEgN,2BAA2B,KAAK,KAAK/J,wBAArC,IACAgK,yBAAyB,KAAK,KAAK/J,sBAFrC,EAGE;AACA,aAAKC,yBAAL,GAAiC,IAAjC;AACD;AACF;;;oDAE+B;AAC9B,UAAI,KAAKA,yBAAT,EAAoC;AAAA,YAC1BgK,yBAD0B,GACI,KAAKtN,KADT,CAC1BsN,yBAD0B;AAElC,aAAKhK,yBAAL,GAAiC,KAAjC;AAEAgK,QAAAA,yBAAyB,CAAC;AACxBC,UAAAA,IAAI,EAAE,KAAKrN,KAAL,CAAWC,aADO;AAExBqN,UAAAA,UAAU,EAAE,KAAKpK,wBAAL,GAAgC,CAFpB;AAGxBqK,UAAAA,QAAQ,EAAE,KAAKpK,sBAAL,GAA8B;AAHhB,SAAD,CAAzB;AAKD;AACF;;;6CAEwB;AAAA,0BACyB,KAAKrD,KAD9B;AAAA,UACf0N,YADe,iBACfA,YADe;AAAA,UACDC,qBADC,iBACDA,qBADC;AAAA,UAEf7K,SAFe,GAED,KAAKF,OAFJ,CAEfE,SAFe;AAGvB,UAAM8K,YAAY,GAAG,KAAKd,kBAAL,EAArB;;AACA,UAAMe,YAAY,GAAG,KAAKR,cAAL,EAArB;;AAEA,UAAI,CAACK,YAAD,IAAiB,CAACG,YAAlB,IAAkC,CAACD,YAAvC,EAAqD;AACrD,UAAME,eAAe,GAAGF,YAAY,GAAG9K,SAAf,GAA2B+K,YAA3B,GAA0C,KAAKzK,wBAAvE;;AACA,UACE,KAAKJ,oBAAL,IAA6B,CAA7B,IACA8K,eAAe,IAAIH,qBADnB,KAEC,KAAK1K,8BAAL,IAAuC2K,YAAY,KAAK,KAAK7K,aAF9D,CADF,EAIE;AACA,aAAKE,8BAAL,GAAsC,KAAtC;AACA,aAAKF,aAAL,GAAqB6K,YAArB;AACAF,QAAAA,YAAY,CAAC;AAAEI,UAAAA,eAAe,EAAfA;AAAF,SAAD,CAAZ;AACD;AACF;;;kCAEaC,I,EAAM;AAClB,UAAMC,aAAa,GAAG,KAAKpL,OAAL,CAAaE,SAAnC;AACA,WAAKsB,gBAAL,CAAsB2J,IAAtB;AACA,WAAK/N,KAAL,CAAWiO,QAAX,CAAoBF,IAApB;AAEA,UAAIA,IAAI,CAACjL,SAAL,GAAiBkL,aAArB,EAAoC,KAAKhC,sBAAL;AACrC;;;kDAEoC;AAAA,UAAblJ,SAAa,UAAbA,SAAa;AACnC,UAAMkL,aAAa,GAAG,KAAKpL,OAAL,CAAaE,SAAnC;AACA,WAAKuB,WAAL,CAAiBvB,SAAjB;AAEA,UAAIA,SAAS,GAAGkL,aAAhB,EAA+B,KAAKhC,sBAAL;AAChC;;;wCAEmB+B,I,EAAM;AACxB,WAAK/N,KAAL,CAAWkO,cAAX,CAA0BH,IAA1B;;AAEA,UAAIA,IAAI,CAACI,iBAAL,GAAyB,KAAKnL,oBAAlC,EAAwD;AACtD,aAAKA,oBAAL,GAA4B+K,IAAI,CAACI,iBAAjC;;AACA,aAAKnC,sBAAL;AACD;AACF;;;4CAEoC;AAAA,UAAnBoC,OAAmB,UAAnBA,OAAmB;AAAA,UAAVvJ,MAAU,UAAVA,MAAU;AACnC,WAAKJ,QAAL,CAAc;AAAErE,QAAAA,aAAa,EAAEgO,OAAO,GAAGvJ,MAAH,GAAY;AAApC,OAAd;AACD;;;4CAEoC;AAAA,UAAnBwJ,OAAmB,UAAnBA,OAAmB;AAAA,UAAVxJ,MAAU,UAAVA,MAAU;AACnC,WAAKJ,QAAL,CAAc;AAAEpE,QAAAA,aAAa,EAAEgO,OAAO,IAAI,KAAKnO,KAAL,CAAWG,aAAX,KAA6BwE,MAAxC,GAAiDA,MAAjD,GAA0D;AAA3E,OAAd;AACD;;;6CAEyD;AAAA,UAAvCI,QAAuC,UAAvCA,QAAuC;AAAA,UAA7BP,OAA6B,UAA7BA,OAA6B;AAAA,UAApBJ,QAAoB,UAApBA,QAAoB;AAAA,UAAVO,MAAU,UAAVA,MAAU;AACxD,UAAMrE,eAAe,GAAG,uBAAW,KAAKkD,kBAAL,EAAX,CAAxB;;AACA,UAAIuB,QAAJ,EAAc;AACZ,YAAI,CAACzE,eAAe,CAAC0E,OAAhB,CAAwBL,MAAxB,CAAD,IAAoC,CAAxC,EAA2CrE,eAAe,CAAC8N,IAAhB,CAAqBzJ,MAArB;AAC5C,OAFD,MAEO;AACL,YAAM0J,KAAK,GAAG/N,eAAe,CAAC0E,OAAhB,CAAwBL,MAAxB,CAAd;;AACA,YAAI0J,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd/N,UAAAA,eAAe,CAACgO,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACD;AACF,OATuD,CAUxD;;;AACA,UAAI,KAAKvO,KAAL,CAAWQ,eAAX,KAA+BgD,SAAnC,EAA8C;AAC5C,aAAKiB,QAAL,CAAc;AAAEjE,UAAAA,eAAe,EAAfA;AAAF,SAAd;AACD;;AACD,WAAKR,KAAL,CAAWkG,WAAX,CAAuB;AAAEjB,QAAAA,QAAQ,EAARA,QAAF;AAAYP,QAAAA,OAAO,EAAPA,OAAZ;AAAqBJ,QAAAA,QAAQ,EAARA,QAArB;AAA+BO,QAAAA,MAAM,EAANA;AAA/B,OAAvB;AACA,WAAK7E,KAAL,CAAWyO,oBAAX,CAAgCjO,eAAhC;AACD;;;gDAE4BrB,K,EAAO;AAAA,UAAd4G,GAAc,UAAdA,GAAc;AAClC,WAAKtF,aAAL,CAAmBiO,cAAnB,CAAkC3I,GAAlC,EAAuC5G,KAAvC;AACA,WAAKsF,QAAL,CAAc;AAAElE,QAAAA,aAAa,EAAEpB;AAAjB,OAAd;AAEA,UAAMmH,MAAM,GAAG,KAAK7F,aAAL,CAAmBkO,SAAnB,CAA6B5I,GAA7B,CAAf;AACA,WAAK/F,KAAL,CAAW4O,cAAX,CAA0B;AAAEtI,QAAAA,MAAM,EAANA,MAAF;AAAUnH,QAAAA,KAAK,EAALA;AAAV,OAA1B;AACD;;;qDAEiC;AAAA,UAAP4G,GAAO,UAAPA,GAAO;AAChC,WAAKtB,QAAL,CAAc;AAAEnE,QAAAA,WAAW,EAAEyF;AAAf,OAAd;AACD;;;8CAEyB;AAAA,wBACe,KAAK7F,KADpB;AAAA,UAChBI,WADgB,eAChBA,WADgB;AAAA,UACHC,aADG,eACHA,aADG;AAExB,WAAKkE,QAAL,CAAc;AAAEnE,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,aAAa,EAAE;AAApC,OAAd;AAEA,UAAI,CAACD,WAAD,IAAgB,CAACC,aAArB,EAAoC;AAEpC,UAAM+F,MAAM,GAAG,KAAK7F,aAAL,CAAmBkO,SAAnB,CAA6BrO,WAA7B,CAAf;AACA,WAAKN,KAAL,CAAW6O,iBAAX,CAA6B;AAAEvI,QAAAA,MAAM,EAANA,MAAF;AAAUnH,QAAAA,KAAK,EAAEoB;AAAjB,OAA7B;AACD;;;sCAEiBuO,K,EAAO;AACvB,UAAM/I,GAAG,GAAG+I,KAAK,CAACC,aAAN,CAAoBC,OAApB,CAA4BjJ,GAAxC;AADuB,0BAEqB,KAAK/F,KAF1B;AAAA,UAEfkI,MAFe,iBAEfA,MAFe;AAAA,UAEPC,SAFO,iBAEPA,SAFO;AAAA,UAEI8G,YAFJ,iBAEIA,YAFJ;AAGvB,UAAI1G,KAAK,GAAGC,sBAAUC,GAAtB;;AAEA,UAAIN,SAAJ,EAAe;AACbI,QAAAA,KAAK,GAAGJ,SAAS,CAACpC,GAAD,CAAT,KAAmByC,sBAAUC,GAA7B,GAAmCD,sBAAUE,IAA7C,GAAoDF,sBAAUC,GAAtE;AACD,OAFD,MAEO,IAAI1C,GAAG,KAAKmC,MAAM,CAACnC,GAAnB,EAAwB;AAC7BwC,QAAAA,KAAK,GAAGL,MAAM,CAACK,KAAP,KAAiBC,sBAAUC,GAA3B,GAAiCD,sBAAUE,IAA3C,GAAkDF,sBAAUC,GAApE;AACD;;AAED,UAAMnC,MAAM,GAAG,KAAK7F,aAAL,CAAmBkO,SAAnB,CAA6B5I,GAA7B,CAAf;AACAkJ,MAAAA,YAAY,CAAC;AAAE3I,QAAAA,MAAM,EAANA,MAAF;AAAUP,QAAAA,GAAG,EAAHA,GAAV;AAAewC,QAAAA,KAAK,EAALA;AAAf,OAAD,CAAZ;AACD;;;EAl6BqB2G,kBAAMC,a;;AAq6B9BpP,SAAS,CAACqP,MAAV,GAAmBA,kBAAnB;AACArP,SAAS,CAAC0G,cAAV,GAA2B/F,0BAAc+F,cAAzC;AAEA1G,SAAS,CAACsP,YAAV,GAAyB;AACvBnE,EAAAA,WAAW,EAAE,WADU;AAEvBrG,EAAAA,MAAM,EAAE,IAFe;AAGvB1B,EAAAA,IAAI,EAAE,EAHiB;AAIvB6H,EAAAA,UAAU,EAAE,EAJW;AAKvBrK,EAAAA,KAAK,EAAE,KALgB;AAMvBmI,EAAAA,YAAY,EAAE,EANS;AAOvBjF,EAAAA,SAAS,EAAE,EAPY;AAQvB6G,EAAAA,YAAY,EAAE,CARS;AASvBzK,EAAAA,sBAAsB,EAAE,EATD;AAUvBiI,EAAAA,MAAM,EAAE,EAVe;AAWvBoH,EAAAA,cAAc,EAAE,KAXO;AAYvBC,EAAAA,gBAAgB,EAAE,CAZK;AAavB5B,EAAAA,qBAAqB,EAAE,GAbA;AAcvB/B,EAAAA,gBAAgB,EAAE4D,uBAdK;AAgBvBvB,EAAAA,QAAQ,EAAEtE,WAhBa;AAiBvBuE,EAAAA,cAAc,EAAEvE,WAjBO;AAkBvB2D,EAAAA,yBAAyB,EAAE3D,WAlBJ;AAmBvBzD,EAAAA,WAAW,EAAEyD,WAnBU;AAoBvB8E,EAAAA,oBAAoB,EAAE9E,WApBC;AAqBvBsF,EAAAA,YAAY,EAAEtF,WArBS;AAsBvBiF,EAAAA,cAAc,EAAEjF,WAtBO;AAuBvBkF,EAAAA,iBAAiB,EAAElF;AAvBI,CAAzB;AA0BA5J,SAAS,CAAC0P,SAAV,GAAsB;AACpB;;;AAGAvE,EAAAA,WAAW,EAAEwE,sBAAUC,MAJH;;AAKpB;;;AAGA/J,EAAAA,SAAS,EAAE8J,sBAAUC,MARD;;AASpB;;;AAGArK,EAAAA,KAAK,EAAEoK,sBAAUE,MAZG;;AAapB;;;AAGA3Q,EAAAA,QAAQ,EAAEyQ,sBAAUG,IAhBA;;AAiBpB;;;AAGA7Q,EAAAA,OAAO,EAAE0Q,sBAAUI,OAAV,CAAkBJ,sBAAUK,KAAV,CAAgBX,mBAAOK,SAAvB,CAAlB,CApBW;;AAqBpB;;;AAGAtM,EAAAA,IAAI,EAAEuM,sBAAUI,OAAV,CAAkBJ,sBAAUE,MAA5B,EAAoCI,UAxBtB;;AAyBpB;;;AAGAhF,EAAAA,UAAU,EAAE0E,sBAAUI,OAAV,CAAkBJ,sBAAUE,MAA5B,CA5BQ;;AA6BpB;;;AAGA/K,EAAAA,MAAM,EAAE6K,sBAAUO,SAAV,CAAoB,CAACP,sBAAUC,MAAX,EAAmBD,sBAAUQ,MAA7B,CAApB,EAA0DF,UAhC9C;;AAiCpB;;;AAGA7Q,EAAAA,KAAK,EAAEuQ,sBAAUQ,MAAV,CAAiBF,UApCJ;;AAqCpB;;;AAGA3Q,EAAAA,MAAM,EAAEqQ,sBAAUQ,MAxCE;;AAyCpB;;;;AAIAnE,EAAAA,SAAS,EAAE2D,sBAAUQ,MA7CD;;AA8CpB;;;AAGArM,EAAAA,SAAS,EAAE6L,sBAAUQ,MAAV,CAAiBF,UAjDR;;AAkDpB;;;AAGAlH,EAAAA,YAAY,EAAE4G,sBAAUO,SAAV,CAAoB,CAACP,sBAAUQ,MAAX,EAAmBR,sBAAUI,OAAV,CAAkBJ,sBAAUQ,MAA5B,CAAnB,CAApB,EAA6EF,UArDvE;;AAsDpB;;;AAGAtF,EAAAA,YAAY,EAAEgF,sBAAUQ,MAzDJ;;AA0DpB;;;AAGAvP,EAAAA,KAAK,EAAE+O,sBAAUS,IA7DG;;AA8DpB;;;AAGAlF,EAAAA,QAAQ,EAAEyE,sBAAUS,IAjEA;;AAkEpB;;;AAGApF,EAAAA,eAAe,EAAE2E,sBAAUO,SAAV,CAAoB,CAACP,sBAAUU,IAAX,EAAiBV,sBAAUW,OAA3B,CAApB,CArEG;;AAsEpB;;;AAGA1F,EAAAA,aAAa,EAAE+E,sBAAUO,SAAV,CAAoB,CAACP,sBAAUU,IAAX,EAAiBV,sBAAUW,OAA3B,CAApB,CAzEK;;AA0EpB;;;AAGAtI,EAAAA,cAAc,EAAE2H,sBAAUO,SAAV,CAAoB,CAACP,sBAAUU,IAAX,EAAiBV,sBAAUW,OAA3B,CAApB,CA7EI;;AA8EpB;;;;AAIA3I,EAAAA,cAAc,EAAEgI,sBAAUO,SAAV,CAAoB,CAACP,sBAAUU,IAAX,EAAiBV,sBAAUW,OAA3B,CAApB,CAlFI;;AAmFpB;;;;AAIA7K,EAAAA,WAAW,EAAEkK,sBAAUO,SAAV,CAAoB,CAACP,sBAAUU,IAAX,EAAiBV,sBAAUW,OAA3B,CAApB,CAvFO;;AAwFpB;;;;AAIA5I,EAAAA,eAAe,EAAEiI,sBAAUO,SAAV,CAAoB,CAACP,sBAAUC,MAAX,EAAmBD,sBAAUU,IAA7B,CAApB,CA5FG;;AA6FpB;;;;AAIA7K,EAAAA,YAAY,EAAEmK,sBAAUO,SAAV,CAAoB,CAACP,sBAAUC,MAAX,EAAmBD,sBAAUU,IAA7B,CAApB,CAjGM;;AAkGpB;;;;AAIAxI,EAAAA,WAAW,EAAE8H,sBAAUO,SAAV,CAAoB,CAACP,sBAAUE,MAAX,EAAmBF,sBAAUU,IAA7B,CAApB,CAtGO;;AAuGpB;;;;AAIAhI,EAAAA,eAAe,EAAEsH,sBAAUO,SAAV,CAAoB,CAACP,sBAAUE,MAAX,EAAmBF,sBAAUU,IAA7B,CAApB,CA3GG;;AA4GpB;;;;AAIAzK,EAAAA,QAAQ,EAAE+J,sBAAUO,SAAV,CAAoB,CAACP,sBAAUE,MAAX,EAAmBF,sBAAUU,IAA7B,CAApB,CAhHU;;AAiHpB;;;;AAIAvJ,EAAAA,SAAS,EAAE6I,sBAAUO,SAAV,CAAoB,CAACP,sBAAUE,MAAX,EAAmBF,sBAAUU,IAA7B,CAApB,CArHS;;AAsHpB;;;;AAIArL,EAAAA,eAAe,EAAE2K,sBAAUO,SAAV,CAAoB,CAACP,sBAAUE,MAAX,EAAmBF,sBAAUU,IAA7B,CAApB,CA1HG;;AA2HpB;;;AAGAtL,EAAAA,eAAe,EAAE4K,sBAAUC,MA9HP;;AA+HpB;;;AAGA1P,EAAAA,sBAAsB,EAAEyP,sBAAUI,OAAV,CAAkBJ,sBAAUO,SAAV,CAAoB,CAACP,sBAAUC,MAAX,EAAmBD,sBAAUQ,MAA7B,CAApB,CAAlB,CAlIJ;;AAmIpB;;;AAGA1P,EAAAA,eAAe,EAAEkP,sBAAUI,OAAV,CAAkBJ,sBAAUO,SAAV,CAAoB,CAACP,sBAAUC,MAAX,EAAmBD,sBAAUQ,MAA7B,CAApB,CAAlB,CAtIG;;AAuIpB;;;;AAIAhK,EAAAA,WAAW,EAAEwJ,sBAAUU,IA3IH;;AA4IpB;;;;AAIA3B,EAAAA,oBAAoB,EAAEiB,sBAAUU,IAhJZ;;AAiJpB;;;AAGAlI,EAAAA,MAAM,EAAEwH,sBAAUK,KAAV,CAAgB;AACtB;;;AAGAhK,IAAAA,GAAG,EAAE2J,sBAAUC,MAJO;;AAKtB;;;AAGApH,IAAAA,KAAK,EAAEmH,sBAAUY,KAAV,CAAgB,CAAC9H,sBAAUC,GAAX,EAAgBD,sBAAUE,IAA1B,CAAhB;AARe,GAAhB,CApJY;;AA8JpB;;;;;;;;;;;AAWAP,EAAAA,SAAS,EAAEuH,sBAAUE,MAzKD;;AA0KpB;;;;AAIAX,EAAAA,YAAY,EAAES,sBAAUU,IA9KJ;;AA+KpB;;;;AAIAxB,EAAAA,cAAc,EAAEc,sBAAUU,IAnLN;;AAoLpB;;;;AAIAvB,EAAAA,iBAAiB,EAAEa,sBAAUU,IAxLT;;AAyLpB;;;;AAIAd,EAAAA,cAAc,EAAEI,sBAAUS,IA7LN;;AA8LpB;;;AAGAZ,EAAAA,gBAAgB,EAAEG,sBAAUQ,MAjMR;;AAkMpB;;;AAGAtE,EAAAA,gBAAgB,EAAE8D,sBAAUU,IArMR;;AAsMpB;;;;;;;;;;;AAWAnC,EAAAA,QAAQ,EAAEyB,sBAAUU,IAjNA;;AAkNpB;;;;AAIA1C,EAAAA,YAAY,EAAEgC,sBAAUU,IAtNJ;;AAuNpB;;;AAGAzC,EAAAA,qBAAqB,EAAE+B,sBAAUQ,MA1Nb;;AA2NpB;;;;AAIAhC,EAAAA,cAAc,EAAEwB,sBAAUU,IA/NN;;AAgOpB;;;;AAIA9C,EAAAA,yBAAyB,EAAEoC,sBAAUU,IApOjB;;AAqOpB;;;;;AAKA3K,EAAAA,gBAAgB,EAAEiK,sBAAUE,MA1OR;;AA2OpB;;;AAGAxD,EAAAA,UAAU,EAAEsD,sBAAUK,KAAV,CAAgB;AAC1BvQ,IAAAA,SAAS,EAAEkQ,sBAAUU,IADK;AAE1B3Q,IAAAA,eAAe,EAAEiQ,sBAAUU,IAFD;AAG1B1Q,IAAAA,eAAe,EAAEgQ,sBAAUU,IAHD;AAI1BzQ,IAAAA,UAAU,EAAE+P,sBAAUU,IAJI;AAK1BxQ,IAAAA,aAAa,EAAE8P,sBAAUU;AALC,GAAhB;AA9OQ,CAAtB;eAuPerQ,S","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport memoize from 'memoize-one';\n\nimport GridTable from './GridTable';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableFooterRow from './TableFooterRow';\nimport TableRow from './TableRow';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableFooterCell from './TableFooterCell';\nimport TableCell from './TableCell';\nimport Column, { Alignment, FrozenDirection } from './Column';\nimport SortOrder from './SortOrder';\nimport ExpandIcon from './ExpandIcon';\nimport SortIndicator from './SortIndicator';\nimport ColumnResizer from './ColumnResizer';\nimport ColumnManager from './ColumnManager';\n\nimport {\n  renderElement,\n  normalizeColumns,\n  getScrollbarSize as defaultGetScrollbarSize,\n  isObjectEqual,\n  callOrReturn,\n  hasChildren,\n  flattenOnKeys,\n  cloneArray,\n  getValue,\n  throttle,\n  noop,\n} from './utils';\n\nconst getColumns = memoize((columns, children) => columns || normalizeColumns(children));\n\nconst getContainerStyle = (width, maxWidth, height) => ({\n  width,\n  maxWidth,\n  height,\n  overflow: 'hidden',\n});\n\nconst DEFAULT_COMPONENTS = {\n  TableCell,\n  TableHeaderCell,\n  TableFooterCell,\n  ExpandIcon,\n  SortIndicator,\n};\n\nconst RESIZE_THROTTLE_WAIT = 50;\n\n// used for memoization\nconst EMPTY_ARRAY = [];\n\n/**\n * React table component\n */\nclass BaseTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { columns, children, defaultExpandedRowKeys } = props;\n    this.state = {\n      scrollbarSize: 0,\n      hoveredRowKey: null,\n      clickedRowKey: null,\n      resizingKey: null,\n      resizingWidth: 0,\n      expandedRowKeys: cloneArray(defaultExpandedRowKeys),\n    };\n    this.columnManager = new ColumnManager(getColumns(columns, children), props.fixed);\n\n    this._setContainerRef = this._setContainerRef.bind(this);\n    this._setMainTableRef = this._setMainTableRef.bind(this);\n    this._setLeftTableRef = this._setLeftTableRef.bind(this);\n    this._setRightTableRef = this._setRightTableRef.bind(this);\n\n    this.renderExpandIcon = this.renderExpandIcon.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n    this.renderRowCell = this.renderRowCell.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderFooter = this.renderFooter.bind(this);\n    this.renderHeaderCell = this.renderHeaderCell.bind(this);\n    this.renderFooterCell = this.renderFooterCell.bind(this);\n\n    this._handleScroll = this._handleScroll.bind(this);\n    this._handleVerticalScroll = this._handleVerticalScroll.bind(this);\n    this._handleRowsRendered = this._handleRowsRendered.bind(this);\n    this._handleRowHover = this._handleRowHover.bind(this);\n    this._handleRowClick = this._handleRowClick.bind(this);\n    this._handleRowExpand = this._handleRowExpand.bind(this);\n    this._handleColumnResize = throttle(this._handleColumnResize.bind(this), RESIZE_THROTTLE_WAIT);\n    this._handleColumnResizeStart = this._handleColumnResizeStart.bind(this);\n    this._handleColumnResizeStop = this._handleColumnResizeStop.bind(this);\n    this._handleColumnSort = this._handleColumnSort.bind(this);\n\n    this._getLeftTableContainerStyle = memoize(getContainerStyle);\n    this._getRightTableContainerStyle = memoize(getContainerStyle);\n    this._flattenOnKeys = memoize((tree, keys, dataKey) => {\n      this._depthMap = {};\n      return flattenOnKeys(tree, keys, this._depthMap, dataKey);\n    });\n    this._resetColumnManager = memoize((columns, fixed) => {\n      this.columnManager.reset(columns, fixed);\n    }, isObjectEqual);\n\n    this._scroll = { scrollLeft: 0, scrollTop: 0 };\n    this._scrollHeight = 0;\n    this._lastScannedRowIndex = -1;\n    this._hasDataChangedSinceEndReached = true;\n\n    this._data = props.data;\n    this._depthMap = {};\n\n    this._horizontalScrollbarSize = 0;\n    this._verticalScrollbarSize = 0;\n    this._scrollbarPresenceChanged = false;\n  }\n\n  /**\n   * Get the DOM node of the table\n   */\n  getDOMNode() {\n    return this.tableNode;\n  }\n\n  /**\n   * Get the column manager\n   */\n  getColumnManager() {\n    return this.columnManager;\n  }\n\n  /**\n   * Get internal `expandedRowKeys` state\n   */\n  getExpandedRowKeys() {\n    const { expandedRowKeys } = this.props;\n    return expandedRowKeys !== undefined ? expandedRowKeys || EMPTY_ARRAY : this.state.expandedRowKeys;\n  }\n\n  /**\n   * Get the expanded state, fallback to normal state if not expandable.\n   */\n  getExpandedState() {\n    return {\n      expandedData: this._data,\n      expandedRowKeys: this.getExpandedRowKeys(),\n      expandedDepthMap: this._depthMap,\n    };\n  }\n\n  /**\n   * Get the total height of all rows, including expanded rows.\n   */\n  getTotalRowsHeight() {\n    return this._data.length * this.props.rowHeight;\n  }\n\n  /**\n   * Get the total width of all columns.\n   */\n  getTotalColumnsWidth() {\n    return this.columnManager.getColumnsWidth();\n  }\n\n  /**\n   * Forcefully re-render the inner Grid component.\n   *\n   * Calling `forceUpdate` on `Table` may not re-render the inner Grid since it uses `shallowCompare` as a performance optimization.\n   * Use this method if you want to manually trigger a re-render.\n   * This may be appropriate if the underlying row data has changed but the row sizes themselves have not.\n   */\n  forceUpdateTable() {\n    this.table && this.table.forceUpdateTable();\n    this.leftTable && this.leftTable.forceUpdateTable();\n    this.rightTable && this.rightTable.forceUpdateTable();\n  }\n\n  /**\n   * Scroll to the specified offset.\n   * Useful for animating position changes.\n   *\n   * @param {object} offset\n   */\n  scrollToPosition(offset) {\n    this._scroll = offset;\n\n    this.table && this.table.scrollToPosition(offset);\n    this.leftTable && this.leftTable.scrollToTop(offset.scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(offset.scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset vertically.\n   *\n   * @param {number} scrollTop\n   */\n  scrollToTop(scrollTop) {\n    this._scroll.scrollTop = scrollTop;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n    this.leftTable && this.leftTable.scrollToTop(scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset horizontally.\n   *\n   * @param {number} scrollLeft\n   */\n  scrollToLeft(scrollLeft) {\n    this._scroll.scrollLeft = scrollLeft;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n  }\n\n  /**\n   * Scroll to the specified row.\n   * By default, the table will scroll as little as possible to ensure the row is visible.\n   * You can control the alignment of the row though by specifying an align property. Acceptable values are:\n   *\n   * - `auto` (default) - Scroll as little as possible to ensure the row is visible.\n   * - `smart` - Same as `auto` if it is less than one viewport away, or it's the same as`center`.\n   * - `center` - Center align the row within the table.\n   * - `end` - Align the row to the bottom side of the table.\n   * - `start` - Align the row to the top side of the table.\n\n   * @param {number} rowIndex\n   * @param {string} align\n   */\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.table && this.table.scrollToRow(rowIndex, align);\n    this.leftTable && this.leftTable.scrollToRow(rowIndex, align);\n    this.rightTable && this.rightTable.scrollToRow(rowIndex, align);\n  }\n\n  /**\n   * Set `expandedRowKeys` manually.\n   * This method is available only if `expandedRowKeys` is uncontrolled.\n   *\n   * @param {array} expandedRowKeys\n   */\n  setExpandedRowKeys(expandedRowKeys) {\n    // if `expandedRowKeys` is controlled\n    if (this.props.expandedRowKeys !== undefined) return;\n\n    this.setState({\n      expandedRowKeys: cloneArray(expandedRowKeys),\n    });\n  }\n\n  renderExpandIcon({ rowData, rowIndex, depth, onExpand }) {\n    const { rowKey, expandColumnKey, expandIconProps } = this.props;\n    if (!expandColumnKey) return null;\n\n    const expandable = rowIndex >= 0 && hasChildren(rowData);\n    const expanded = rowIndex >= 0 && this.getExpandedRowKeys().indexOf(rowData[rowKey]) >= 0;\n    const extraProps = callOrReturn(expandIconProps, { rowData, rowIndex, depth, expandable, expanded });\n    const ExpandIcon = this._getComponent('ExpandIcon');\n\n    return <ExpandIcon depth={depth} expandable={expandable} expanded={expanded} {...extraProps} onExpand={onExpand} />;\n  }\n\n  renderRow({ isScrolling, columns, rowData, rowIndex, style }) {\n    const { rowClassName, rowRenderer, rowEventHandlers, expandColumnKey } = this.props;\n\n    const rowClass = callOrReturn(rowClassName, { columns, rowData, rowIndex });\n    const extraProps = callOrReturn(this.props.rowProps, { columns, rowData, rowIndex });\n    const rowKey = rowData[this.props.rowKey];\n    const depth = this._depthMap[rowKey] || 0;\n\n    const className = cn(this._prefixClass('row'), rowClass, {\n      [this._prefixClass(`row--depth-${depth}`)]: !!expandColumnKey && rowIndex >= 0,\n      [this._prefixClass('row--expanded')]: !!expandColumnKey && this.getExpandedRowKeys().indexOf(rowKey) >= 0,\n      [this._prefixClass('row--hovered')]: !isScrolling && rowKey === this.state.hoveredRowKey,\n      [this._prefixClass('row--clicked')]: rowKey === this.state.clickedRowKey,\n      [this._prefixClass('row--frozen')]: depth === 0 && rowIndex < 0,\n      [this._prefixClass('row--customized')]: rowRenderer,\n    });\n\n    const rowProps = {\n      ...extraProps,\n      role: 'row',\n      key: `row-${rowKey}`,\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      rowKey,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      rowRenderer,\n      cellRenderer: this.renderRowCell,\n      expandIconRenderer: this.renderExpandIcon,\n      onRowExpand: this._handleRowExpand,\n      // for fixed table, we need to sync the hover state across the inner tables\n      onRowHover: this.columnManager.hasFrozenColumns() ? this._handleRowHover : null,\n      onRowClick: this.columnManager.hasFrozenColumns() ? this._handleRowClick : null\n    };\n\n    return <TableRow {...rowProps} />;\n  }\n\n  renderRowCell({ isScrolling, columns, column, columnIndex, rowData, rowIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`row-${rowData[this.props.rowKey]}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('row-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { className, dataKey, dataGetter, cellRenderer } = column;\n    const TableCell = this._getComponent('TableCell');\n\n    const cellData = dataGetter\n      ? dataGetter({ columns, column, columnIndex, rowData, rowIndex })\n      : getValue(rowData, dataKey);\n    const cellProps = { isScrolling, cellData, columns, column, columnIndex, rowData, rowIndex, container: this };\n    const cell = renderElement(cellRenderer || <TableCell className={this._prefixClass('row-cell-text')} />, cellProps);\n\n    const cellCls = callOrReturn(className, { cellData, columns, column, columnIndex, rowData, rowIndex });\n    const cls = cn(this._prefixClass('row-cell'), cellCls, {\n      [this._prefixClass('row-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('row-cell--align-right')]: column.align === Alignment.RIGHT,\n    });\n\n    const extraProps = callOrReturn(this.props.cellProps, { columns, column, columnIndex, rowData, rowIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`row-${rowData[this.props.rowKey]}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n      >\n        {expandIcon}\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderHeader({ columns, headerIndex, style }) {\n    const { headerClassName, headerRenderer } = this.props;\n\n    const headerClass = callOrReturn(headerClassName, { columns, headerIndex });\n    const extraProps = callOrReturn(this.props.headerProps, { columns, headerIndex });\n\n    const className = cn(this._prefixClass('header-row'), headerClass, {\n      [this._prefixClass('header-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('header-row--customized')]: headerRenderer,\n    });\n\n    const headerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `header-${headerIndex}`,\n      className,\n      style,\n      columns,\n      headerIndex,\n      headerRenderer,\n      cellRenderer: this.renderHeaderCell,\n      expandColumnKey: this.props.expandColumnKey,\n      expandIcon: this._getComponent('ExpandIcon'),\n    };\n\n    return <TableHeaderRow {...headerProps} />;\n  }\n\n  renderFooter({ columns, footerIndex, style }) {\n    const { footerClassName, footerRenderer } = this.props;\n\n    const footerClass = callOrReturn(footerClassName, { columns, footerIndex });\n    const extraProps = callOrReturn(this.props.footerProps, { columns, footerIndex });\n\n    const className = cn(this._prefixClass('footer-row'), footerClass, {\n      [this._prefixClass('footer-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('footer-row--customized')]: footerRenderer,\n    });\n\n    const footerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `footer-${footerIndex}`,\n      className,\n      style,\n      columns,\n      footerIndex,\n      footerRenderer,\n      cellRenderer: this.renderFooterCell,\n      expandColumnKey: this.props.expandColumnKey\n    };\n\n    return <TableFooterRow {...footerProps} />;\n  }\n\n  renderHeaderCell({ columns, column, columnIndex, headerIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`header-${headerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('header-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { headerClassName, headerRenderer } = column;\n    const { sortBy, sortState, headerCellProps } = this.props;\n    const TableHeaderCell = this._getComponent('TableHeaderCell');\n    const SortIndicator = this._getComponent('SortIndicator');\n\n    const cellProps = { columns, column, columnIndex, headerIndex, container: this };\n    const cell = renderElement(\n      headerRenderer || <TableHeaderCell className={this._prefixClass('header-cell-text')} />,\n      cellProps\n    );\n\n    let sorting, sortOrder;\n\n    if (sortState) {\n      const order = sortState[column.key];\n      sorting = order === SortOrder.ASC || order === SortOrder.DESC;\n      sortOrder = sorting ? order : SortOrder.ASC;\n    } else {\n      sorting = column.key === sortBy.key;\n      sortOrder = sorting ? sortBy.order : SortOrder.ASC;\n    }\n\n    const cellCls = callOrReturn(headerClassName, { columns, column, columnIndex, headerIndex });\n    const cls = cn(this._prefixClass('header-cell'), cellCls, {\n      [this._prefixClass('header-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('header-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('header-cell--sortable')]: column.sortable,\n      [this._prefixClass('header-cell--sorting')]: sorting,\n      [this._prefixClass('header-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(headerCellProps, { columns, column, columnIndex, headerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`header-${headerIndex}-cell-${column.key}`}\n        onClick={column.sortable ? this._handleColumnSort : null}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {expandIcon}\n        {cell}\n        {column.sortable && (\n          <SortIndicator\n            sortOrder={sortOrder}\n            className={cn(this._prefixClass('sort-indicator'), {\n              [this._prefixClass('sort-indicator--descending')]: sortOrder === SortOrder.DESC,\n            })}\n          />\n        )}\n        {column.resizable && (\n          <ColumnResizer\n            className={this._prefixClass('column-resizer')}\n            column={column}\n            onResizeStart={this._handleColumnResizeStart}\n            onResizeStop={this._handleColumnResizeStop}\n            onResize={this._handleColumnResize}\n          />\n        )}\n      </Tag>\n    );\n  }\n\n  renderFooterCell({ columns, column, columnIndex, footerIndex }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`footer-${footerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('footer-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { footerClassName, footerRenderer } = column;\n    const { footerCellProps } = this.props;\n    const TableFooterCell = this._getComponent('TableFooterCell');\n\n    const cellProps = { columns, column, columnIndex, footerIndex, container: this };\n    const cell = renderElement(\n      footerRenderer || <TableFooterCell className={this._prefixClass('footer-cell-text')} />,\n      cellProps\n    );\n\n    const cellCls = callOrReturn(footerClassName, { columns, column, columnIndex, footerIndex });\n    const cls = cn(this._prefixClass('footer-cell'), cellCls, {\n      [this._prefixClass('footer-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('footer-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('footer-cell--sortable')]: column.sortable,\n      [this._prefixClass('footer-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(footerCellProps, { columns, column, columnIndex, footerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`footer-${footerIndex}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderMainTable() {\n    const { width, headerHeight, rowHeight, fixed, ...rest } = this.props;\n    const height = this._getTableHeight();\n\n    let tableWidth = width - this._verticalScrollbarSize;\n    if (fixed) {\n      const columnsWidth = this.columnManager.getColumnsWidth();\n      // make sure `scrollLeft` is always integer to fix a sync bug when scrolling to end horizontally\n      tableWidth = Math.max(Math.round(columnsWidth), tableWidth);\n    }\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        className={this._prefixClass('table-main')}\n        ref={this._setMainTableRef}\n        data={this._data}\n        columns={this.columnManager.getMainColumns()}\n        width={width}\n        height={height}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={tableWidth + (fixed ? this._verticalScrollbarSize : 0)}\n        bodyWidth={tableWidth}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleScroll}\n        onRowsRendered={this._handleRowsRendered}\n      />\n    );\n  }\n\n  renderLeftTable() {\n    if (!this.columnManager.hasLeftFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const offset = this._verticalScrollbarSize || 20;\n    const columnsWidth = this.columnManager.getLeftFrozenColumnsWidth();\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-left')}\n        ref={this._setLeftTableRef}\n        data={this._data}\n        columns={this.columnManager.getLeftFrozenColumns()}\n        width={columnsWidth + offset}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + offset}\n        bodyWidth={columnsWidth + offset}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderRightTable() {\n    if (!this.columnManager.hasRightFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const columnsWidth = this.columnManager.getRightFrozenColumnsWidth();\n    const scrollbarWidth = this._verticalScrollbarSize;\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth + scrollbarWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-right')}\n        ref={this._setRightTableRef}\n        data={this._data}\n        columns={this.columnManager.getRightFrozenColumns()}\n        width={columnsWidth + scrollbarWidth}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + scrollbarWidth}\n        bodyWidth={columnsWidth}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderResizingLine() {\n    const { width, fixed } = this.props;\n    const { resizingKey } = this.state;\n    if (!fixed || !resizingKey) return null;\n\n    const columns = this.columnManager.getMainColumns();\n    const idx = columns.findIndex(column => column.key === resizingKey);\n    const column = columns[idx];\n    const { width: columnWidth, frozen } = column;\n    const leftWidth = this.columnManager.recomputeColumnsWidth(columns.slice(0, idx));\n\n    let left = leftWidth + columnWidth;\n    if (!frozen) {\n      left -= this._scroll.scrollLeft;\n    } else if (frozen === FrozenDirection.RIGHT) {\n      const rightWidth = this.columnManager.recomputeColumnsWidth(columns.slice(idx + 1));\n      if (rightWidth + columnWidth > width - this._verticalScrollbarSize) {\n        left = columnWidth;\n      } else {\n        left = width - this._verticalScrollbarSize - rightWidth;\n      }\n    }\n    const style = {\n      left,\n      height: this._getTableHeight() - this._horizontalScrollbarSize,\n    };\n    return <div className={this._prefixClass('resizing-line')} style={style} />;\n  }\n\n  // renderFooter() {\n  //   const { footerHeight, footerRenderer } = this.props;\n  //   if (footerHeight === 0) return null;\n  //   return (\n  //     <div className={this._prefixClass('footer')} style={{ height: footerHeight }}>\n  //       {renderElement(footerRenderer)}\n  //     </div>\n  //   );\n  // }\n\n  renderEmptyLayer() {\n    const { data, footerHeight, emptyRenderer } = this.props;\n\n    if (data && data.length) return null;\n    const headerHeight = this._getHeaderHeight();\n    return (\n      <div className={this._prefixClass('empty-layer')} style={{ top: headerHeight, bottom: footerHeight }}>\n        {renderElement(emptyRenderer)}\n      </div>\n    );\n  }\n\n  renderOverlay() {\n    const { overlayRenderer } = this.props;\n\n    return <div className={this._prefixClass('overlay')}>{!!overlayRenderer && renderElement(overlayRenderer)}</div>;\n  }\n\n  render() {\n    const {\n      columns,\n      children,\n      width,\n      fixed,\n      data,\n      frozenData,\n      expandColumnKey,\n      disabled,\n      className,\n      style,\n      footerHeight,\n      classPrefix,\n    } = this.props;\n\n    this._resetColumnManager(getColumns(columns, children), fixed);\n\n    if (expandColumnKey) {\n      this._data = this._flattenOnKeys(data, this.getExpandedRowKeys(), this.props.rowKey);\n    } else {\n      this._data = data;\n    }\n    // should be after `this._data` assigned\n    this._calcScrollbarSizes();\n\n    const containerStyle = {\n      ...style,\n      width,\n      height: this._getTableHeight(),\n      position: 'relative',\n    };\n    const cls = cn(classPrefix, className, {\n      [`${classPrefix}--fixed`]: fixed,\n      [`${classPrefix}--expandable`]: !!expandColumnKey,\n      [`${classPrefix}--empty`]: data.length === 0,\n      [`${classPrefix}--has-frozen-rows`]: frozenData.length > 0,\n      [`${classPrefix}--has-frozen-columns`]: this.columnManager.hasFrozenColumns(),\n      [`${classPrefix}--disabled`]: disabled,\n    });\n    return (\n      <div ref={this._setContainerRef} className={cls} style={containerStyle}>\n        {/* {this.renderFooter()} */}\n        {this.renderMainTable()}\n        {this.renderLeftTable()}\n        {this.renderRightTable()}\n        {this.renderResizingLine()}\n        {this.renderEmptyLayer()}\n        {this.renderOverlay()}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const scrollbarSize = this.props.getScrollbarSize();\n    if (scrollbarSize > 0) {\n      this.setState({ scrollbarSize });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { data, height, maxHeight } = this.props;\n    if (data !== prevProps.data) {\n      this._lastScannedRowIndex = -1;\n      this._hasDataChangedSinceEndReached = true;\n    }\n\n    if (maxHeight !== prevProps.maxHeight || height !== prevProps.height) {\n      this._maybeCallOnEndReached();\n    }\n    this._maybeScrollbarPresenceChange();\n  }\n\n  _prefixClass(className) {\n    return `${this.props.classPrefix}__${className}`;\n  }\n\n  _setContainerRef(ref) {\n    this.tableNode = ref;\n  }\n\n  _setMainTableRef(ref) {\n    this.table = ref;\n  }\n\n  _setLeftTableRef(ref) {\n    this.leftTable = ref;\n  }\n\n  _setRightTableRef(ref) {\n    this.rightTable = ref;\n  }\n\n  _getComponent(name) {\n    if (this.props.components && this.props.components[name]) return this.props.components[name];\n    return DEFAULT_COMPONENTS[name];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _getFrozenRowsHeight() {\n    const { frozenData, rowHeight } = this.props;\n    return frozenData.length * rowHeight;\n  }\n\n  _getTableHeight() {\n    const { height, maxHeight, footerHeight } = this.props;\n    let tableHeight = height;\n    const footer = footerHeight || 0;\n    if (maxHeight > 0) {\n      const frozenRowsHeight = this._getFrozenRowsHeight();\n      const totalRowsHeight = this.getTotalRowsHeight();\n      const headerHeight = this._getHeaderHeight();\n      const totalHeight = headerHeight + frozenRowsHeight + totalRowsHeight + footer + this._horizontalScrollbarSize;\n      tableHeight = Math.min(totalHeight, maxHeight);\n    }else{\n      const frozenRowsHeight = this._getFrozenRowsHeight();\n      const totalRowsHeight = this.getTotalRowsHeight();\n      const headerHeight = this._getHeaderHeight();\n      const totalHeight = headerHeight + frozenRowsHeight + totalRowsHeight + footer + this._horizontalScrollbarSize ;\n      tableHeight = Math.min(totalHeight, height);\n    }\n    return tableHeight;\n  }\n\n  _getBodyHeight() {\n    return this._getTableHeight() - this._getHeaderHeight() - this._getFrozenRowsHeight();\n  }\n\n  _getFrozenContainerHeight() {\n    const { maxHeight, footerHeight } = this.props;\n    const footer = footerHeight || 0;\n\n    const tableHeight = this._getTableHeight() - (this._data.length > 0 ? this._horizontalScrollbarSize : 0);\n    // in auto height mode tableHeight = totalHeight\n    if (maxHeight > 0) return tableHeight;\n\n    const totalHeight = this.getTotalRowsHeight() + this._getHeaderHeight() + this._getFrozenRowsHeight() + footer;\n    return Math.min(tableHeight, totalHeight);\n  }\n\n  _calcScrollbarSizes() {\n    const { fixed, width } = this.props;\n    const { scrollbarSize } = this.state;\n\n    const totalRowsHeight = this.getTotalRowsHeight();\n    const totalColumnsWidth = this.getTotalColumnsWidth();\n\n    const prevHorizontalScrollbarSize = this._horizontalScrollbarSize;\n    const prevVerticalScrollbarSize = this._verticalScrollbarSize;\n\n    if (scrollbarSize === 0) {\n      this._horizontalScrollbarSize = 0;\n      this._verticalScrollbarSize = 0;\n    } else {\n      // we have to set `this._horizontalScrollbarSize` before calling `this._getBodyHeight`\n      if (!fixed || totalColumnsWidth <= width - scrollbarSize) {\n        this._horizontalScrollbarSize = 0;\n        this._verticalScrollbarSize = totalRowsHeight > this._getBodyHeight() ? scrollbarSize : 0;\n      } else {\n        if (totalColumnsWidth > width) {\n          this._horizontalScrollbarSize = scrollbarSize;\n          this._verticalScrollbarSize =\n            totalRowsHeight > this._getBodyHeight() - this._horizontalScrollbarSize ? scrollbarSize : 0;\n        } else {\n          this._horizontalScrollbarSize = 0;\n          this._verticalScrollbarSize = 0;\n          if (totalRowsHeight > this._getBodyHeight()) {\n            this._horizontalScrollbarSize = scrollbarSize;\n            this._verticalScrollbarSize = scrollbarSize;\n          }\n        }\n      }\n    }\n\n    if (\n      prevHorizontalScrollbarSize !== this._horizontalScrollbarSize ||\n      prevVerticalScrollbarSize !== this._verticalScrollbarSize\n    ) {\n      this._scrollbarPresenceChanged = true;\n    }\n  }\n\n  _maybeScrollbarPresenceChange() {\n    if (this._scrollbarPresenceChanged) {\n      const { onScrollbarPresenceChange } = this.props;\n      this._scrollbarPresenceChanged = false;\n\n      onScrollbarPresenceChange({\n        size: this.state.scrollbarSize,\n        horizontal: this._horizontalScrollbarSize > 0,\n        vertical: this._verticalScrollbarSize > 0,\n      });\n    }\n  }\n\n  _maybeCallOnEndReached() {\n    const { onEndReached, onEndReachedThreshold } = this.props;\n    const { scrollTop } = this._scroll;\n    const scrollHeight = this.getTotalRowsHeight();\n    const clientHeight = this._getBodyHeight();\n\n    if (!onEndReached || !clientHeight || !scrollHeight) return;\n    const distanceFromEnd = scrollHeight - scrollTop - clientHeight + this._horizontalScrollbarSize;\n    if (\n      this._lastScannedRowIndex >= 0 &&\n      distanceFromEnd <= onEndReachedThreshold &&\n      (this._hasDataChangedSinceEndReached || scrollHeight !== this._scrollHeight)\n    ) {\n      this._hasDataChangedSinceEndReached = false;\n      this._scrollHeight = scrollHeight;\n      onEndReached({ distanceFromEnd });\n    }\n  }\n\n  _handleScroll(args) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToPosition(args);\n    this.props.onScroll(args);\n\n    if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleVerticalScroll({ scrollTop }) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToTop(scrollTop);\n\n    if (scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleRowsRendered(args) {\n    this.props.onRowsRendered(args);\n\n    if (args.overscanStopIndex > this._lastScannedRowIndex) {\n      this._lastScannedRowIndex = args.overscanStopIndex;\n      this._maybeCallOnEndReached();\n    }\n  }\n\n  _handleRowHover({ hovered, rowKey }) {\n    this.setState({ hoveredRowKey: hovered ? rowKey : null });\n  }\n\n  _handleRowClick({ clicked, rowKey }) {\n    this.setState({ clickedRowKey: clicked && this.state.clickedRowKey !== rowKey ? rowKey : null });\n  }\n\n  _handleRowExpand({ expanded, rowData, rowIndex, rowKey }) {\n    const expandedRowKeys = cloneArray(this.getExpandedRowKeys());\n    if (expanded) {\n      if (!expandedRowKeys.indexOf(rowKey) >= 0) expandedRowKeys.push(rowKey);\n    } else {\n      const index = expandedRowKeys.indexOf(rowKey);\n      if (index > -1) {\n        expandedRowKeys.splice(index, 1);\n      }\n    }\n    // if `expandedRowKeys` is uncontrolled, update internal state\n    if (this.props.expandedRowKeys === undefined) {\n      this.setState({ expandedRowKeys });\n    }\n    this.props.onRowExpand({ expanded, rowData, rowIndex, rowKey });\n    this.props.onExpandedRowsChange(expandedRowKeys);\n  }\n\n  _handleColumnResize({ key }, width) {\n    this.columnManager.setColumnWidth(key, width);\n    this.setState({ resizingWidth: width });\n\n    const column = this.columnManager.getColumn(key);\n    this.props.onColumnResize({ column, width });\n  }\n\n  _handleColumnResizeStart({ key }) {\n    this.setState({ resizingKey: key });\n  }\n\n  _handleColumnResizeStop() {\n    const { resizingKey, resizingWidth } = this.state;\n    this.setState({ resizingKey: null, resizingWidth: 0 });\n\n    if (!resizingKey || !resizingWidth) return;\n\n    const column = this.columnManager.getColumn(resizingKey);\n    this.props.onColumnResizeEnd({ column, width: resizingWidth });\n  }\n\n  _handleColumnSort(event) {\n    const key = event.currentTarget.dataset.key;\n    const { sortBy, sortState, onColumnSort } = this.props;\n    let order = SortOrder.ASC;\n\n    if (sortState) {\n      order = sortState[key] === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    } else if (key === sortBy.key) {\n      order = sortBy.order === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    }\n\n    const column = this.columnManager.getColumn(key);\n    onColumnSort({ column, key, order });\n  }\n}\n\nBaseTable.Column = Column;\nBaseTable.PlaceholderKey = ColumnManager.PlaceholderKey;\n\nBaseTable.defaultProps = {\n  classPrefix: 'BaseTable',\n  rowKey: 'id',\n  data: [],\n  frozenData: [],\n  fixed: false,\n  headerHeight: 50,\n  rowHeight: 50,\n  footerHeight: 0,\n  defaultExpandedRowKeys: [],\n  sortBy: {},\n  useIsScrolling: false,\n  overscanRowCount: 1,\n  onEndReachedThreshold: 500,\n  getScrollbarSize: defaultGetScrollbarSize,\n\n  onScroll: noop,\n  onRowsRendered: noop,\n  onScrollbarPresenceChange: noop,\n  onRowExpand: noop,\n  onExpandedRowsChange: noop,\n  onColumnSort: noop,\n  onColumnResize: noop,\n  onColumnResizeEnd: noop,\n};\n\nBaseTable.propTypes = {\n  /**\n   * Prefix for table's inner className\n   */\n  classPrefix: PropTypes.string,\n  /**\n   * Class name for the table\n   */\n  className: PropTypes.string,\n  /**\n   * Custom style for the table\n   */\n  style: PropTypes.object,\n  /**\n   * A collection of Column\n   */\n  children: PropTypes.node,\n  /**\n   * Columns for the table\n   */\n  columns: PropTypes.arrayOf(PropTypes.shape(Column.propTypes)),\n  /**\n   * The data for the table\n   */\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * The data be frozen to top, `rowIndex` is negative and started from `-1`\n   */\n  frozenData: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * The key field of each data item\n   */\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  /**\n   * The width of the table\n   */\n  width: PropTypes.number.isRequired,\n  /**\n   * The height of the table, will be ignored if `maxHeight` is set\n   */\n  height: PropTypes.number,\n  /**\n   * The max height of the table, the table's height will auto change when data changes,\n   * will turns to vertical scroll if reaches the max height\n   */\n  maxHeight: PropTypes.number,\n  /**\n   * The height of each table row\n   */\n  rowHeight: PropTypes.number.isRequired,\n  /**\n   * The height of the table header, set to 0 to hide the header, could be an array to render multi headers.\n   */\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  /**\n   * The height of the table footer\n   */\n  footerHeight: PropTypes.number,\n  /**\n   * Whether the width of the columns are fixed or flexible\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Whether the table is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Custom renderer on top of the table component\n   */\n  overlayRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom renderer when the length of data is 0\n   */\n  emptyRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom footer renderer, available only if `footerHeight` is larger then 0\n   */\n  footerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom header renderer\n   * The renderer receives props `{ cells, columns, headerIndex }`\n   */\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom row renderer\n   * The renderer receives props `{ isScrolling, cells, columns, rowData, rowIndex, depth }`\n   */\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Class name for the table header, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, headerIndex }) => string`\n   */\n  headerClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Class name for the table row, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, rowData, rowIndex }) => string`\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Extra props applied to header element\n   * The handler is of the shape of `({ columns, headerIndex }) object`\n   */\n  headerProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to header cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, headerIndex }) => object`\n   */\n  headerCellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row element\n   * The handler is of the shape of `({ columns, rowData, rowIndex }) => object`\n   */\n  rowProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, rowData, rowIndex }) => object`\n   */\n  cellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to ExpandIcon component\n   * The handler is of the shape of `({ rowData, rowIndex, depth, expandable, expanded }) => object`\n   */\n  expandIconProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * The key for the expand column which render the expand icon if the data is a tree\n   */\n  expandColumnKey: PropTypes.string,\n  /**\n   * Default expanded row keys when initialize the table\n   */\n  defaultExpandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Controlled expanded row keys\n   */\n  expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * A callback function when expand or collapse a tree node\n   * The handler is of the shape of `({ expanded, rowData, rowIndex, rowKey }) => *`\n   */\n  onRowExpand: PropTypes.func,\n  /**\n   * A callback function when the expanded row keys changed\n   * The handler is of the shape of `(expandedRowKeys) => *`\n   */\n  onExpandedRowsChange: PropTypes.func,\n  /**\n   * The sort state for the table, will be ignored if `sortState` is set\n   */\n  sortBy: PropTypes.shape({\n    /**\n     * Sort key\n     */\n    key: PropTypes.string,\n    /**\n     * Sort order\n     */\n    order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n  }),\n  /**\n   * Multiple columns sort state for the table\n   *\n   * example:\n   * ```js\n   * {\n   *   'column-0': SortOrder.ASC,\n   *   'column-1': SortOrder.DESC,\n   * }\n   * ```\n   */\n  sortState: PropTypes.object,\n  /**\n   * A callback function for the header cell click event\n   * The handler is of the shape of `({ column, key, order }) => *`\n   */\n  onColumnSort: PropTypes.func,\n  /**\n   * A callback function when resizing the column width\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * A callback function when resizing the column width ends\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResizeEnd: PropTypes.func,\n  /**\n   * Adds an additional isScrolling parameter to the row renderer.\n   * This parameter can be used to show a placeholder row while scrolling.\n   */\n  useIsScrolling: PropTypes.bool,\n  /**\n   * Number of rows to render above/below the visible bounds of the list\n   */\n  overscanRowCount: PropTypes.number,\n  /**\n   * Custom scrollbar size measurement\n   */\n  getScrollbarSize: PropTypes.func,\n  /**\n   * A callback function when scrolling the table\n   * The handler is of the shape of `({ scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested }) => *`\n   *\n   * `scrollLeft` and `scrollTop` are numbers.\n   *\n   * `horizontalDirection` and `verticalDirection` are either `forward` or `backward`.\n   *\n   * `scrollUpdateWasRequested` is a boolean. This value is true if the scroll was caused by `scrollTo*`,\n   * and false if it was the result of a user interaction in the browser.\n   */\n  onScroll: PropTypes.func,\n  /**\n   * A callback function when scrolling the table within `onEndReachedThreshold` of the bottom\n   * The handler is of the shape of `({ distanceFromEnd }) => *`\n   */\n  onEndReached: PropTypes.func,\n  /**\n   * Threshold in pixels for calling `onEndReached`.\n   */\n  onEndReachedThreshold: PropTypes.number,\n  /**\n   * A callback function with information about the slice of rows that were just rendered\n   * The handler is of the shape of `({ overscanStartIndex, overscanStopIndex, startIndex， stopIndex }) => *`\n   */\n  onRowsRendered: PropTypes.func,\n  /**\n   * A callback function when the scrollbar presence state changed\n   * The handler is of the shape of `({ size, vertical, horizontal }) => *`\n   */\n  onScrollbarPresenceChange: PropTypes.func,\n  /**\n   * A object for the row event handlers\n   * Each of the keys is row event name, like `onClick`, `onDoubleClick` and etc.\n   * Each of the handlers is of the shape of `({ rowData, rowIndex, rowKey, event }) => object`\n   */\n  rowEventHandlers: PropTypes.object,\n  /**\n   * A object for the custom components, like `ExpandIcon` and `SortIndicator`\n   */\n  components: PropTypes.shape({\n    TableCell: PropTypes.func,\n    TableHeaderCell: PropTypes.func,\n    TableFooterCell: PropTypes.func,\n    ExpandIcon: PropTypes.func,\n    SortIndicator: PropTypes.func,\n  }),\n};\n\nexport default BaseTable;\n"],"file":"BaseTable.js"}