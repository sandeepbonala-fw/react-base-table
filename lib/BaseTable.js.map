{"version":3,"sources":["../src/BaseTable.js"],"names":["getColumns","columns","children","getContainerStyle","width","maxWidth","height","overflow","DEFAULT_COMPONENTS","TableCell","TableHeaderCell","TableFooterCell","ExpandIcon","SortIndicator","RESIZE_THROTTLE_WAIT","EMPTY_ARRAY","BaseTable","props","defaultExpandedRowKeys","state","scrollbarSize","hoveredRowKey","resizingKey","resizingWidth","expandedRowKeys","columnManager","ColumnManager","fixed","_setContainerRef","bind","_setMainTableRef","_setLeftTableRef","_setRightTableRef","renderExpandIcon","renderRow","renderRowCell","renderHeader","renderFooter","renderHeaderCell","renderFooterCell","_handleScroll","_handleVerticalScroll","_handleRowsRendered","_handleRowHover","_handleRowExpand","_handleColumnResize","_handleColumnResizeStart","_handleColumnResizeStop","_handleColumnSort","_getLeftTableContainerStyle","_getRightTableContainerStyle","_flattenOnKeys","tree","keys","dataKey","_depthMap","_resetColumnManager","reset","isObjectEqual","_scroll","scrollLeft","scrollTop","_scrollHeight","_lastScannedRowIndex","_hasDataChangedSinceEndReached","_data","data","_horizontalScrollbarSize","_verticalScrollbarSize","_scrollbarPresenceChanged","tableNode","undefined","expandedData","getExpandedRowKeys","expandedDepthMap","length","rowHeight","getColumnsWidth","table","forceUpdateTable","leftTable","rightTable","offset","scrollToPosition","scrollToTop","rowIndex","align","scrollToRow","setState","rowData","depth","onExpand","rowKey","expandColumnKey","expandIconProps","expandable","expanded","indexOf","extraProps","_getComponent","isScrolling","style","rowClassName","rowRenderer","rowEventHandlers","rowClass","rowProps","className","_prefixClass","role","key","cellRenderer","expandIconRenderer","onRowExpand","onRowHover","hasFrozenColumns","column","columnIndex","expandIcon","PlaceholderKey","getColumnStyle","dataGetter","cellData","cellProps","container","cell","cellCls","cls","Alignment","CENTER","RIGHT","tagName","rest","Tag","headerIndex","headerClassName","headerRenderer","headerClass","headerProps","footerIndex","footerClassName","footerRenderer","footerClass","footerProps","sortBy","sortState","headerCellProps","sorting","sortOrder","order","SortOrder","ASC","DESC","sortable","resizable","footerCellProps","headerHeight","_getTableHeight","tableWidth","columnsWidth","Math","max","round","getMainColumns","hasLeftFrozenColumns","containerHeight","_getFrozenContainerHeight","getLeftFrozenColumnsWidth","getLeftFrozenColumns","noop","hasRightFrozenColumns","getRightFrozenColumnsWidth","scrollbarWidth","getRightFrozenColumns","idx","findIndex","columnWidth","frozen","leftWidth","recomputeColumnsWidth","slice","left","FrozenDirection","rightWidth","footerHeight","emptyRenderer","_getHeaderHeight","top","bottom","overlayRenderer","frozenData","disabled","classPrefix","_calcScrollbarSizes","containerStyle","position","renderMainTable","renderLeftTable","renderRightTable","renderResizingLine","renderEmptyLayer","renderOverlay","getScrollbarSize","prevProps","prevState","maxHeight","_maybeCallOnEndReached","_maybeScrollbarPresenceChange","ref","name","components","Array","isArray","reduce","sum","tableHeight","frozenRowsHeight","_getFrozenRowsHeight","totalRowsHeight","getTotalRowsHeight","totalHeight","min","totalColumnsWidth","getTotalColumnsWidth","prevHorizontalScrollbarSize","prevVerticalScrollbarSize","_getBodyHeight","onScrollbarPresenceChange","size","horizontal","vertical","onEndReached","onEndReachedThreshold","scrollHeight","clientHeight","distanceFromEnd","args","lastScrollTop","onScroll","onRowsRendered","overscanStopIndex","hovered","push","index","splice","onExpandedRowsChange","setColumnWidth","getColumn","onColumnResize","onColumnResizeEnd","event","currentTarget","dataset","onColumnSort","React","PureComponent","Column","defaultProps","useIsScrolling","overscanRowCount","defaultGetScrollbarSize","propTypes","PropTypes","string","object","node","arrayOf","shape","isRequired","oneOfType","number","bool","func","element","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport memoize from 'memoize-one';\n\nimport GridTable from './GridTable';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableFooterRow from './TableFooterRow';\nimport TableRow from './TableRow';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableFooterCell from './TableFooterCell';\nimport TableCell from './TableCell';\nimport Column, { Alignment, FrozenDirection } from './Column';\nimport SortOrder from './SortOrder';\nimport ExpandIcon from './ExpandIcon';\nimport SortIndicator from './SortIndicator';\nimport ColumnResizer from './ColumnResizer';\nimport ColumnManager from './ColumnManager';\n\nimport {\n  renderElement,\n  normalizeColumns,\n  getScrollbarSize as defaultGetScrollbarSize,\n  isObjectEqual,\n  callOrReturn,\n  hasChildren,\n  flattenOnKeys,\n  cloneArray,\n  getValue,\n  throttle,\n  noop,\n} from './utils';\n\nconst getColumns = memoize((columns, children) => columns || normalizeColumns(children));\n\nconst getContainerStyle = (width, maxWidth, height) => ({\n  width,\n  maxWidth,\n  height,\n  overflow: 'hidden',\n});\n\nconst DEFAULT_COMPONENTS = {\n  TableCell,\n  TableHeaderCell,\n  TableFooterCell,\n  ExpandIcon,\n  SortIndicator,\n};\n\nconst RESIZE_THROTTLE_WAIT = 50;\n\n// used for memoization\nconst EMPTY_ARRAY = [];\n\n/**\n * React table component\n */\nclass BaseTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { columns, children, defaultExpandedRowKeys } = props;\n    this.state = {\n      scrollbarSize: 0,\n      hoveredRowKey: null,\n      resizingKey: null,\n      resizingWidth: 0,\n      expandedRowKeys: cloneArray(defaultExpandedRowKeys),\n    };\n    this.columnManager = new ColumnManager(getColumns(columns, children), props.fixed);\n\n    this._setContainerRef = this._setContainerRef.bind(this);\n    this._setMainTableRef = this._setMainTableRef.bind(this);\n    this._setLeftTableRef = this._setLeftTableRef.bind(this);\n    this._setRightTableRef = this._setRightTableRef.bind(this);\n\n    this.renderExpandIcon = this.renderExpandIcon.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n    this.renderRowCell = this.renderRowCell.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderFooter = this.renderFooter.bind(this);\n    this.renderHeaderCell = this.renderHeaderCell.bind(this);\n    this.renderFooterCell = this.renderFooterCell.bind(this);\n\n    this._handleScroll = this._handleScroll.bind(this);\n    this._handleVerticalScroll = this._handleVerticalScroll.bind(this);\n    this._handleRowsRendered = this._handleRowsRendered.bind(this);\n    this._handleRowHover = this._handleRowHover.bind(this);\n    this._handleRowExpand = this._handleRowExpand.bind(this);\n    this._handleColumnResize = throttle(this._handleColumnResize.bind(this), RESIZE_THROTTLE_WAIT);\n    this._handleColumnResizeStart = this._handleColumnResizeStart.bind(this);\n    this._handleColumnResizeStop = this._handleColumnResizeStop.bind(this);\n    this._handleColumnSort = this._handleColumnSort.bind(this);\n\n    this._getLeftTableContainerStyle = memoize(getContainerStyle);\n    this._getRightTableContainerStyle = memoize(getContainerStyle);\n    this._flattenOnKeys = memoize((tree, keys, dataKey) => {\n      this._depthMap = {};\n      return flattenOnKeys(tree, keys, this._depthMap, dataKey);\n    });\n    this._resetColumnManager = memoize((columns, fixed) => {\n      this.columnManager.reset(columns, fixed);\n    }, isObjectEqual);\n\n    this._scroll = { scrollLeft: 0, scrollTop: 0 };\n    this._scrollHeight = 0;\n    this._lastScannedRowIndex = -1;\n    this._hasDataChangedSinceEndReached = true;\n\n    this._data = props.data;\n    this._depthMap = {};\n\n    this._horizontalScrollbarSize = 0;\n    this._verticalScrollbarSize = 0;\n    this._scrollbarPresenceChanged = false;\n  }\n\n  /**\n   * Get the DOM node of the table\n   */\n  getDOMNode() {\n    return this.tableNode;\n  }\n\n  /**\n   * Get the column manager\n   */\n  getColumnManager() {\n    return this.columnManager;\n  }\n\n  /**\n   * Get internal `expandedRowKeys` state\n   */\n  getExpandedRowKeys() {\n    const { expandedRowKeys } = this.props;\n    return expandedRowKeys !== undefined ? expandedRowKeys || EMPTY_ARRAY : this.state.expandedRowKeys;\n  }\n\n  /**\n   * Get the expanded state, fallback to normal state if not expandable.\n   */\n  getExpandedState() {\n    return {\n      expandedData: this._data,\n      expandedRowKeys: this.getExpandedRowKeys(),\n      expandedDepthMap: this._depthMap,\n    };\n  }\n\n  /**\n   * Get the total height of all rows, including expanded rows.\n   */\n  getTotalRowsHeight() {\n    return this._data.length * this.props.rowHeight;\n  }\n\n  /**\n   * Get the total width of all columns.\n   */\n  getTotalColumnsWidth() {\n    return this.columnManager.getColumnsWidth();\n  }\n\n  /**\n   * Forcefully re-render the inner Grid component.\n   *\n   * Calling `forceUpdate` on `Table` may not re-render the inner Grid since it uses `shallowCompare` as a performance optimization.\n   * Use this method if you want to manually trigger a re-render.\n   * This may be appropriate if the underlying row data has changed but the row sizes themselves have not.\n   */\n  forceUpdateTable() {\n    this.table && this.table.forceUpdateTable();\n    this.leftTable && this.leftTable.forceUpdateTable();\n    this.rightTable && this.rightTable.forceUpdateTable();\n  }\n\n  /**\n   * Scroll to the specified offset.\n   * Useful for animating position changes.\n   *\n   * @param {object} offset\n   */\n  scrollToPosition(offset) {\n    this._scroll = offset;\n\n    this.table && this.table.scrollToPosition(offset);\n    this.leftTable && this.leftTable.scrollToTop(offset.scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(offset.scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset vertically.\n   *\n   * @param {number} scrollTop\n   */\n  scrollToTop(scrollTop) {\n    this._scroll.scrollTop = scrollTop;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n    this.leftTable && this.leftTable.scrollToTop(scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset horizontally.\n   *\n   * @param {number} scrollLeft\n   */\n  scrollToLeft(scrollLeft) {\n    this._scroll.scrollLeft = scrollLeft;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n  }\n\n  /**\n   * Scroll to the specified row.\n   * By default, the table will scroll as little as possible to ensure the row is visible.\n   * You can control the alignment of the row though by specifying an align property. Acceptable values are:\n   *\n   * - `auto` (default) - Scroll as little as possible to ensure the row is visible.\n   * - `smart` - Same as `auto` if it is less than one viewport away, or it's the same as`center`.\n   * - `center` - Center align the row within the table.\n   * - `end` - Align the row to the bottom side of the table.\n   * - `start` - Align the row to the top side of the table.\n\n   * @param {number} rowIndex\n   * @param {string} align\n   */\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.table && this.table.scrollToRow(rowIndex, align);\n    this.leftTable && this.leftTable.scrollToRow(rowIndex, align);\n    this.rightTable && this.rightTable.scrollToRow(rowIndex, align);\n  }\n\n  /**\n   * Set `expandedRowKeys` manually.\n   * This method is available only if `expandedRowKeys` is uncontrolled.\n   *\n   * @param {array} expandedRowKeys\n   */\n  setExpandedRowKeys(expandedRowKeys) {\n    // if `expandedRowKeys` is controlled\n    if (this.props.expandedRowKeys !== undefined) return;\n\n    this.setState({\n      expandedRowKeys: cloneArray(expandedRowKeys),\n    });\n  }\n\n  renderExpandIcon({ rowData, rowIndex, depth, onExpand }) {\n    const { rowKey, expandColumnKey, expandIconProps } = this.props;\n    if (!expandColumnKey) return null;\n\n    const expandable = rowIndex >= 0 && hasChildren(rowData);\n    const expanded = rowIndex >= 0 && this.getExpandedRowKeys().indexOf(rowData[rowKey]) >= 0;\n    const extraProps = callOrReturn(expandIconProps, { rowData, rowIndex, depth, expandable, expanded });\n    const ExpandIcon = this._getComponent('ExpandIcon');\n\n    return <ExpandIcon depth={depth} expandable={expandable} expanded={expanded} {...extraProps} onExpand={onExpand} />;\n  }\n\n  renderRow({ isScrolling, columns, rowData, rowIndex, style }) {\n    const { rowClassName, rowRenderer, rowEventHandlers, expandColumnKey } = this.props;\n\n    const rowClass = callOrReturn(rowClassName, { columns, rowData, rowIndex });\n    const extraProps = callOrReturn(this.props.rowProps, { columns, rowData, rowIndex });\n    const rowKey = rowData[this.props.rowKey];\n    const depth = this._depthMap[rowKey] || 0;\n\n    const className = cn(this._prefixClass('row'), rowClass, {\n      [this._prefixClass(`row--depth-${depth}`)]: !!expandColumnKey && rowIndex >= 0,\n      [this._prefixClass('row--expanded')]: !!expandColumnKey && this.getExpandedRowKeys().indexOf(rowKey) >= 0,\n      [this._prefixClass('row--hovered')]: !isScrolling && rowKey === this.state.hoveredRowKey,\n      [this._prefixClass('row--frozen')]: depth === 0 && rowIndex < 0,\n      [this._prefixClass('row--customized')]: rowRenderer,\n    });\n\n    const rowProps = {\n      ...extraProps,\n      role: 'row',\n      key: `row-${rowKey}`,\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      rowKey,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      rowRenderer,\n      cellRenderer: this.renderRowCell,\n      expandIconRenderer: this.renderExpandIcon,\n      onRowExpand: this._handleRowExpand,\n      // for fixed table, we need to sync the hover state across the inner tables\n      onRowHover: this.columnManager.hasFrozenColumns() ? this._handleRowHover : null,\n    };\n\n    return <TableRow {...rowProps} />;\n  }\n\n  renderRowCell({ isScrolling, columns, column, columnIndex, rowData, rowIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`row-${rowData[this.props.rowKey]}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('row-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { className, dataKey, dataGetter, cellRenderer } = column;\n    const TableCell = this._getComponent('TableCell');\n\n    const cellData = dataGetter\n      ? dataGetter({ columns, column, columnIndex, rowData, rowIndex })\n      : getValue(rowData, dataKey);\n    const cellProps = { isScrolling, cellData, columns, column, columnIndex, rowData, rowIndex, container: this };\n    const cell = renderElement(cellRenderer || <TableCell className={this._prefixClass('row-cell-text')} />, cellProps);\n\n    const cellCls = callOrReturn(className, { cellData, columns, column, columnIndex, rowData, rowIndex });\n    const cls = cn(this._prefixClass('row-cell'), cellCls, {\n      [this._prefixClass('row-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('row-cell--align-right')]: column.align === Alignment.RIGHT,\n    });\n\n    const extraProps = callOrReturn(this.props.cellProps, { columns, column, columnIndex, rowData, rowIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`row-${rowData[this.props.rowKey]}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n      >\n        {expandIcon}\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderHeader({ columns, headerIndex, style }) {\n    const { headerClassName, headerRenderer } = this.props;\n\n    const headerClass = callOrReturn(headerClassName, { columns, headerIndex });\n    const extraProps = callOrReturn(this.props.headerProps, { columns, headerIndex });\n\n    const className = cn(this._prefixClass('header-row'), headerClass, {\n      [this._prefixClass('header-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('header-row--customized')]: headerRenderer,\n    });\n\n    const headerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `header-${headerIndex}`,\n      className,\n      style,\n      columns,\n      headerIndex,\n      headerRenderer,\n      cellRenderer: this.renderHeaderCell,\n      expandColumnKey: this.props.expandColumnKey,\n      expandIcon: this._getComponent('ExpandIcon'),\n    };\n\n    return <TableHeaderRow {...headerProps} />;\n  }\n\n  renderFooter({ columns, footerIndex, style }) {\n    const { footerClassName, footerRenderer } = this.props;\n\n    const footerClass = callOrReturn(footerClassName, { columns, footerIndex });\n    const extraProps = callOrReturn(this.props.footerProps, { columns, footerIndex });\n\n    const className = cn(this._prefixClass('footer-row'), footerClass, {\n      [this._prefixClass('footer-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('footer-row--customized')]: footerRenderer,\n    });\n\n    const footerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `footer-${footerIndex}`,\n      className,\n      style,\n      columns,\n      footerIndex,\n      footerRenderer,\n      cellRenderer: this.renderFooterCell,\n      expandColumnKey: this.props.expandColumnKey\n    };\n\n    return <TableFooterRow {...footerProps} />;\n  }\n\n  renderHeaderCell({ columns, column, columnIndex, headerIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`header-${headerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('header-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { headerClassName, headerRenderer } = column;\n    const { sortBy, sortState, headerCellProps } = this.props;\n    const TableHeaderCell = this._getComponent('TableHeaderCell');\n    const SortIndicator = this._getComponent('SortIndicator');\n\n    const cellProps = { columns, column, columnIndex, headerIndex, container: this };\n    const cell = renderElement(\n      headerRenderer || <TableHeaderCell className={this._prefixClass('header-cell-text')} />,\n      cellProps\n    );\n\n    let sorting, sortOrder;\n\n    if (sortState) {\n      const order = sortState[column.key];\n      sorting = order === SortOrder.ASC || order === SortOrder.DESC;\n      sortOrder = sorting ? order : SortOrder.ASC;\n    } else {\n      sorting = column.key === sortBy.key;\n      sortOrder = sorting ? sortBy.order : SortOrder.ASC;\n    }\n\n    const cellCls = callOrReturn(headerClassName, { columns, column, columnIndex, headerIndex });\n    const cls = cn(this._prefixClass('header-cell'), cellCls, {\n      [this._prefixClass('header-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('header-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('header-cell--sortable')]: column.sortable,\n      [this._prefixClass('header-cell--sorting')]: sorting,\n      [this._prefixClass('header-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(headerCellProps, { columns, column, columnIndex, headerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`header-${headerIndex}-cell-${column.key}`}\n        onClick={column.sortable ? this._handleColumnSort : null}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {expandIcon}\n        {cell}\n        {column.sortable && (\n          <SortIndicator\n            sortOrder={sortOrder}\n            className={cn(this._prefixClass('sort-indicator'), {\n              [this._prefixClass('sort-indicator--descending')]: sortOrder === SortOrder.DESC,\n            })}\n          />\n        )}\n        {column.resizable && (\n          <ColumnResizer\n            className={this._prefixClass('column-resizer')}\n            column={column}\n            onResizeStart={this._handleColumnResizeStart}\n            onResizeStop={this._handleColumnResizeStop}\n            onResize={this._handleColumnResize}\n          />\n        )}\n      </Tag>\n    );\n  }\n\n  renderFooterCell({ columns, column, columnIndex, footerIndex }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`footer-${footerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('footer-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { footerClassName, footerRenderer } = column;\n    const { footerCellProps } = this.props;\n    const TableFooterCell = this._getComponent('TableFooterCell');\n\n    const cellProps = { columns, column, columnIndex, footerIndex, container: this };\n    const cell = renderElement(\n      footerRenderer || <TableFooterCell className={this._prefixClass('footer-cell-text')} />,\n      cellProps\n    );\n\n    const cellCls = callOrReturn(footerClassName, { columns, column, columnIndex, footerIndex });\n    const cls = cn(this._prefixClass('footer-cell'), cellCls, {\n      [this._prefixClass('footer-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('footer-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('footer-cell--sortable')]: column.sortable,\n      [this._prefixClass('footer-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(footerCellProps, { columns, column, columnIndex, footerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`footer-${footerIndex}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderMainTable() {\n    const { width, headerHeight, rowHeight, fixed, ...rest } = this.props;\n    const height = this._getTableHeight();\n\n    let tableWidth = width - this._verticalScrollbarSize;\n    if (fixed) {\n      const columnsWidth = this.columnManager.getColumnsWidth();\n      // make sure `scrollLeft` is always integer to fix a sync bug when scrolling to end horizontally\n      tableWidth = Math.max(Math.round(columnsWidth), tableWidth);\n    }\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        className={this._prefixClass('table-main')}\n        ref={this._setMainTableRef}\n        data={this._data}\n        columns={this.columnManager.getMainColumns()}\n        width={width}\n        height={height}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={tableWidth + (fixed ? this._verticalScrollbarSize : 0)}\n        bodyWidth={tableWidth}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleScroll}\n        onRowsRendered={this._handleRowsRendered}\n      />\n    );\n  }\n\n  renderLeftTable() {\n    if (!this.columnManager.hasLeftFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const offset = this._verticalScrollbarSize || 20;\n    const columnsWidth = this.columnManager.getLeftFrozenColumnsWidth();\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-left')}\n        ref={this._setLeftTableRef}\n        data={this._data}\n        columns={this.columnManager.getLeftFrozenColumns()}\n        width={columnsWidth + offset}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + offset}\n        bodyWidth={columnsWidth + offset}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderRightTable() {\n    if (!this.columnManager.hasRightFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const columnsWidth = this.columnManager.getRightFrozenColumnsWidth();\n    const scrollbarWidth = this._verticalScrollbarSize;\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth + scrollbarWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-right')}\n        ref={this._setRightTableRef}\n        data={this._data}\n        columns={this.columnManager.getRightFrozenColumns()}\n        width={columnsWidth + scrollbarWidth}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + scrollbarWidth}\n        bodyWidth={columnsWidth}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.renderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderResizingLine() {\n    const { width, fixed } = this.props;\n    const { resizingKey } = this.state;\n    if (!fixed || !resizingKey) return null;\n\n    const columns = this.columnManager.getMainColumns();\n    const idx = columns.findIndex(column => column.key === resizingKey);\n    const column = columns[idx];\n    const { width: columnWidth, frozen } = column;\n    const leftWidth = this.columnManager.recomputeColumnsWidth(columns.slice(0, idx));\n\n    let left = leftWidth + columnWidth;\n    if (!frozen) {\n      left -= this._scroll.scrollLeft;\n    } else if (frozen === FrozenDirection.RIGHT) {\n      const rightWidth = this.columnManager.recomputeColumnsWidth(columns.slice(idx + 1));\n      if (rightWidth + columnWidth > width - this._verticalScrollbarSize) {\n        left = columnWidth;\n      } else {\n        left = width - this._verticalScrollbarSize - rightWidth;\n      }\n    }\n    const style = {\n      left,\n      height: this._getTableHeight() - this._horizontalScrollbarSize,\n    };\n    return <div className={this._prefixClass('resizing-line')} style={style} />;\n  }\n\n  // renderFooter() {\n  //   const { footerHeight, footerRenderer } = this.props;\n  //   if (footerHeight === 0) return null;\n  //   return (\n  //     <div className={this._prefixClass('footer')} style={{ height: footerHeight }}>\n  //       {renderElement(footerRenderer)}\n  //     </div>\n  //   );\n  // }\n\n  renderEmptyLayer() {\n    const { data, footerHeight, emptyRenderer } = this.props;\n\n    if (data && data.length) return null;\n    const headerHeight = this._getHeaderHeight();\n    return (\n      <div className={this._prefixClass('empty-layer')} style={{ top: headerHeight, bottom: footerHeight }}>\n        {renderElement(emptyRenderer)}\n      </div>\n    );\n  }\n\n  renderOverlay() {\n    const { overlayRenderer } = this.props;\n\n    return <div className={this._prefixClass('overlay')}>{!!overlayRenderer && renderElement(overlayRenderer)}</div>;\n  }\n\n  render() {\n    const {\n      columns,\n      children,\n      width,\n      fixed,\n      data,\n      frozenData,\n      expandColumnKey,\n      disabled,\n      className,\n      style,\n      footerHeight,\n      classPrefix,\n    } = this.props;\n\n    this._resetColumnManager(getColumns(columns, children), fixed);\n\n    if (expandColumnKey) {\n      this._data = this._flattenOnKeys(data, this.getExpandedRowKeys(), this.props.rowKey);\n    } else {\n      this._data = data;\n    }\n    // should be after `this._data` assigned\n    this._calcScrollbarSizes();\n\n    const containerStyle = {\n      ...style,\n      width,\n      height: this._getTableHeight() + footerHeight,\n      position: 'relative',\n    };\n    const cls = cn(classPrefix, className, {\n      [`${classPrefix}--fixed`]: fixed,\n      [`${classPrefix}--expandable`]: !!expandColumnKey,\n      [`${classPrefix}--empty`]: data.length === 0,\n      [`${classPrefix}--has-frozen-rows`]: frozenData.length > 0,\n      [`${classPrefix}--has-frozen-columns`]: this.columnManager.hasFrozenColumns(),\n      [`${classPrefix}--disabled`]: disabled,\n    });\n    return (\n      <div ref={this._setContainerRef} className={cls} style={containerStyle}>\n        {/* {this.renderFooter()} */}\n        {this.renderMainTable()}\n        {this.renderLeftTable()}\n        {this.renderRightTable()}\n        {this.renderResizingLine()}\n        {this.renderEmptyLayer()}\n        {this.renderOverlay()}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const scrollbarSize = this.props.getScrollbarSize();\n    if (scrollbarSize > 0) {\n      this.setState({ scrollbarSize });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { data, height, maxHeight } = this.props;\n    if (data !== prevProps.data) {\n      this._lastScannedRowIndex = -1;\n      this._hasDataChangedSinceEndReached = true;\n    }\n\n    if (maxHeight !== prevProps.maxHeight || height !== prevProps.height) {\n      this._maybeCallOnEndReached();\n    }\n    this._maybeScrollbarPresenceChange();\n  }\n\n  _prefixClass(className) {\n    return `${this.props.classPrefix}__${className}`;\n  }\n\n  _setContainerRef(ref) {\n    this.tableNode = ref;\n  }\n\n  _setMainTableRef(ref) {\n    this.table = ref;\n  }\n\n  _setLeftTableRef(ref) {\n    this.leftTable = ref;\n  }\n\n  _setRightTableRef(ref) {\n    this.rightTable = ref;\n  }\n\n  _getComponent(name) {\n    if (this.props.components && this.props.components[name]) return this.props.components[name];\n    return DEFAULT_COMPONENTS[name];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _getFrozenRowsHeight() {\n    const { frozenData, rowHeight } = this.props;\n    return frozenData.length * rowHeight;\n  }\n\n  _getTableHeight() {\n    const { height, maxHeight } = this.props;\n    let tableHeight = height;\n\n    if (maxHeight > 0) {\n      const frozenRowsHeight = this._getFrozenRowsHeight();\n      const totalRowsHeight = this.getTotalRowsHeight();\n      const headerHeight = this._getHeaderHeight();\n      const totalHeight = headerHeight + frozenRowsHeight + totalRowsHeight + this._horizontalScrollbarSize;\n      tableHeight = Math.min(totalHeight, maxHeight);\n    }\n\n    return tableHeight;\n  }\n\n  _getBodyHeight() {\n    return this._getTableHeight() - this._getHeaderHeight() - this._getFrozenRowsHeight();\n  }\n\n  _getFrozenContainerHeight() {\n    const { maxHeight } = this.props;\n\n    const tableHeight = this._getTableHeight() - (this._data.length > 0 ? this._horizontalScrollbarSize : 0);\n    // in auto height mode tableHeight = totalHeight\n    if (maxHeight > 0) return tableHeight;\n\n    const totalHeight = this.getTotalRowsHeight() + this._getHeaderHeight() + this._getFrozenRowsHeight();\n    return Math.min(tableHeight, totalHeight);\n  }\n\n  _calcScrollbarSizes() {\n    const { fixed, width } = this.props;\n    const { scrollbarSize } = this.state;\n\n    const totalRowsHeight = this.getTotalRowsHeight();\n    const totalColumnsWidth = this.getTotalColumnsWidth();\n\n    const prevHorizontalScrollbarSize = this._horizontalScrollbarSize;\n    const prevVerticalScrollbarSize = this._verticalScrollbarSize;\n\n    if (scrollbarSize === 0) {\n      this._horizontalScrollbarSize = 0;\n      this._verticalScrollbarSize = 0;\n    } else {\n      // we have to set `this._horizontalScrollbarSize` before calling `this._getBodyHeight`\n      if (!fixed || totalColumnsWidth <= width - scrollbarSize) {\n        this._horizontalScrollbarSize = 0;\n        this._verticalScrollbarSize = totalRowsHeight > this._getBodyHeight() ? scrollbarSize : 0;\n      } else {\n        if (totalColumnsWidth > width) {\n          this._horizontalScrollbarSize = scrollbarSize;\n          this._verticalScrollbarSize =\n            totalRowsHeight > this._getBodyHeight() - this._horizontalScrollbarSize ? scrollbarSize : 0;\n        } else {\n          this._horizontalScrollbarSize = 0;\n          this._verticalScrollbarSize = 0;\n          if (totalRowsHeight > this._getBodyHeight()) {\n            this._horizontalScrollbarSize = scrollbarSize;\n            this._verticalScrollbarSize = scrollbarSize;\n          }\n        }\n      }\n    }\n\n    if (\n      prevHorizontalScrollbarSize !== this._horizontalScrollbarSize ||\n      prevVerticalScrollbarSize !== this._verticalScrollbarSize\n    ) {\n      this._scrollbarPresenceChanged = true;\n    }\n  }\n\n  _maybeScrollbarPresenceChange() {\n    if (this._scrollbarPresenceChanged) {\n      const { onScrollbarPresenceChange } = this.props;\n      this._scrollbarPresenceChanged = false;\n\n      onScrollbarPresenceChange({\n        size: this.state.scrollbarSize,\n        horizontal: this._horizontalScrollbarSize > 0,\n        vertical: this._verticalScrollbarSize > 0,\n      });\n    }\n  }\n\n  _maybeCallOnEndReached() {\n    const { onEndReached, onEndReachedThreshold } = this.props;\n    const { scrollTop } = this._scroll;\n    const scrollHeight = this.getTotalRowsHeight();\n    const clientHeight = this._getBodyHeight();\n\n    if (!onEndReached || !clientHeight || !scrollHeight) return;\n    const distanceFromEnd = scrollHeight - scrollTop - clientHeight + this._horizontalScrollbarSize;\n    if (\n      this._lastScannedRowIndex >= 0 &&\n      distanceFromEnd <= onEndReachedThreshold &&\n      (this._hasDataChangedSinceEndReached || scrollHeight !== this._scrollHeight)\n    ) {\n      this._hasDataChangedSinceEndReached = false;\n      this._scrollHeight = scrollHeight;\n      onEndReached({ distanceFromEnd });\n    }\n  }\n\n  _handleScroll(args) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToPosition(args);\n    this.props.onScroll(args);\n\n    if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleVerticalScroll({ scrollTop }) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToTop(scrollTop);\n\n    if (scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleRowsRendered(args) {\n    this.props.onRowsRendered(args);\n\n    if (args.overscanStopIndex > this._lastScannedRowIndex) {\n      this._lastScannedRowIndex = args.overscanStopIndex;\n      this._maybeCallOnEndReached();\n    }\n  }\n\n  _handleRowHover({ hovered, rowKey }) {\n    this.setState({ hoveredRowKey: hovered ? rowKey : null });\n  }\n\n  _handleRowExpand({ expanded, rowData, rowIndex, rowKey }) {\n    const expandedRowKeys = cloneArray(this.getExpandedRowKeys());\n    if (expanded) {\n      if (!expandedRowKeys.indexOf(rowKey) >= 0) expandedRowKeys.push(rowKey);\n    } else {\n      const index = expandedRowKeys.indexOf(rowKey);\n      if (index > -1) {\n        expandedRowKeys.splice(index, 1);\n      }\n    }\n    // if `expandedRowKeys` is uncontrolled, update internal state\n    if (this.props.expandedRowKeys === undefined) {\n      this.setState({ expandedRowKeys });\n    }\n    this.props.onRowExpand({ expanded, rowData, rowIndex, rowKey });\n    this.props.onExpandedRowsChange(expandedRowKeys);\n  }\n\n  _handleColumnResize({ key }, width) {\n    this.columnManager.setColumnWidth(key, width);\n    this.setState({ resizingWidth: width });\n\n    const column = this.columnManager.getColumn(key);\n    this.props.onColumnResize({ column, width });\n  }\n\n  _handleColumnResizeStart({ key }) {\n    this.setState({ resizingKey: key });\n  }\n\n  _handleColumnResizeStop() {\n    const { resizingKey, resizingWidth } = this.state;\n    this.setState({ resizingKey: null, resizingWidth: 0 });\n\n    if (!resizingKey || !resizingWidth) return;\n\n    const column = this.columnManager.getColumn(resizingKey);\n    this.props.onColumnResizeEnd({ column, width: resizingWidth });\n  }\n\n  _handleColumnSort(event) {\n    const key = event.currentTarget.dataset.key;\n    const { sortBy, sortState, onColumnSort } = this.props;\n    let order = SortOrder.ASC;\n\n    if (sortState) {\n      order = sortState[key] === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    } else if (key === sortBy.key) {\n      order = sortBy.order === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    }\n\n    const column = this.columnManager.getColumn(key);\n    onColumnSort({ column, key, order });\n  }\n}\n\nBaseTable.Column = Column;\nBaseTable.PlaceholderKey = ColumnManager.PlaceholderKey;\n\nBaseTable.defaultProps = {\n  classPrefix: 'BaseTable',\n  rowKey: 'id',\n  data: [],\n  frozenData: [],\n  fixed: false,\n  headerHeight: 50,\n  rowHeight: 50,\n  footerHeight: 0,\n  defaultExpandedRowKeys: [],\n  sortBy: {},\n  useIsScrolling: false,\n  overscanRowCount: 1,\n  onEndReachedThreshold: 500,\n  getScrollbarSize: defaultGetScrollbarSize,\n\n  onScroll: noop,\n  onRowsRendered: noop,\n  onScrollbarPresenceChange: noop,\n  onRowExpand: noop,\n  onExpandedRowsChange: noop,\n  onColumnSort: noop,\n  onColumnResize: noop,\n  onColumnResizeEnd: noop,\n};\n\nBaseTable.propTypes = {\n  /**\n   * Prefix for table's inner className\n   */\n  classPrefix: PropTypes.string,\n  /**\n   * Class name for the table\n   */\n  className: PropTypes.string,\n  /**\n   * Custom style for the table\n   */\n  style: PropTypes.object,\n  /**\n   * A collection of Column\n   */\n  children: PropTypes.node,\n  /**\n   * Columns for the table\n   */\n  columns: PropTypes.arrayOf(PropTypes.shape(Column.propTypes)),\n  /**\n   * The data for the table\n   */\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * The data be frozen to top, `rowIndex` is negative and started from `-1`\n   */\n  frozenData: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * The key field of each data item\n   */\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  /**\n   * The width of the table\n   */\n  width: PropTypes.number.isRequired,\n  /**\n   * The height of the table, will be ignored if `maxHeight` is set\n   */\n  height: PropTypes.number,\n  /**\n   * The max height of the table, the table's height will auto change when data changes,\n   * will turns to vertical scroll if reaches the max height\n   */\n  maxHeight: PropTypes.number,\n  /**\n   * The height of each table row\n   */\n  rowHeight: PropTypes.number.isRequired,\n  /**\n   * The height of the table header, set to 0 to hide the header, could be an array to render multi headers.\n   */\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  /**\n   * The height of the table footer\n   */\n  footerHeight: PropTypes.number,\n  /**\n   * Whether the width of the columns are fixed or flexible\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Whether the table is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Custom renderer on top of the table component\n   */\n  overlayRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom renderer when the length of data is 0\n   */\n  emptyRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom footer renderer, available only if `footerHeight` is larger then 0\n   */\n  footerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom header renderer\n   * The renderer receives props `{ cells, columns, headerIndex }`\n   */\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom row renderer\n   * The renderer receives props `{ isScrolling, cells, columns, rowData, rowIndex, depth }`\n   */\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Class name for the table header, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, headerIndex }) => string`\n   */\n  headerClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Class name for the table row, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, rowData, rowIndex }) => string`\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Extra props applied to header element\n   * The handler is of the shape of `({ columns, headerIndex }) object`\n   */\n  headerProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to header cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, headerIndex }) => object`\n   */\n  headerCellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row element\n   * The handler is of the shape of `({ columns, rowData, rowIndex }) => object`\n   */\n  rowProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, rowData, rowIndex }) => object`\n   */\n  cellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to ExpandIcon component\n   * The handler is of the shape of `({ rowData, rowIndex, depth, expandable, expanded }) => object`\n   */\n  expandIconProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * The key for the expand column which render the expand icon if the data is a tree\n   */\n  expandColumnKey: PropTypes.string,\n  /**\n   * Default expanded row keys when initialize the table\n   */\n  defaultExpandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Controlled expanded row keys\n   */\n  expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * A callback function when expand or collapse a tree node\n   * The handler is of the shape of `({ expanded, rowData, rowIndex, rowKey }) => *`\n   */\n  onRowExpand: PropTypes.func,\n  /**\n   * A callback function when the expanded row keys changed\n   * The handler is of the shape of `(expandedRowKeys) => *`\n   */\n  onExpandedRowsChange: PropTypes.func,\n  /**\n   * The sort state for the table, will be ignored if `sortState` is set\n   */\n  sortBy: PropTypes.shape({\n    /**\n     * Sort key\n     */\n    key: PropTypes.string,\n    /**\n     * Sort order\n     */\n    order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n  }),\n  /**\n   * Multiple columns sort state for the table\n   *\n   * example:\n   * ```js\n   * {\n   *   'column-0': SortOrder.ASC,\n   *   'column-1': SortOrder.DESC,\n   * }\n   * ```\n   */\n  sortState: PropTypes.object,\n  /**\n   * A callback function for the header cell click event\n   * The handler is of the shape of `({ column, key, order }) => *`\n   */\n  onColumnSort: PropTypes.func,\n  /**\n   * A callback function when resizing the column width\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * A callback function when resizing the column width ends\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResizeEnd: PropTypes.func,\n  /**\n   * Adds an additional isScrolling parameter to the row renderer.\n   * This parameter can be used to show a placeholder row while scrolling.\n   */\n  useIsScrolling: PropTypes.bool,\n  /**\n   * Number of rows to render above/below the visible bounds of the list\n   */\n  overscanRowCount: PropTypes.number,\n  /**\n   * Custom scrollbar size measurement\n   */\n  getScrollbarSize: PropTypes.func,\n  /**\n   * A callback function when scrolling the table\n   * The handler is of the shape of `({ scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested }) => *`\n   *\n   * `scrollLeft` and `scrollTop` are numbers.\n   *\n   * `horizontalDirection` and `verticalDirection` are either `forward` or `backward`.\n   *\n   * `scrollUpdateWasRequested` is a boolean. This value is true if the scroll was caused by `scrollTo*`,\n   * and false if it was the result of a user interaction in the browser.\n   */\n  onScroll: PropTypes.func,\n  /**\n   * A callback function when scrolling the table within `onEndReachedThreshold` of the bottom\n   * The handler is of the shape of `({ distanceFromEnd }) => *`\n   */\n  onEndReached: PropTypes.func,\n  /**\n   * Threshold in pixels for calling `onEndReached`.\n   */\n  onEndReachedThreshold: PropTypes.number,\n  /**\n   * A callback function with information about the slice of rows that were just rendered\n   * The handler is of the shape of `({ overscanStartIndex, overscanStopIndex, startIndex， stopIndex }) => *`\n   */\n  onRowsRendered: PropTypes.func,\n  /**\n   * A callback function when the scrollbar presence state changed\n   * The handler is of the shape of `({ size, vertical, horizontal }) => *`\n   */\n  onScrollbarPresenceChange: PropTypes.func,\n  /**\n   * A object for the row event handlers\n   * Each of the keys is row event name, like `onClick`, `onDoubleClick` and etc.\n   * Each of the handlers is of the shape of `({ rowData, rowIndex, rowKey, event }) => object`\n   */\n  rowEventHandlers: PropTypes.object,\n  /**\n   * A object for the custom components, like `ExpandIcon` and `SortIndicator`\n   */\n  components: PropTypes.shape({\n    TableCell: PropTypes.func,\n    TableHeaderCell: PropTypes.func,\n    TableFooterCell: PropTypes.func,\n    ExpandIcon: PropTypes.func,\n    SortIndicator: PropTypes.func,\n  }),\n};\n\nexport default BaseTable;\n"],"file":"BaseTable.js"}