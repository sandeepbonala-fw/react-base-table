{"version":3,"sources":["../src/TableRow.js"],"names":["TableRow","props","_handleExpand","bind","isScrolling","className","style","columns","rowIndex","rowData","expandColumnKey","depth","rowEventHandlers","rowRenderer","cellRenderer","expandIconRenderer","Tag","tagName","rowKey","onRowHover","onRowExpand","rest","expandIcon","onExpand","cells","map","column","columnIndex","key","eventHandlers","_getEventHandlers","expanded","handlers","onRowClick","Object","keys","forEach","eventKey","callback","event","mouseEnterHandler","hovered","mouseLeaveHandler","mouseDownHandler","clicked","React","PureComponent","defaultProps","propTypes","PropTypes","bool","string","object","arrayOf","isRequired","number","oneOfType","func","element","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * Row component for BaseTable\n */\nclass TableRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._handleExpand = this._handleExpand.bind(this);\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      rowRenderer,\n      cellRenderer,\n      expandIconRenderer,\n      tagName: Tag,\n      // omit the following from rest\n      rowKey,\n      onRowHover,\n      onRowExpand,\n      ...rest\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const expandIcon = expandIconRenderer({ rowData, rowIndex, depth, onExpand: this._handleExpand });\n    let cells = columns.map((column, columnIndex) =>\n      cellRenderer({\n        isScrolling,\n        columns,\n        column,\n        columnIndex,\n        rowData,\n        rowIndex,\n        expandIcon: column.key === expandColumnKey && expandIcon,\n      })\n    );\n\n    if (rowRenderer) {\n      cells = renderElement(rowRenderer, { isScrolling, cells, columns, rowData, rowIndex, depth });\n    }\n\n    const eventHandlers = this._getEventHandlers(rowEventHandlers);\n\n    return (\n      <Tag {...rest} className={className} style={style} {...eventHandlers}>\n        {cells}\n      </Tag>\n    );\n  }\n\n  _handleExpand(expanded) {\n    const { onRowExpand, rowData, rowIndex, rowKey } = this.props;\n    onRowExpand && onRowExpand({ expanded, rowData, rowIndex, rowKey });\n  }\n\n  _getEventHandlers(handlers = {}) {\n    const { rowData, rowIndex, rowKey, onRowHover, onRowClick } = this.props;\n    const eventHandlers = {};\n    Object.keys(handlers).forEach(eventKey => {\n      const callback = handlers[eventKey];\n      if (typeof callback === 'function') {\n        eventHandlers[eventKey] = event => {\n          callback({ rowData, rowIndex, rowKey, event });\n        };\n      }\n    });\n\n    if (onRowHover) {\n      const mouseEnterHandler = eventHandlers['onMouseEnter'];\n      eventHandlers['onMouseEnter'] = event => {\n        onRowHover({\n          hovered: true,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseEnterHandler && mouseEnterHandler(event);\n      };\n\n      const mouseLeaveHandler = eventHandlers['onMouseLeave'];\n      eventHandlers['onMouseLeave'] = event => {\n        onRowHover({\n          hovered: false,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseLeaveHandler && mouseLeaveHandler(event);\n      };\n    }\n\n    if(onRowClick){\n      const mouseDownHandler = eventHandlers['onMouseDown'];\n      eventHandlers['onMouseDown'] = event => {\n        onRowClick({\n          clicked: true,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseDownHandler && mouseDownHandler(event);\n      };\n    }\n\n    return eventHandlers;\n  }\n}\n\nTableRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowData: PropTypes.object.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  expandColumnKey: PropTypes.string,\n  depth: PropTypes.number,\n  rowEventHandlers: PropTypes.object,\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  cellRenderer: PropTypes.func,\n  expandIconRenderer: PropTypes.func,\n  onRowHover: PropTypes.func,\n  onRowExpand: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableRow;\n"],"file":"TableRow.js"}