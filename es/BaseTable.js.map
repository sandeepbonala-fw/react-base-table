{"version":3,"sources":["../src/BaseTable.js"],"names":["React","PropTypes","cn","memoize","GridTable","TableHeaderRow","TableFooterRow","TableRow","TableHeaderCell","TableFooterCell","TableCell","Column","Alignment","FrozenDirection","SortOrder","ExpandIcon","SortIndicator","ColumnResizer","ColumnManager","renderElement","normalizeColumns","getScrollbarSize","defaultGetScrollbarSize","isObjectEqual","callOrReturn","hasChildren","flattenOnKeys","cloneArray","getValue","throttle","noop","getColumns","columns","children","getContainerStyle","width","maxWidth","height","overflow","DEFAULT_COMPONENTS","RESIZE_THROTTLE_WAIT","EMPTY_ARRAY","BaseTable","props","defaultExpandedRowKeys","state","scrollbarSize","hoveredRowKey","resizingKey","resizingWidth","expandedRowKeys","columnManager","fixed","_setContainerRef","bind","_setMainTableRef","_setLeftTableRef","_setRightTableRef","renderExpandIcon","renderRow","renderRowCell","renderHeader","renderFooter","renderHeaderCell","renderFooterCell","_handleScroll","_handleVerticalScroll","_handleRowsRendered","_handleRowHover","_handleRowExpand","_handleColumnResize","_handleColumnResizeStart","_handleColumnResizeStop","_handleColumnSort","_getLeftTableContainerStyle","_getRightTableContainerStyle","_flattenOnKeys","tree","keys","dataKey","_depthMap","_resetColumnManager","reset","_scroll","scrollLeft","scrollTop","_scrollHeight","_lastScannedRowIndex","_hasDataChangedSinceEndReached","_data","data","_horizontalScrollbarSize","_verticalScrollbarSize","_scrollbarPresenceChanged","getDOMNode","tableNode","getColumnManager","getExpandedRowKeys","undefined","getExpandedState","expandedData","expandedDepthMap","getTotalRowsHeight","length","rowHeight","getTotalColumnsWidth","getColumnsWidth","forceUpdateTable","table","leftTable","rightTable","scrollToPosition","offset","scrollToTop","scrollToLeft","scrollToRow","rowIndex","align","setExpandedRowKeys","setState","rowData","depth","onExpand","rowKey","expandColumnKey","expandIconProps","expandable","expanded","indexOf","extraProps","_getComponent","isScrolling","style","rowClassName","rowRenderer","rowEventHandlers","rowClass","rowProps","className","_prefixClass","role","key","cellRenderer","expandIconRenderer","onRowExpand","onRowHover","hasFrozenColumns","column","columnIndex","expandIcon","PlaceholderKey","getColumnStyle","dataGetter","cellData","cellProps","container","cell","cellCls","cls","CENTER","RIGHT","tagName","rest","Tag","headerIndex","headerClassName","headerRenderer","headerClass","headerProps","footerIndex","footerClassName","footerRenderer","footerClass","propsfooterrProps","footerProps","sortBy","sortState","headerCellProps","sorting","sortOrder","order","ASC","DESC","sortable","resizable","footerCellProps","renderMainTable","headerHeight","_getTableHeight","tableWidth","columnsWidth","Math","max","round","getMainColumns","renderLeftTable","hasLeftFrozenColumns","containerHeight","_getFrozenContainerHeight","getLeftFrozenColumnsWidth","getLeftFrozenColumns","renderRightTable","hasRightFrozenColumns","getRightFrozenColumnsWidth","scrollbarWidth","getRightFrozenColumns","remderFooter","renderResizingLine","idx","findIndex","columnWidth","frozen","leftWidth","recomputeColumnsWidth","slice","left","rightWidth","renderEmptyLayer","footerHeight","emptyRenderer","_getHeaderHeight","top","bottom","renderOverlay","overlayRenderer","render","frozenData","disabled","classPrefix","_calcScrollbarSizes","containerStyle","position","componentDidMount","componentDidUpdate","prevProps","prevState","maxHeight","_maybeCallOnEndReached","_maybeScrollbarPresenceChange","ref","name","components","Array","isArray","reduce","sum","_getFrozenRowsHeight","tableHeight","frozenRowsHeight","totalRowsHeight","totalHeight","min","_getBodyHeight","totalColumnsWidth","prevHorizontalScrollbarSize","prevVerticalScrollbarSize","onScrollbarPresenceChange","size","horizontal","vertical","onEndReached","onEndReachedThreshold","scrollHeight","clientHeight","distanceFromEnd","args","lastScrollTop","onScroll","onRowsRendered","overscanStopIndex","hovered","push","index","splice","onExpandedRowsChange","setColumnWidth","getColumn","onColumnResize","onColumnResizeEnd","event","currentTarget","dataset","onColumnSort","PureComponent","defaultProps","useIsScrolling","overscanRowCount","propTypes","string","object","node","arrayOf","shape","isRequired","oneOfType","number","bool","func","element","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport memoize from 'memoize-one';\n\nimport GridTable from './GridTable';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableFooterRow from './TableFooterRow';\nimport TableRow from './TableRow';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableFooterCell from './TableFooterCell';\nimport TableCell from './TableCell';\nimport Column, { Alignment, FrozenDirection } from './Column';\nimport SortOrder from './SortOrder';\nimport ExpandIcon from './ExpandIcon';\nimport SortIndicator from './SortIndicator';\nimport ColumnResizer from './ColumnResizer';\nimport ColumnManager from './ColumnManager';\n\nimport {\n  renderElement,\n  normalizeColumns,\n  getScrollbarSize as defaultGetScrollbarSize,\n  isObjectEqual,\n  callOrReturn,\n  hasChildren,\n  flattenOnKeys,\n  cloneArray,\n  getValue,\n  throttle,\n  noop,\n} from './utils';\n\nconst getColumns = memoize((columns, children) => columns || normalizeColumns(children));\n\nconst getContainerStyle = (width, maxWidth, height) => ({\n  width,\n  maxWidth,\n  height,\n  overflow: 'hidden',\n});\n\nconst DEFAULT_COMPONENTS = {\n  TableCell,\n  TableHeaderCell,\n  TableFooterCell,\n  ExpandIcon,\n  SortIndicator,\n};\n\nconst RESIZE_THROTTLE_WAIT = 50;\n\n// used for memoization\nconst EMPTY_ARRAY = [];\n\n/**\n * React table component\n */\nclass BaseTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { columns, children, defaultExpandedRowKeys } = props;\n    this.state = {\n      scrollbarSize: 0,\n      hoveredRowKey: null,\n      resizingKey: null,\n      resizingWidth: 0,\n      expandedRowKeys: cloneArray(defaultExpandedRowKeys),\n    };\n    this.columnManager = new ColumnManager(getColumns(columns, children), props.fixed);\n\n    this._setContainerRef = this._setContainerRef.bind(this);\n    this._setMainTableRef = this._setMainTableRef.bind(this);\n    this._setLeftTableRef = this._setLeftTableRef.bind(this);\n    this._setRightTableRef = this._setRightTableRef.bind(this);\n\n    this.renderExpandIcon = this.renderExpandIcon.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n    this.renderRowCell = this.renderRowCell.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderFooter = this.renderFooter.bind(this);\n    this.renderHeaderCell = this.renderHeaderCell.bind(this);\n    this.renderFooterCell = this.renderFooterCell.bind(this);\n\n    this._handleScroll = this._handleScroll.bind(this);\n    this._handleVerticalScroll = this._handleVerticalScroll.bind(this);\n    this._handleRowsRendered = this._handleRowsRendered.bind(this);\n    this._handleRowHover = this._handleRowHover.bind(this);\n    this._handleRowExpand = this._handleRowExpand.bind(this);\n    this._handleColumnResize = throttle(this._handleColumnResize.bind(this), RESIZE_THROTTLE_WAIT);\n    this._handleColumnResizeStart = this._handleColumnResizeStart.bind(this);\n    this._handleColumnResizeStop = this._handleColumnResizeStop.bind(this);\n    this._handleColumnSort = this._handleColumnSort.bind(this);\n\n    this._getLeftTableContainerStyle = memoize(getContainerStyle);\n    this._getRightTableContainerStyle = memoize(getContainerStyle);\n    this._flattenOnKeys = memoize((tree, keys, dataKey) => {\n      this._depthMap = {};\n      return flattenOnKeys(tree, keys, this._depthMap, dataKey);\n    });\n    this._resetColumnManager = memoize((columns, fixed) => {\n      this.columnManager.reset(columns, fixed);\n    }, isObjectEqual);\n\n    this._scroll = { scrollLeft: 0, scrollTop: 0 };\n    this._scrollHeight = 0;\n    this._lastScannedRowIndex = -1;\n    this._hasDataChangedSinceEndReached = true;\n\n    this._data = props.data;\n    this._depthMap = {};\n\n    this._horizontalScrollbarSize = 0;\n    this._verticalScrollbarSize = 0;\n    this._scrollbarPresenceChanged = false;\n  }\n\n  /**\n   * Get the DOM node of the table\n   */\n  getDOMNode() {\n    return this.tableNode;\n  }\n\n  /**\n   * Get the column manager\n   */\n  getColumnManager() {\n    return this.columnManager;\n  }\n\n  /**\n   * Get internal `expandedRowKeys` state\n   */\n  getExpandedRowKeys() {\n    const { expandedRowKeys } = this.props;\n    return expandedRowKeys !== undefined ? expandedRowKeys || EMPTY_ARRAY : this.state.expandedRowKeys;\n  }\n\n  /**\n   * Get the expanded state, fallback to normal state if not expandable.\n   */\n  getExpandedState() {\n    return {\n      expandedData: this._data,\n      expandedRowKeys: this.getExpandedRowKeys(),\n      expandedDepthMap: this._depthMap,\n    };\n  }\n\n  /**\n   * Get the total height of all rows, including expanded rows.\n   */\n  getTotalRowsHeight() {\n    return this._data.length * this.props.rowHeight;\n  }\n\n  /**\n   * Get the total width of all columns.\n   */\n  getTotalColumnsWidth() {\n    return this.columnManager.getColumnsWidth();\n  }\n\n  /**\n   * Forcefully re-render the inner Grid component.\n   *\n   * Calling `forceUpdate` on `Table` may not re-render the inner Grid since it uses `shallowCompare` as a performance optimization.\n   * Use this method if you want to manually trigger a re-render.\n   * This may be appropriate if the underlying row data has changed but the row sizes themselves have not.\n   */\n  forceUpdateTable() {\n    this.table && this.table.forceUpdateTable();\n    this.leftTable && this.leftTable.forceUpdateTable();\n    this.rightTable && this.rightTable.forceUpdateTable();\n  }\n\n  /**\n   * Scroll to the specified offset.\n   * Useful for animating position changes.\n   *\n   * @param {object} offset\n   */\n  scrollToPosition(offset) {\n    this._scroll = offset;\n\n    this.table && this.table.scrollToPosition(offset);\n    this.leftTable && this.leftTable.scrollToTop(offset.scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(offset.scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset vertically.\n   *\n   * @param {number} scrollTop\n   */\n  scrollToTop(scrollTop) {\n    this._scroll.scrollTop = scrollTop;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n    this.leftTable && this.leftTable.scrollToTop(scrollTop);\n    this.rightTable && this.rightTable.scrollToTop(scrollTop);\n  }\n\n  /**\n   * Scroll to the specified offset horizontally.\n   *\n   * @param {number} scrollLeft\n   */\n  scrollToLeft(scrollLeft) {\n    this._scroll.scrollLeft = scrollLeft;\n\n    this.table && this.table.scrollToPosition(this._scroll);\n  }\n\n  /**\n   * Scroll to the specified row.\n   * By default, the table will scroll as little as possible to ensure the row is visible.\n   * You can control the alignment of the row though by specifying an align property. Acceptable values are:\n   *\n   * - `auto` (default) - Scroll as little as possible to ensure the row is visible.\n   * - `smart` - Same as `auto` if it is less than one viewport away, or it's the same as`center`.\n   * - `center` - Center align the row within the table.\n   * - `end` - Align the row to the bottom side of the table.\n   * - `start` - Align the row to the top side of the table.\n\n   * @param {number} rowIndex\n   * @param {string} align\n   */\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.table && this.table.scrollToRow(rowIndex, align);\n    this.leftTable && this.leftTable.scrollToRow(rowIndex, align);\n    this.rightTable && this.rightTable.scrollToRow(rowIndex, align);\n  }\n\n  /**\n   * Set `expandedRowKeys` manually.\n   * This method is available only if `expandedRowKeys` is uncontrolled.\n   *\n   * @param {array} expandedRowKeys\n   */\n  setExpandedRowKeys(expandedRowKeys) {\n    // if `expandedRowKeys` is controlled\n    if (this.props.expandedRowKeys !== undefined) return;\n\n    this.setState({\n      expandedRowKeys: cloneArray(expandedRowKeys),\n    });\n  }\n\n  renderExpandIcon({ rowData, rowIndex, depth, onExpand }) {\n    const { rowKey, expandColumnKey, expandIconProps } = this.props;\n    if (!expandColumnKey) return null;\n\n    const expandable = rowIndex >= 0 && hasChildren(rowData);\n    const expanded = rowIndex >= 0 && this.getExpandedRowKeys().indexOf(rowData[rowKey]) >= 0;\n    const extraProps = callOrReturn(expandIconProps, { rowData, rowIndex, depth, expandable, expanded });\n    const ExpandIcon = this._getComponent('ExpandIcon');\n\n    return <ExpandIcon depth={depth} expandable={expandable} expanded={expanded} {...extraProps} onExpand={onExpand} />;\n  }\n\n  renderRow({ isScrolling, columns, rowData, rowIndex, style }) {\n    const { rowClassName, rowRenderer, rowEventHandlers, expandColumnKey } = this.props;\n\n    const rowClass = callOrReturn(rowClassName, { columns, rowData, rowIndex });\n    const extraProps = callOrReturn(this.props.rowProps, { columns, rowData, rowIndex });\n    const rowKey = rowData[this.props.rowKey];\n    const depth = this._depthMap[rowKey] || 0;\n\n    const className = cn(this._prefixClass('row'), rowClass, {\n      [this._prefixClass(`row--depth-${depth}`)]: !!expandColumnKey && rowIndex >= 0,\n      [this._prefixClass('row--expanded')]: !!expandColumnKey && this.getExpandedRowKeys().indexOf(rowKey) >= 0,\n      [this._prefixClass('row--hovered')]: !isScrolling && rowKey === this.state.hoveredRowKey,\n      [this._prefixClass('row--frozen')]: depth === 0 && rowIndex < 0,\n      [this._prefixClass('row--customized')]: rowRenderer,\n    });\n\n    const rowProps = {\n      ...extraProps,\n      role: 'row',\n      key: `row-${rowKey}`,\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      rowKey,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      rowRenderer,\n      cellRenderer: this.renderRowCell,\n      expandIconRenderer: this.renderExpandIcon,\n      onRowExpand: this._handleRowExpand,\n      // for fixed table, we need to sync the hover state across the inner tables\n      onRowHover: this.columnManager.hasFrozenColumns() ? this._handleRowHover : null,\n    };\n\n    return <TableRow {...rowProps} />;\n  }\n\n  renderRowCell({ isScrolling, columns, column, columnIndex, rowData, rowIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`row-${rowData[this.props.rowKey]}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('row-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { className, dataKey, dataGetter, cellRenderer } = column;\n    const TableCell = this._getComponent('TableCell');\n\n    const cellData = dataGetter\n      ? dataGetter({ columns, column, columnIndex, rowData, rowIndex })\n      : getValue(rowData, dataKey);\n    const cellProps = { isScrolling, cellData, columns, column, columnIndex, rowData, rowIndex, container: this };\n    const cell = renderElement(cellRenderer || <TableCell className={this._prefixClass('row-cell-text')} />, cellProps);\n\n    const cellCls = callOrReturn(className, { cellData, columns, column, columnIndex, rowData, rowIndex });\n    const cls = cn(this._prefixClass('row-cell'), cellCls, {\n      [this._prefixClass('row-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('row-cell--align-right')]: column.align === Alignment.RIGHT,\n    });\n\n    const extraProps = callOrReturn(this.props.cellProps, { columns, column, columnIndex, rowData, rowIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`row-${rowData[this.props.rowKey]}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n      >\n        {expandIcon}\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderHeader({ columns, headerIndex, style }) {\n    const { headerClassName, headerRenderer } = this.props;\n\n    const headerClass = callOrReturn(headerClassName, { columns, headerIndex });\n    const extraProps = callOrReturn(this.props.headerProps, { columns, headerIndex });\n\n    const className = cn(this._prefixClass('header-row'), headerClass, {\n      [this._prefixClass('header-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('header-row--customized')]: headerRenderer,\n    });\n\n    const headerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `header-${headerIndex}`,\n      className,\n      style,\n      columns,\n      headerIndex,\n      headerRenderer,\n      cellRenderer: this.renderHeaderCell,\n      expandColumnKey: this.props.expandColumnKey,\n      expandIcon: this._getComponent('ExpandIcon'),\n    };\n\n    return <TableHeaderRow {...headerProps} />;\n  }\n\n  renderFooter({ columns, footerIndex, style }) {\n    const { footerClassName, footerRenderer } = this.props;\n\n    const footerClass = callOrReturn(footerClassName, { columns, footerIndex });\n    const extraProps = callOrReturn(this.propsfooterrProps, { columns, footerIndex });\n\n    const className = cn(this._prefixClass('footer-row'), footerClass, {\n      [this._prefixClass('footer-row--resizing')]: !!this.state.resizingKey,\n      [this._prefixClass('footer-row--customized')]: footerRenderer,\n    });\n\n    const footerProps = {\n      ...extraProps,\n      role: 'row',\n      key: `footer-${footerIndex}`,\n      className,\n      style,\n      columns,\n      footerIndex,\n      footerRenderer,\n      cellRenderer: this.renderFooterCell,\n      expandColumnKey: this.props.expandColumnKey\n    };\n\n    return <TableFooterRow {...footerProps} />;\n  }\n\n  renderHeaderCell({ columns, column, columnIndex, headerIndex, expandIcon }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`header-${headerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('header-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { headerClassName, headerRenderer } = column;\n    const { sortBy, sortState, headerCellProps } = this.props;\n    const TableHeaderCell = this._getComponent('TableHeaderCell');\n    const SortIndicator = this._getComponent('SortIndicator');\n\n    const cellProps = { columns, column, columnIndex, headerIndex, container: this };\n    const cell = renderElement(\n      headerRenderer || <TableHeaderCell className={this._prefixClass('header-cell-text')} />,\n      cellProps\n    );\n\n    let sorting, sortOrder;\n\n    if (sortState) {\n      const order = sortState[column.key];\n      sorting = order === SortOrder.ASC || order === SortOrder.DESC;\n      sortOrder = sorting ? order : SortOrder.ASC;\n    } else {\n      sorting = column.key === sortBy.key;\n      sortOrder = sorting ? sortBy.order : SortOrder.ASC;\n    }\n\n    const cellCls = callOrReturn(headerClassName, { columns, column, columnIndex, headerIndex });\n    const cls = cn(this._prefixClass('header-cell'), cellCls, {\n      [this._prefixClass('header-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('header-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('header-cell--sortable')]: column.sortable,\n      [this._prefixClass('header-cell--sorting')]: sorting,\n      [this._prefixClass('header-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(headerCellProps, { columns, column, columnIndex, headerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`header-${headerIndex}-cell-${column.key}`}\n        onClick={column.sortable ? this._handleColumnSort : null}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {expandIcon}\n        {cell}\n        {column.sortable && (\n          <SortIndicator\n            sortOrder={sortOrder}\n            className={cn(this._prefixClass('sort-indicator'), {\n              [this._prefixClass('sort-indicator--descending')]: sortOrder === SortOrder.DESC,\n            })}\n          />\n        )}\n        {column.resizable && (\n          <ColumnResizer\n            className={this._prefixClass('column-resizer')}\n            column={column}\n            onResizeStart={this._handleColumnResizeStart}\n            onResizeStop={this._handleColumnResizeStop}\n            onResize={this._handleColumnResize}\n          />\n        )}\n      </Tag>\n    );\n  }\n\n  renderFooterCell({ columns, column, columnIndex, footerIndex }) {\n    if (column[ColumnManager.PlaceholderKey]) {\n      return (\n        <div\n          key={`footer-${footerIndex}-cell-${column.key}-placeholder`}\n          className={this._prefixClass('footer-cell-placeholder')}\n          style={this.columnManager.getColumnStyle(column.key)}\n        />\n      );\n    }\n\n    const { footerClassName, footerRenderer } = column;\n    const { footerCellProps } = this.props;\n    const TableFooterCell = this._getComponent('TableFooterCell');\n\n    const cellProps = { columns, column, columnIndex, footerIndex, container: this };\n    const cell = renderElement(\n      footerRenderer || <TableFooterCell className={this._prefixClass('footer-cell-text')} />,\n      cellProps\n    );\n\n    const cellCls = callOrReturn(footerClassName, { columns, column, columnIndex, footerIndex });\n    const cls = cn(this._prefixClass('footer-cell'), cellCls, {\n      [this._prefixClass('footer-cell--align-center')]: column.align === Alignment.CENTER,\n      [this._prefixClass('footer-cell--align-right')]: column.align === Alignment.RIGHT,\n      [this._prefixClass('footer-cell--sortable')]: column.sortable,\n      [this._prefixClass('footer-cell--resizing')]: column.key === this.state.resizingKey,\n    });\n    const extraProps = callOrReturn(footerCellProps, { columns, column, columnIndex, footerIndex });\n    const { tagName, ...rest } = extraProps || {};\n    const Tag = tagName || 'div';\n    return (\n      <Tag\n        role=\"gridcell\"\n        key={`footer-${footerIndex}-cell-${column.key}`}\n        {...rest}\n        className={cls}\n        style={this.columnManager.getColumnStyle(column.key)}\n        data-key={column.key}\n      >\n        {cell}\n      </Tag>\n    );\n  }\n\n  renderMainTable() {\n    const { width, headerHeight, rowHeight, fixed, ...rest } = this.props;\n    const height = this._getTableHeight();\n\n    let tableWidth = width - this._verticalScrollbarSize;\n    if (fixed) {\n      const columnsWidth = this.columnManager.getColumnsWidth();\n      // make sure `scrollLeft` is always integer to fix a sync bug when scrolling to end horizontally\n      tableWidth = Math.max(Math.round(columnsWidth), tableWidth);\n    }\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        className={this._prefixClass('table-main')}\n        ref={this._setMainTableRef}\n        data={this._data}\n        columns={this.columnManager.getMainColumns()}\n        width={width}\n        height={height}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={tableWidth + (fixed ? this._verticalScrollbarSize : 0)}\n        bodyWidth={tableWidth}\n        headerRenderer={this.renderHeader}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleScroll}\n        onRowsRendered={this._handleRowsRendered}\n      />\n    );\n  }\n\n  renderLeftTable() {\n    if (!this.columnManager.hasLeftFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const offset = this._verticalScrollbarSize || 20;\n    const columnsWidth = this.columnManager.getLeftFrozenColumnsWidth();\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-left')}\n        ref={this._setLeftTableRef}\n        data={this._data}\n        columns={this.columnManager.getLeftFrozenColumns()}\n        width={columnsWidth + offset}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + offset}\n        bodyWidth={columnsWidth + offset}\n        headerRenderer={this.renderHeader}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderRightTable() {\n    if (!this.columnManager.hasRightFrozenColumns()) return null;\n\n    const { width, headerHeight, rowHeight, ...rest } = this.props;\n\n    const containerHeight = this._getFrozenContainerHeight();\n    const columnsWidth = this.columnManager.getRightFrozenColumnsWidth();\n    const scrollbarWidth = this._verticalScrollbarSize;\n    return (\n      <GridTable\n        {...rest}\n        {...this.state}\n        containerStyle={this._getLeftTableContainerStyle(columnsWidth + scrollbarWidth, width, containerHeight)}\n        className={this._prefixClass('table-frozen-right')}\n        ref={this._setRightTableRef}\n        data={this._data}\n        columns={this.columnManager.getRightFrozenColumns()}\n        width={columnsWidth + scrollbarWidth}\n        height={containerHeight}\n        headerHeight={headerHeight}\n        rowHeight={rowHeight}\n        headerWidth={columnsWidth + scrollbarWidth}\n        bodyWidth={columnsWidth}\n        headerRenderer={this.renderHeader}\n        footerRenderer={this.remderFooter}\n        rowRenderer={this.renderRow}\n        onScroll={this._handleVerticalScroll}\n        onRowsRendered={noop}\n      />\n    );\n  }\n\n  renderResizingLine() {\n    const { width, fixed } = this.props;\n    const { resizingKey } = this.state;\n    if (!fixed || !resizingKey) return null;\n\n    const columns = this.columnManager.getMainColumns();\n    const idx = columns.findIndex(column => column.key === resizingKey);\n    const column = columns[idx];\n    const { width: columnWidth, frozen } = column;\n    const leftWidth = this.columnManager.recomputeColumnsWidth(columns.slice(0, idx));\n\n    let left = leftWidth + columnWidth;\n    if (!frozen) {\n      left -= this._scroll.scrollLeft;\n    } else if (frozen === FrozenDirection.RIGHT) {\n      const rightWidth = this.columnManager.recomputeColumnsWidth(columns.slice(idx + 1));\n      if (rightWidth + columnWidth > width - this._verticalScrollbarSize) {\n        left = columnWidth;\n      } else {\n        left = width - this._verticalScrollbarSize - rightWidth;\n      }\n    }\n    const style = {\n      left,\n      height: this._getTableHeight() - this._horizontalScrollbarSize,\n    };\n    return <div className={this._prefixClass('resizing-line')} style={style} />;\n  }\n\n  // renderFooter() {\n  //   const { footerHeight, footerRenderer } = this.props;\n  //   if (footerHeight === 0) return null;\n  //   return (\n  //     <div className={this._prefixClass('footer')} style={{ height: footerHeight }}>\n  //       {renderElement(footerRenderer)}\n  //     </div>\n  //   );\n  // }\n\n  renderEmptyLayer() {\n    const { data, footerHeight, emptyRenderer } = this.props;\n\n    if (data && data.length) return null;\n    const headerHeight = this._getHeaderHeight();\n    return (\n      <div className={this._prefixClass('empty-layer')} style={{ top: headerHeight, bottom: footerHeight }}>\n        {renderElement(emptyRenderer)}\n      </div>\n    );\n  }\n\n  renderOverlay() {\n    const { overlayRenderer } = this.props;\n\n    return <div className={this._prefixClass('overlay')}>{!!overlayRenderer && renderElement(overlayRenderer)}</div>;\n  }\n\n  render() {\n    const {\n      columns,\n      children,\n      width,\n      fixed,\n      data,\n      frozenData,\n      expandColumnKey,\n      disabled,\n      className,\n      style,\n      footerHeight,\n      classPrefix,\n    } = this.props;\n\n    this._resetColumnManager(getColumns(columns, children), fixed);\n\n    if (expandColumnKey) {\n      this._data = this._flattenOnKeys(data, this.getExpandedRowKeys(), this.props.rowKey);\n    } else {\n      this._data = data;\n    }\n    // should be after `this._data` assigned\n    this._calcScrollbarSizes();\n\n    const containerStyle = {\n      ...style,\n      width,\n      height: this._getTableHeight() + footerHeight,\n      position: 'relative',\n    };\n    const cls = cn(classPrefix, className, {\n      [`${classPrefix}--fixed`]: fixed,\n      [`${classPrefix}--expandable`]: !!expandColumnKey,\n      [`${classPrefix}--empty`]: data.length === 0,\n      [`${classPrefix}--has-frozen-rows`]: frozenData.length > 0,\n      [`${classPrefix}--has-frozen-columns`]: this.columnManager.hasFrozenColumns(),\n      [`${classPrefix}--disabled`]: disabled,\n    });\n    return (\n      <div ref={this._setContainerRef} className={cls} style={containerStyle}>\n        {/* {this.renderFooter()} */}\n        {this.renderMainTable()}\n        {this.renderLeftTable()}\n        {this.renderRightTable()}\n        {this.renderResizingLine()}\n        {this.renderEmptyLayer()}\n        {this.renderOverlay()}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const scrollbarSize = this.props.getScrollbarSize();\n    if (scrollbarSize > 0) {\n      this.setState({ scrollbarSize });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { data, height, maxHeight } = this.props;\n    if (data !== prevProps.data) {\n      this._lastScannedRowIndex = -1;\n      this._hasDataChangedSinceEndReached = true;\n    }\n\n    if (maxHeight !== prevProps.maxHeight || height !== prevProps.height) {\n      this._maybeCallOnEndReached();\n    }\n    this._maybeScrollbarPresenceChange();\n  }\n\n  _prefixClass(className) {\n    return `${this.props.classPrefix}__${className}`;\n  }\n\n  _setContainerRef(ref) {\n    this.tableNode = ref;\n  }\n\n  _setMainTableRef(ref) {\n    this.table = ref;\n  }\n\n  _setLeftTableRef(ref) {\n    this.leftTable = ref;\n  }\n\n  _setRightTableRef(ref) {\n    this.rightTable = ref;\n  }\n\n  _getComponent(name) {\n    if (this.props.components && this.props.components[name]) return this.props.components[name];\n    return DEFAULT_COMPONENTS[name];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _getFrozenRowsHeight() {\n    const { frozenData, rowHeight } = this.props;\n    return frozenData.length * rowHeight;\n  }\n\n  _getTableHeight() {\n    const { height, maxHeight, footerHeight } = this.props;\n    let tableHeight = height - footerHeight;\n\n    if (maxHeight > 0) {\n      const frozenRowsHeight = this._getFrozenRowsHeight();\n      const totalRowsHeight = this.getTotalRowsHeight();\n      const headerHeight = this._getHeaderHeight();\n      const totalHeight = headerHeight + frozenRowsHeight + totalRowsHeight + this._horizontalScrollbarSize;\n      tableHeight = Math.min(totalHeight, maxHeight - footerHeight);\n    }\n\n    return tableHeight;\n  }\n\n  _getBodyHeight() {\n    return this._getTableHeight() - this._getHeaderHeight() - this._getFrozenRowsHeight();\n  }\n\n  _getFrozenContainerHeight() {\n    const { maxHeight } = this.props;\n\n    const tableHeight = this._getTableHeight() - (this._data.length > 0 ? this._horizontalScrollbarSize : 0);\n    // in auto height mode tableHeight = totalHeight\n    if (maxHeight > 0) return tableHeight;\n\n    const totalHeight = this.getTotalRowsHeight() + this._getHeaderHeight() + this._getFrozenRowsHeight();\n    return Math.min(tableHeight, totalHeight);\n  }\n\n  _calcScrollbarSizes() {\n    const { fixed, width } = this.props;\n    const { scrollbarSize } = this.state;\n\n    const totalRowsHeight = this.getTotalRowsHeight();\n    const totalColumnsWidth = this.getTotalColumnsWidth();\n\n    const prevHorizontalScrollbarSize = this._horizontalScrollbarSize;\n    const prevVerticalScrollbarSize = this._verticalScrollbarSize;\n\n    if (scrollbarSize === 0) {\n      this._horizontalScrollbarSize = 0;\n      this._verticalScrollbarSize = 0;\n    } else {\n      // we have to set `this._horizontalScrollbarSize` before calling `this._getBodyHeight`\n      if (!fixed || totalColumnsWidth <= width - scrollbarSize) {\n        this._horizontalScrollbarSize = 0;\n        this._verticalScrollbarSize = totalRowsHeight > this._getBodyHeight() ? scrollbarSize : 0;\n      } else {\n        if (totalColumnsWidth > width) {\n          this._horizontalScrollbarSize = scrollbarSize;\n          this._verticalScrollbarSize =\n            totalRowsHeight > this._getBodyHeight() - this._horizontalScrollbarSize ? scrollbarSize : 0;\n        } else {\n          this._horizontalScrollbarSize = 0;\n          this._verticalScrollbarSize = 0;\n          if (totalRowsHeight > this._getBodyHeight()) {\n            this._horizontalScrollbarSize = scrollbarSize;\n            this._verticalScrollbarSize = scrollbarSize;\n          }\n        }\n      }\n    }\n\n    if (\n      prevHorizontalScrollbarSize !== this._horizontalScrollbarSize ||\n      prevVerticalScrollbarSize !== this._verticalScrollbarSize\n    ) {\n      this._scrollbarPresenceChanged = true;\n    }\n  }\n\n  _maybeScrollbarPresenceChange() {\n    if (this._scrollbarPresenceChanged) {\n      const { onScrollbarPresenceChange } = this.props;\n      this._scrollbarPresenceChanged = false;\n\n      onScrollbarPresenceChange({\n        size: this.state.scrollbarSize,\n        horizontal: this._horizontalScrollbarSize > 0,\n        vertical: this._verticalScrollbarSize > 0,\n      });\n    }\n  }\n\n  _maybeCallOnEndReached() {\n    const { onEndReached, onEndReachedThreshold } = this.props;\n    const { scrollTop } = this._scroll;\n    const scrollHeight = this.getTotalRowsHeight();\n    const clientHeight = this._getBodyHeight();\n\n    if (!onEndReached || !clientHeight || !scrollHeight) return;\n    const distanceFromEnd = scrollHeight - scrollTop - clientHeight + this._horizontalScrollbarSize;\n    if (\n      this._lastScannedRowIndex >= 0 &&\n      distanceFromEnd <= onEndReachedThreshold &&\n      (this._hasDataChangedSinceEndReached || scrollHeight !== this._scrollHeight)\n    ) {\n      this._hasDataChangedSinceEndReached = false;\n      this._scrollHeight = scrollHeight;\n      onEndReached({ distanceFromEnd });\n    }\n  }\n\n  _handleScroll(args) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToPosition(args);\n    this.props.onScroll(args);\n\n    if (args.scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleVerticalScroll({ scrollTop }) {\n    const lastScrollTop = this._scroll.scrollTop;\n    this.scrollToTop(scrollTop);\n\n    if (scrollTop > lastScrollTop) this._maybeCallOnEndReached();\n  }\n\n  _handleRowsRendered(args) {\n    this.props.onRowsRendered(args);\n\n    if (args.overscanStopIndex > this._lastScannedRowIndex) {\n      this._lastScannedRowIndex = args.overscanStopIndex;\n      this._maybeCallOnEndReached();\n    }\n  }\n\n  _handleRowHover({ hovered, rowKey }) {\n    this.setState({ hoveredRowKey: hovered ? rowKey : null });\n  }\n\n  _handleRowExpand({ expanded, rowData, rowIndex, rowKey }) {\n    const expandedRowKeys = cloneArray(this.getExpandedRowKeys());\n    if (expanded) {\n      if (!expandedRowKeys.indexOf(rowKey) >= 0) expandedRowKeys.push(rowKey);\n    } else {\n      const index = expandedRowKeys.indexOf(rowKey);\n      if (index > -1) {\n        expandedRowKeys.splice(index, 1);\n      }\n    }\n    // if `expandedRowKeys` is uncontrolled, update internal state\n    if (this.props.expandedRowKeys === undefined) {\n      this.setState({ expandedRowKeys });\n    }\n    this.props.onRowExpand({ expanded, rowData, rowIndex, rowKey });\n    this.props.onExpandedRowsChange(expandedRowKeys);\n  }\n\n  _handleColumnResize({ key }, width) {\n    this.columnManager.setColumnWidth(key, width);\n    this.setState({ resizingWidth: width });\n\n    const column = this.columnManager.getColumn(key);\n    this.props.onColumnResize({ column, width });\n  }\n\n  _handleColumnResizeStart({ key }) {\n    this.setState({ resizingKey: key });\n  }\n\n  _handleColumnResizeStop() {\n    const { resizingKey, resizingWidth } = this.state;\n    this.setState({ resizingKey: null, resizingWidth: 0 });\n\n    if (!resizingKey || !resizingWidth) return;\n\n    const column = this.columnManager.getColumn(resizingKey);\n    this.props.onColumnResizeEnd({ column, width: resizingWidth });\n  }\n\n  _handleColumnSort(event) {\n    const key = event.currentTarget.dataset.key;\n    const { sortBy, sortState, onColumnSort } = this.props;\n    let order = SortOrder.ASC;\n\n    if (sortState) {\n      order = sortState[key] === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    } else if (key === sortBy.key) {\n      order = sortBy.order === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    }\n\n    const column = this.columnManager.getColumn(key);\n    onColumnSort({ column, key, order });\n  }\n}\n\nBaseTable.Column = Column;\nBaseTable.PlaceholderKey = ColumnManager.PlaceholderKey;\n\nBaseTable.defaultProps = {\n  classPrefix: 'BaseTable',\n  rowKey: 'id',\n  data: [],\n  frozenData: [],\n  fixed: false,\n  headerHeight: 50,\n  rowHeight: 50,\n  footerHeight: 0,\n  defaultExpandedRowKeys: [],\n  sortBy: {},\n  useIsScrolling: false,\n  overscanRowCount: 1,\n  onEndReachedThreshold: 500,\n  getScrollbarSize: defaultGetScrollbarSize,\n\n  onScroll: noop,\n  onRowsRendered: noop,\n  onScrollbarPresenceChange: noop,\n  onRowExpand: noop,\n  onExpandedRowsChange: noop,\n  onColumnSort: noop,\n  onColumnResize: noop,\n  onColumnResizeEnd: noop,\n};\n\nBaseTable.propTypes = {\n  /**\n   * Prefix for table's inner className\n   */\n  classPrefix: PropTypes.string,\n  /**\n   * Class name for the table\n   */\n  className: PropTypes.string,\n  /**\n   * Custom style for the table\n   */\n  style: PropTypes.object,\n  /**\n   * A collection of Column\n   */\n  children: PropTypes.node,\n  /**\n   * Columns for the table\n   */\n  columns: PropTypes.arrayOf(PropTypes.shape(Column.propTypes)),\n  /**\n   * The data for the table\n   */\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * The data be frozen to top, `rowIndex` is negative and started from `-1`\n   */\n  frozenData: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * The key field of each data item\n   */\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  /**\n   * The width of the table\n   */\n  width: PropTypes.number.isRequired,\n  /**\n   * The height of the table, will be ignored if `maxHeight` is set\n   */\n  height: PropTypes.number,\n  /**\n   * The max height of the table, the table's height will auto change when data changes,\n   * will turns to vertical scroll if reaches the max height\n   */\n  maxHeight: PropTypes.number,\n  /**\n   * The height of each table row\n   */\n  rowHeight: PropTypes.number.isRequired,\n  /**\n   * The height of the table header, set to 0 to hide the header, could be an array to render multi headers.\n   */\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  /**\n   * The height of the table footer\n   */\n  footerHeight: PropTypes.number,\n  /**\n   * Whether the width of the columns are fixed or flexible\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Whether the table is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Custom renderer on top of the table component\n   */\n  overlayRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom renderer when the length of data is 0\n   */\n  emptyRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom footer renderer, available only if `footerHeight` is larger then 0\n   */\n  footerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom header renderer\n   * The renderer receives props `{ cells, columns, headerIndex }`\n   */\n  headerRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Custom row renderer\n   * The renderer receives props `{ isScrolling, cells, columns, rowData, rowIndex, depth }`\n   */\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  /**\n   * Class name for the table header, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, headerIndex }) => string`\n   */\n  headerClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Class name for the table row, could be a callback to return the class name\n   * The callback is of the shape of `({ columns, rowData, rowIndex }) => string`\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Extra props applied to header element\n   * The handler is of the shape of `({ columns, headerIndex }) object`\n   */\n  headerProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to header cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, headerIndex }) => object`\n   */\n  headerCellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row element\n   * The handler is of the shape of `({ columns, rowData, rowIndex }) => object`\n   */\n  rowProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to row cell element\n   * The handler is of the shape of `({ columns, column, columnIndex, rowData, rowIndex }) => object`\n   */\n  cellProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * Extra props applied to ExpandIcon component\n   * The handler is of the shape of `({ rowData, rowIndex, depth, expandable, expanded }) => object`\n   */\n  expandIconProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /**\n   * The key for the expand column which render the expand icon if the data is a tree\n   */\n  expandColumnKey: PropTypes.string,\n  /**\n   * Default expanded row keys when initialize the table\n   */\n  defaultExpandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * Controlled expanded row keys\n   */\n  expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  /**\n   * A callback function when expand or collapse a tree node\n   * The handler is of the shape of `({ expanded, rowData, rowIndex, rowKey }) => *`\n   */\n  onRowExpand: PropTypes.func,\n  /**\n   * A callback function when the expanded row keys changed\n   * The handler is of the shape of `(expandedRowKeys) => *`\n   */\n  onExpandedRowsChange: PropTypes.func,\n  /**\n   * The sort state for the table, will be ignored if `sortState` is set\n   */\n  sortBy: PropTypes.shape({\n    /**\n     * Sort key\n     */\n    key: PropTypes.string,\n    /**\n     * Sort order\n     */\n    order: PropTypes.oneOf([SortOrder.ASC, SortOrder.DESC]),\n  }),\n  /**\n   * Multiple columns sort state for the table\n   *\n   * example:\n   * ```js\n   * {\n   *   'column-0': SortOrder.ASC,\n   *   'column-1': SortOrder.DESC,\n   * }\n   * ```\n   */\n  sortState: PropTypes.object,\n  /**\n   * A callback function for the header cell click event\n   * The handler is of the shape of `({ column, key, order }) => *`\n   */\n  onColumnSort: PropTypes.func,\n  /**\n   * A callback function when resizing the column width\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * A callback function when resizing the column width ends\n   * The handler is of the shape of `({ column, width }) => *`\n   */\n  onColumnResizeEnd: PropTypes.func,\n  /**\n   * Adds an additional isScrolling parameter to the row renderer.\n   * This parameter can be used to show a placeholder row while scrolling.\n   */\n  useIsScrolling: PropTypes.bool,\n  /**\n   * Number of rows to render above/below the visible bounds of the list\n   */\n  overscanRowCount: PropTypes.number,\n  /**\n   * Custom scrollbar size measurement\n   */\n  getScrollbarSize: PropTypes.func,\n  /**\n   * A callback function when scrolling the table\n   * The handler is of the shape of `({ scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested }) => *`\n   *\n   * `scrollLeft` and `scrollTop` are numbers.\n   *\n   * `horizontalDirection` and `verticalDirection` are either `forward` or `backward`.\n   *\n   * `scrollUpdateWasRequested` is a boolean. This value is true if the scroll was caused by `scrollTo*`,\n   * and false if it was the result of a user interaction in the browser.\n   */\n  onScroll: PropTypes.func,\n  /**\n   * A callback function when scrolling the table within `onEndReachedThreshold` of the bottom\n   * The handler is of the shape of `({ distanceFromEnd }) => *`\n   */\n  onEndReached: PropTypes.func,\n  /**\n   * Threshold in pixels for calling `onEndReached`.\n   */\n  onEndReachedThreshold: PropTypes.number,\n  /**\n   * A callback function with information about the slice of rows that were just rendered\n   * The handler is of the shape of `({ overscanStartIndex, overscanStopIndex, startIndex， stopIndex }) => *`\n   */\n  onRowsRendered: PropTypes.func,\n  /**\n   * A callback function when the scrollbar presence state changed\n   * The handler is of the shape of `({ size, vertical, horizontal }) => *`\n   */\n  onScrollbarPresenceChange: PropTypes.func,\n  /**\n   * A object for the row event handlers\n   * Each of the keys is row event name, like `onClick`, `onDoubleClick` and etc.\n   * Each of the handlers is of the shape of `({ rowData, rowIndex, rowKey, event }) => object`\n   */\n  rowEventHandlers: PropTypes.object,\n  /**\n   * A object for the custom components, like `ExpandIcon` and `SortIndicator`\n   */\n  components: PropTypes.shape({\n    TableCell: PropTypes.func,\n    TableHeaderCell: PropTypes.func,\n    TableFooterCell: PropTypes.func,\n    ExpandIcon: PropTypes.func,\n    SortIndicator: PropTypes.func,\n  }),\n};\n\nexport default BaseTable;\n"],"file":"BaseTable.js"}